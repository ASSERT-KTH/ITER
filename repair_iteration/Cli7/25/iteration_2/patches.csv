bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(abuilder,  opt);	  gbuilder.addArgument(argument,    opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
2	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  opt,  type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  opt,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  opt,  type);	  gbuilder.addArgument(argument,    opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
3	[BUG]  [BUGGY]  abuilder.addArgument(argument,  opt);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.addArgument(argument,  opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.addArgument(argument,  opt);	  gbuilder.addArgument(argument,    opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
4	[BUG]  [BUGGY]  obuilder  =  obuilder.createOption(type);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  obuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  obuilder.createOption(type);	  argument    =    obuilder.createOption(type);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	82	None	replace
5	[BUG]  [BUGGY]  obuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.createOption(type);	  argument    =    obuilder.createOption(type);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
6	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
7	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
8	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	56	None	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
10	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
12	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
14	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
15	[BUG]  [BUGGY]  abuilder  =  gbuilder.create();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  gbuilder.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  gbuilder.create();	  abuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	1	None	replace
16	[BUG]  [BUGGY]  abuilder  =  obuilder.create();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  obuilder.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  obuilder.create();	  abuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	1	None	replace
17	[BUG]  [BUGGY]  abuilder  =  type.create();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  type.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  type.create();	  abuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	1	None	replace
18	[BUG]  [BUGGY]  if(required)  {  if(type!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type!=  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type!=  '.')  {  abuilder.reset();  }	          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
19	[BUG]  [BUGGY]  if(required)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
20	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	57	None	replace
21	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
22	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
23	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
24	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
25	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
26	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
27	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
28	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
29	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	41	None	add
30	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
31	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
32	[BUG]  [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(opt));  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(opt));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.withValidator(validator(opt));	  Argument    argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	111	None	replace
33	[BUG]  [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(type),  required);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(type),  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.withValidator(validator(type),  required);	  Argument    argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	111	None	replace
34	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	105	1	add
35	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	105	1	add
36	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	105	None	add
37	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.with  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.with  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.with	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
38	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	105	None	add
39	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
40	[BUG]  [BUGGY]  if(required)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(required)    {    if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
41	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	85	None	replace
42	[BUG]  [BUGGY]  abuilder.set();  abuilder.withValidator(validator(opt));  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.set();  abuilder.withValidator(validator(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.set();  abuilder.withValidator(validator(opt));	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
43	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
44	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
45	[BUG]  [BUGGY]  if(type  ==  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type!=    '@')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	114	None	replace
46	[BUG]  [BUGGY]  if(required)  {  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  if(required)  {  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
49	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
50	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
51	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
52	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
53	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
54	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
55	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
56	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	54	None	add
57	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
58	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
59	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	39	None	add
60	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
61	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
62	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	39	None	add
63	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
64	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
65	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
66	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
67	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
68	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
69	[BUG]  [BUGGY]  if(required)  {  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
70	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	8	None	replace
71	[BUG]  [BUGGY]  if(gbuilder!=  null)  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(gbuilder!=  null)  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(gbuilder!=  null)  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	8	None	replace
72	[BUG]  [BUGGY]  argument  =  validator(type).withValidator(argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  validator(type).withValidator(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  validator(type).withValidator(argument);	  argument    =    argument.withValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
73	[BUG]  [BUGGY]  argument  =  validator.withValidator(argument);  [CE]  cannot  find  symbol  validator  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  validator.withValidator(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  validator.withValidator(argument);	  argument    =    argument.withValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol  validator	19	None	replace
74	[BUG]  [BUGGY]  argument  =  validater(type).withValidator(argument);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  validater(type).withValidator(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  validater(type).withValidator(argument);	  argument    =    argument.withValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
75	[BUG]  [BUGGY]  abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
76	[BUG]  [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
77	[BUG]  [BUGGY]  obuilder.reset();  [CE]  variable  argument  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	88	None	replace
78	[BUG]  [BUGGY]  if(type!=  '.')  {  if(type!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  if(type!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  if(type!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    'n')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
79	[BUG]  [BUGGY]  if(type!=  '*')  {  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '*')  {  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '*')  {  if(opt!=  '.')  {  abuilder.reset();  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
80	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(opt!=  '.')  {  abuilder.reset();  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
81	[BUG]  [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(required)    {    if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
82	[BUG]  [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(type!=  '[')  {  abuilder.reset();  }	  if(required)    {    if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
83	[BUG]  [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();	          gbuilder.reset();    OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
84	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder();	          gbuilder.reset();    OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
85	[BUG]  [BUGGY]  gbuilder.setOption(options,  type,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  type,  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type,  required);	  gbuilder.setOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
86	[BUG]  [BUGGY]  gbuilder.setOption(options,  type,  needed);  [CE]  cannot  find  symbol  needed  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  type,  needed);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type,  needed);	  gbuilder.setOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol  needed	61	None	replace
87	[BUG]  [BUGGY]  gbuilder.setOption(options,  type,  options);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  type,  options);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type,  options);	  gbuilder.setOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
88	[BUG]  [BUGGY]  gbuilder.setOption(options,  type,  needs);  [CE]  cannot  find  symbol  needs  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  type,  needs);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type,  needs);	  gbuilder.setOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol  needs	61	None	replace
89	[BUG]  [BUGGY]  if(argument!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(argument!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(argument!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(obuilder!=    null)    {    if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
90	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(obuilder!=    null)    {    if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
91	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  options.createOption(abuilder,  type);	  ArgumentBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
92	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.createOption(options);	  ArgumentBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
93	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(abuilder,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(abuilder,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  options.createOption(abuilder,  required);	  ArgumentBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
94	[BUG]  [BUGGY]  abuilder.reset();  abuilder.set();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  abuilder.set();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.set();	          gbuilder.reset();    gbuilder.set();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
95	[BUG]  [BUGGY]  gbuilder.set();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.set();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.set();	          gbuilder.reset();    gbuilder.set();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
96	[BUG]  [BUGGY]  nbuilder.reset();  nbuilder.set();  [CE]  cannot  find  symbol  nbuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  nbuilder.reset();  nbuilder.set();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	nbuilder.reset();  nbuilder.set();	          gbuilder.reset();    gbuilder.set();    	non-compiled	[CE]  cannot  find  symbol  nbuilder	122	None	replace
97	[BUG]  [BUGGY]  if(type!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	118	None	replace
98	[BUG]  [BUGGY]  if(type!=  '['  ||  type  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '['  ||  type  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '['  ||  type  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	118	None	replace
99	[BUG]  [BUGGY]  obuilder  =  obuilder.createOption();  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  obuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  obuilder.createOption();	  argument    =    obuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	84	None	replace
100	[BUG]  [BUGGY]  obuilder.createOption();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.createOption();	  argument    =    obuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
101	[BUG]  [BUGGY]  abuilder.withArgument(argument,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.withArgument(argument,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.withArgument(argument,  type);	  abuilder.withArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
102	[BUG]  [BUGGY]  abuilder.withArgument(argument,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.withArgument(argument,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.withArgument(argument,  required);	  abuilder.withArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
103	[BUG]  [BUGGY]  abuilder.withArgument(argument,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.withArgument(argument,  null);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.withArgument(argument,  null);	  abuilder.withArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
104	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
105	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
106	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	43	None	add
107	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
108	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
109	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
110	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
111	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	43	None	add
112	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withShortName(String.valueOf(opt),  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  abuilder.withShortName(String.valueOf(opt),  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.withShortName(String.valueOf(opt),  type);	  abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
113	[BUG]  [BUGGY]  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  [CE]  variable  argument  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  obuilder.withShortName(String.valueOf(opt));	  abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	32	None	replace
114	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withShortName(String.valueOf(type));  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  abuilder.withShortName(String.valueOf(type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.withShortName(String.valueOf(type));	  abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
115	[BUG]  [BUGGY]  options  =  abuilder.createOption(type);  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  options  =  abuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	options  =  abuilder.createOption(type);	  options    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	78	None	replace
116	[BUG]  [BUGGY]  options  =  abuilder.createOption(argument);  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  options  =  abuilder.createOption(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	options  =  abuilder.createOption(argument);	  options    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	78	None	replace
117	[BUG]  [BUGGY]  options  =  abuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  options  =  abuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	options  =  abuilder.createOption(opt);	  options    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	78	None	replace
118	[BUG]  [BUGGY]  argument  =  opt.withValidator(validator(abuilder));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  opt.withValidator(validator(abuilder));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  opt.withValidator(validator(abuilder));	  argument    =    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	96	None	replace
119	[BUG]  [BUGGY]  argument  =  opt.withValidator(abuilder.withOption(type));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  opt.withValidator(abuilder.withOption(type));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  opt.withValidator(abuilder.withOption(type));	  argument    =    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
120	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(opt);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(opt);	  Argument    argument    =    abuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	5	None	replace
121	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(options);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(options);	  Argument    argument    =    abuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	5	None	replace
122	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createArgument();  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createArgument();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createArgument();	  Argument    argument    =    abuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	5	None	replace
123	[BUG]  [BUGGY]  abuilder.createOption(options,  options);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.createOption(options,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.createOption(options,  options);	  abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
124	[BUG]  [BUGGY]  abuilder.createOption(options,  required);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.createOption(options,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.createOption(options,  required);	  abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
125	[BUG]  [BUGGY]  abuilder.createOption(options,  type);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.createOption(options,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.createOption(options,  type);	  abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
126	[BUG]  [BUGGY]  argument  =  opt.createOption(abuilder,  type);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  opt.createOption(abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  opt.createOption(abuilder,  type);	  argument    =    abuilder.createOption(opt,    type);    	non-compiled	[CE]  char  cannot  be  dereferenced	110	None	replace
127	[BUG]  [BUGGY]  argument  =  abuilder.createOption(opt,  type,  options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.createOption(opt,  type,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(opt,  type,  options);	  argument    =    abuilder.createOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
128	[BUG]  [BUGGY]  argument  =  abuilder.createOption(opt,  type,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.createOption(opt,  type,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(opt,  type,  required);	  argument    =    abuilder.createOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
129	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
130	[BUG]  [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
131	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
132	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
133	[BUG]  [BUGGY]  argument  =  opt.createOption(gbuilder);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  opt.createOption(gbuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  opt.createOption(gbuilder);	  argument    =    gbuilder.createOption(opt);    	non-compiled	[CE]  char  cannot  be  dereferenced	100	None	replace
134	[BUG]  [BUGGY]  obuilder  =  gbuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  gbuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  gbuilder.createOption(opt);	  argument    =    gbuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	100	None	replace
135	[BUG]  [BUGGY]  gbuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.createOption(type);	  argument    =    gbuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                gbuilder.reset();        gbuilder.reset();    gbuilder.reset();  gbuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	71	1	add
137	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gbuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    gbuilder.reset();  gbuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	71	1	add
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  abuilder.reset();  gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                gbuilder.reset();        gbuilder.reset();    abuilder.reset();  gbuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	71	1	add
139	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  abuilder.reset();  gbuilder.reset();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  abuilder.reset();  gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    abuilder.reset();  gbuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	71	1	add
140	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gBuilder.reset();  [CE]  cannot  find  symbol  gBuilder  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gBuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    gbuilder.reset();  gBuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol  gBuilder	71	None	add
141	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gbuilder.re  reset();  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.reset();  gbuilder.re  reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    gbuilder.reset();  gbuilder.re  reset();	  	non-compiled	[CE]  ';'  expected	71	None	add
142	[BUG]  [BUGGY]  abuilder.setOption(gbuilder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.setOption(gbuilder);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.setOption(gbuilder);	  gbuilder.setOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
143	[BUG]  [BUGGY]  gbuilder.setOption(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(abuilder,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(abuilder,  type);	  gbuilder.setOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
144	[BUG]  [BUGGY]  gbuilder.setOption(abuilder.options);  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(abuilder.options);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(abuilder.options);	  gbuilder.setOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol  options	120	None	replace
145	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.reset();  }	  if(type!=    '.')    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	7	None	replace
146	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '.')  {  abuilder.reset();  }	  if(type!=    '.')    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	7	None	replace
147	[BUG]  [BUGGY]  if(type!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }	  if(opt!=    '[')    {    obuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
148	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
149	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
150	[BUG]  [BUGGY]  if(gbuilder!=  null)  {  argument  =  gbuilder.create();  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(gbuilder!=  null)  {  argument  =  gbuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(gbuilder!=  null)  {  argument  =  gbuilder.create();  }	  argument    =    gbuilder.create();    	non-compiled	[CE]  incompatible  types	117	None	replace
151	[BUG]  [BUGGY]  if(gbuilder!=  null)  {  argument  =  gbuilder.create();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(gbuilder!=  null)  {  argument  =  gbuilder.create();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(gbuilder!=  null)  {  argument  =  gbuilder.create();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  argument    =    gbuilder.create();    	non-compiled	[CE]  incompatible  types	117	None	replace
152	[BUG]  [BUGGY]  obuilder.addOption(OptionBuilder.createWithType(type));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.addOption(OptionBuilder.createWithType(type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.addOption(OptionBuilder.createWithType(type));	  obuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	109	None	replace
153	[BUG]  [BUGGY]  abuilder.addOption(OptionBuilder.create());  [CE]  cannot  find  symbol  OptionBuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.addOption(OptionBuilder.create());  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.addOption(OptionBuilder.create());	  obuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	109	None	replace
154	[BUG]  [BUGGY]  obuilder.addOption(OptionBuilder.create(type));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.addOption(OptionBuilder.create(type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.addOption(OptionBuilder.create(type));	  obuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	109	None	replace
155	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.withArgument(argument);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  abuilder.withArgument(argument);  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  abuilder.withArgument(argument);  }	  if(abuilder!=    null)    {    arguments    =    abuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
156	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.create();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  abuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  abuilder.create();  }	  if(abuilder!=    null)    {    arguments    =    abuilder.create();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	116	None	replace
157	[BUG]  [BUGGY]  abuilder.addArgument(argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.addArgument(argument);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.addArgument(argument);	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
158	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(abuilder,  type);	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
159	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  abuilder);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  abuilder);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  abuilder);	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
160	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  abuilder.reset();  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	6	None	replace
161	[BUG]  [BUGGY]  if(gbuilder!=  null)  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(gbuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(gbuilder!=  null)  {  abuilder.reset();  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	6	None	replace
162	[BUG]  [BUGGY]  abuilder.set();  abuilder.withValidator(validator(type));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.set();  abuilder.withValidator(validator(type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.set();  abuilder.withValidator(validator(type));	  if(type!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
163	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }	  if(type!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
164	[BUG]  [BUGGY]  abuilder  =  gbuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  gbuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  gbuilder.createOption(opt);	  abuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	48	None	replace
165	[BUG]  [BUGGY]  abuilder  =  obuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  obuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  obuilder.createOption(opt);	  abuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	48	None	replace
166	[BUG]  [BUGGY]  abuilder  =  type.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  type.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  type.createOption(opt);	  abuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	48	None	replace
167	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
168	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
169	[BUG]  [BUGGY]  if(obuilder.isOptional())  {  argument  =  abuilder.create();  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder.isOptional())  {  argument  =  abuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder.isOptional())  {  argument  =  abuilder.create();  }	  if(obuilder.isOptional())    {    argument    =    obuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
170	[BUG]  [BUGGY]  obuilder.isOptional())  {  argument  =  obuilder.create();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.isOptional())  {  argument  =  obuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.isOptional())  {  argument  =  obuilder.create();  }	  if(obuilder.isOptional())    {    argument    =    obuilder.create();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
171	[BUG]  [BUGGY]  obuilder.isOptional();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.isOptional();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.isOptional();	  if(obuilder.isOptional())    {    argument    =    obuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
172	[BUG]  [BUGGY]  gbuilder.setOption(options,  required,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  required,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  required,  type);	  gbuilder.setOption(options,    required);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
173	[BUG]  [BUGGY]  gbuilder.setOption(options,  options,  required);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  options,  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  options,  required);	  gbuilder.setOption(options,    required);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
174	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	52	1	add
175	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	52	1	add
176	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	52	None	add
177	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	52	1	add
178	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	52	1	add
179	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	52	1	add
180	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	52	1	add
181	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	52	None	add
182	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	18	None	replace
183	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  options);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  type,  options);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
184	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  opt);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  type,  opt);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
185	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  opt,  type);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
186	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  option);  [CE]  cannot  find  symbol  option  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  option);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  type,  option);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  cannot  find  symbol  option	21	None	replace
187	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type,  required);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type,  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  type,  required);	  gbuilder.addOption(OptionBuilder.create(),    type);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	51	None	replace
188	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type,  options);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type,  options);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  type,  options);	  gbuilder.addOption(OptionBuilder.create(),    type);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	51	None	replace
189	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type,  option);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type,  option);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  type,  option);	  gbuilder.addOption(OptionBuilder.create(),    type);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	51	None	replace
190	[BUG]  [BUGGY]  gbuilder.withOption(type,  opt);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.withOption(type,  opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.withOption(type,  opt);	  gbuilder.withOption(opt);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	112	None	replace
191	[BUG]  [BUGGY]  gbuilder.withOption(type);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.withOption(type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.withOption(type);	  gbuilder.withOption(opt);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	112	None	replace
192	[BUG]  [BUGGY]  gbuilder.withOption(opt,  type);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.withOption(opt,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.withOption(opt,  type);	  gbuilder.withOption(opt);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	112	None	replace
193	[BUG]  [BUGGY]  gbuilder.withOption(option,  type);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.withOption(option,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.withOption(option,  type);	  gbuilder.withOption(opt);    	non-compiled	[CE]  cannot  find  symbol  option	112	None	replace
194	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }	  if(opt!=    '[')    {    abuilder.reset();    obuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	91	None	replace
195	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }	  if(opt!=    '[')    {    abuilder.reset();    obuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
197	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
199	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
200	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	64	None	add
201	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	64	None	add
202	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(	  	non-compiled	[CE]  ')'  expected	64	None	add
203	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type,  argument));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type,  argument));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type,  argument));	  argument    =    abuilder.withValidator(validator(argument));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	97	None	replace
204	[BUG]  [BUGGY]  abuilder.reset();  abuilder.init();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  abuilder.init();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.init();	          gbuilder.reset();    gbuilder.init();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
205	[BUG]  [BUGGY]  nbuilder.reset();  nbuilder.init();  [CE]  cannot  find  symbol  nbuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  nbuilder.reset();  nbuilder.init();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	nbuilder.reset();  nbuilder.init();	          gbuilder.reset();    gbuilder.init();    	non-compiled	[CE]  cannot  find  symbol  nbuilder	124	None	replace
206	[BUG]  [BUGGY]  gbuilder.init();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.init();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.init();	          gbuilder.reset();    gbuilder.init();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
207	[BUG]  [BUGGY]  obuilder  =  abuilder.createOption(type);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  abuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  abuilder.createOption(type);	  obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	47	None	replace
208	[BUG]  [BUGGY]  abuilder  =  abuilder.createOption(type);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  abuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  abuilder.createOption(type);	  obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	47	None	replace
209	[BUG]  [BUGGY]  gbuilder  =  abuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  gbuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder  =  abuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder  =  abuilder.createOption(opt);	  obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gbuilder	47	None	replace
210	[BUG]  [BUGGY]  argument  =  opt.createOption(obuilder);  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  opt.createOption(obuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  opt.createOption(obuilder);	  argument    =    obuilder.createOption(opt);    	non-compiled	[CE]  char  cannot  be  dereferenced	98	None	replace
211	[BUG]  [BUGGY]  obuilder  =  obuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  obuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  obuilder.createOption(opt);	  argument    =    obuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	98	None	replace
212	[BUG]  [BUGGY]  obuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.createOption(opt);	  argument    =    obuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
213	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  type,  opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  type,  opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  type,  opt);	  gbuilder.addArgument(argument,    type);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
214	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  type,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  type,  options);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  type,  options);	  gbuilder.addArgument(argument,    type);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
215	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  type,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  type,  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  type,  required);	  gbuilder.addArgument(argument,    type);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
216	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  type,  required);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
217	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required,  options);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  required,  options);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
218	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required,  opt);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required,  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  required,  opt);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
219	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required,  option);  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required,  option);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  required,  option);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  cannot  find  symbol  option	20	None	replace
220	[BUG]  [BUGGY]  abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
221	[BUG]  [BUGGY]  gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
222	[BUG]  [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
223	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(abuilder,  type);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  options.createOption(abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(abuilder,  type);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	26	None	replace
224	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(abuilder,  gbuilder);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  options.createOption(abuilder,  gbuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(abuilder,  gbuilder);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	26	None	replace
225	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(type,  abuilder);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  options.createOption(type,  abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(type,  abuilder);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	26	None	replace
226	[BUG]  [BUGGY]  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '-')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
227	[BUG]  [BUGGY]  if(type!=  '.')  {  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '-')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
228	[BUG]  [BUGGY]  obuilder  =  gbuilder.createOption();  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  gbuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  gbuilder.createOption();	  obuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	4	None	replace
229	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type    >>    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	70	None	replace
230	[BUG]  [BUGGY]  if(opt!=  null)  {  argument  =  opt.createOption(abuilder);  }  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  null)  {  argument  =  opt.createOption(abuilder);  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  null)  {  argument  =  opt.createOption(abuilder);  }	  argument    =    opt.createOption(abuilder);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
231	[BUG]  [BUGGY]  if(opt!=  null)  {  argument  =  opt.createOption(abuilder);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  null)  {  argument  =  opt.createOption(abuilder);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  null)  {  argument  =  opt.createOption(abuilder);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  argument    =    opt.createOption(abuilder);    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
232	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  abuilder.reset();    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	16	None	replace
233	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
234	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
236	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
237	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	66	None	add
238	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	66	None	add
239	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(	  	non-compiled	[CE]  ')'  expected	66	None	add
240	[BUG]  [BUGGY]  if(type!=  '.')  {  opt  =  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]              IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  opt  =  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  opt  =  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >>    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  incompatible  types	45	None	replace
241	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  if(opt!=  '.')  {  abuilder.reset();  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >>    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
242	[BUG]  [BUGGY]  gbuilder.setOption(abuilder,  argument);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(abuilder,  argument);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(abuilder,  argument);	  gbuilder.setOption(argument);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
243	[BUG]  [BUGGY]  abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
244	[BUG]  [BUGGY]  nbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [CE]  cannot  find  symbol  nbuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  nbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	nbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol  nbuilder	89	None	replace
245	[BUG]  [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
246	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(opt),  type);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(opt),  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(opt),  type);	  gbuilder.addOption(OptionBuilder.create(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	121	None	replace
247	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(opt,  type));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(opt,  type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(opt,  type));	  gbuilder.addOption(OptionBuilder.create(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	121	None	replace
248	[BUG]  [BUGGY]  argument  =  options.createOption(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  options.createOption(abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  options.createOption(abuilder,  type);	  argument    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
249	[BUG]  [BUGGY]  abuilder  =  options.createOption(options);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  options.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  options.createOption(options);	  argument    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	25	None	replace
250	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type),  argument);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addValidator(validator(type),  argument);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(type),  argument);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
251	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type),  required);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addValidator(validator(type),  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(type),  required);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
252	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type),  abuilder);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addValidator(validator(type),  abuilder);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(type),  abuilder);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
253	[BUG]  [BUGGY]  gbuilder.setOption(options,  options,  type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  options,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  options,  type);	  gbuilder.setOption(options,    options);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
254	[BUG]  [BUGGY]  gbuilder.setOption(options,  options,  needed);  [CE]  cannot  find  symbol  needed  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  options,  needed);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  options,  needed);	  gbuilder.setOption(options,    options);    	non-compiled	[CE]  cannot  find  symbol  needed	63	None	replace
255	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(abuilder.type));  [CE]  cannot  find  symbol  type  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(abuilder.type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(abuilder.type));	  gbuilder.addOption(OptionBuilder.create(type));    	non-compiled	[CE]  cannot  find  symbol  type	50	None	replace
256	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(type),  required);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(type),  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(type),  required);	  gbuilder.addOption(OptionBuilder.create(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	50	None	replace
257	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(type,  required));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(type,  required));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(type,  required));	  gbuilder.addOption(OptionBuilder.create(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	50	None	replace
258	[BUG]  [BUGGY]  argumentBuilder  =  abuilder.createOption();  [CE]  cannot  find  symbol  argumentBuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argumentBuilder  =  abuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argumentBuilder  =  abuilder.createOption();	  ArgumentBuilder    obuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol  argumentBuilder	101	None	replace
259	[BUG]  [BUGGY]  obuilder.withArgument(type);  [CE]  method  withArgument  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.withArgument(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.withArgument(type);	  obuilder.withArgument(argument);    	non-compiled	[CE]  method  withArgument  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;	15	None	replace
260	[BUG]  [BUGGY]  obuilder.withArgument(opt);  [CE]  method  withArgument  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.withArgument(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.withArgument(opt);	  obuilder.withArgument(argument);    	non-compiled	[CE]  method  withArgument  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;	15	None	replace
261	[BUG]  [BUGGY]  obuilder.withArgument(abuilder);  [CE]  method  withArgument  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.withArgument(abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.withArgument(abuilder);	  obuilder.withArgument(argument);    	non-compiled	[CE]  method  withArgument  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;	15	None	replace
262	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(type));  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(type));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
263	[BUG]  [BUGGY]  abuilder.reset();  Gbuilder.reset();  [CE]  cannot  find  symbol  Gbuilder  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  Gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  Gbuilder.reset();	          gbuilder.reset();    Gbuilder.reset();    	non-compiled	[CE]  cannot  find  symbol  Gbuilder	123	None	replace
264	[BUG]  [BUGGY]  abuilder.reset();  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();	          gbuilder.reset();    Gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	123	None	replace
265	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  Gbuilder.reset();  }  [CE]  cannot  find  symbol  Gbuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  Gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  Gbuilder.reset();  }	          gbuilder.reset();    Gbuilder.reset();    	non-compiled	[CE]  cannot  find  symbol  Gbuilder	123	None	replace
266	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
267	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMaximum(1);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMaximum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMaximum(1);  }	  if(type!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
268	[BUG]  [BUGGY]  gbuilder.setOption(abuilder.type);  [CE]  cannot  find  symbol  type  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(abuilder.type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(abuilder.type);	  gbuilder.setOption(type);    	non-compiled	[CE]  cannot  find  symbol  type	29	None	replace
269	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.createOption(type);	  ArgumentBuilder    obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
270	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  opt.createOption(abuilder);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  opt.createOption(abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  opt.createOption(abuilder);	  ArgumentBuilder    obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  char  cannot  be  dereferenced	99	None	replace
271	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  gbuilder.createOption(opt);	  ArgumentBuilder    obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
272	[BUG]  [BUGGY]  argument  =  options.createOption(type,  abuilder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  options.createOption(type,  abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  options.createOption(type,  abuilder);	  argument    =    abuilder.createOption(type,    options);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
273	[BUG]  [BUGGY]  abuilder  =  options.createOption(type,  abuilder);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  options.createOption(type,  abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  options.createOption(type,  abuilder);	  argument    =    abuilder.createOption(type,    options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	22	None	replace
274	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
275	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
276	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  argument,  null);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  argument,  null);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  argument,  null);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	95	None	replace
277	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt,  argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  opt,  argument);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	95	None	replace
278	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(argument),  type);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(argument),  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(argument),  type);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	95	None	replace
279	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  arguments);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  arguments);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  cannot  find  symbol  arguments	95	None	replace
280	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(type,  options);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createOption(type,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(type,  options);	  Argument    argument    =    abuilder.createOption(type);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	24	None	replace
281	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(options,  type);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createOption(options,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(options,  type);	  Argument    argument    =    abuilder.createOption(type);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	24	None	replace
282	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(opt,  type);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createOption(opt,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(opt,  type);	  Argument    argument    =    abuilder.createOption(type);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	24	None	replace
283	[BUG]  [BUGGY]  abuilder  =  gbuilder.createOption();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  gbuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  gbuilder.createOption();	  abuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	3	None	replace
284	[BUG]  [BUGGY]  abuilder  =  type.createOption();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  type.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  type.createOption();	  abuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	3	None	replace
285	[BUG]  [BUGGY]  abuilder  =  obuilder.createOption();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  obuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  obuilder.createOption();	  abuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	3	None	replace
286	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }	  if(abuilder!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
287	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  required);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
288	[BUG]  [BUGGY]  abuilder.addArgument(argument,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.addArgument(argument,  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.addArgument(argument,  type);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
289	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
290	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
291	[BUG]  [BUGGY]  obuilder  =  gbuilder.create();  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  gbuilder.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  gbuilder.create();	  obuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	79	None	replace
292	[BUG]  [BUGGY]  gbuilder  =  abuilder.create();  [CE]  cannot  assign  a  value  to  final  variable  gbuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder  =  abuilder.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder  =  abuilder.create();	  obuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gbuilder	79	None	replace
293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
294	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
296	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
297	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
298	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
299	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	68	None	add
300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
301	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
302	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.create();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.create();	  ArgumentBuilder    obuilder    =    gbuilder.create();    	non-compiled	[CE]  incompatible  types	83	None	replace
303	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  gbuilder.createOption(type);	  ArgumentBuilder    obuilder    =    gbuilder.create();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
304	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(opt));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(opt));	  gbuilder.addOption(OptionBuilder.createWithType(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	49	None	replace
305	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type),  required);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type),  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(type),  required);	  gbuilder.addOption(OptionBuilder.createWithType(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	49	None	replace
306	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type,  required));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type,  required));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(type,  required));	  gbuilder.addOption(OptionBuilder.createWithType(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	49	None	replace
307	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(abuilder,  type);	  OptionBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
308	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder,  required);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(abuilder,  required);	  OptionBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
309	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  abuilder.createOption(options);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  abuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  abuilder.createOption(options);	  OptionBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
310	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  createOption(opt);  [CE]  method  createOption  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  createOption(opt);	  argument    =    opt.createOption(abuilder);    	non-compiled	[CE]  method  createOption  in  class  PatternBuilder  cannot  be  applied  to  given  types;	46	None	replace
311	[BUG]  [BUGGY]  obuilder  =  abuilder.createOption(opt,  type);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  abuilder.createOption(opt,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  abuilder.createOption(opt,  type);	  obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	47	None	replace
312	[BUG]  [BUGGY]  gbuilder.reset();  OptionsBuilder  obuilder  =  OptionBuilder.create();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.reset();  OptionsBuilder  obuilder  =  OptionBuilder.create();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.reset();  OptionsBuilder  obuilder  =  OptionBuilder.create();	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
313	[BUG]  [BUGGY]  argument  =  obuilder.createOption(argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  obuilder.createOption(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption(argument);	  argument    =    obuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
314	[BUG]  [BUGGY]  argument  =  obuilder.createOption(opt,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  obuilder.createOption(opt,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption(opt,  type);	  argument    =    obuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
315	[BUG]  [BUGGY]  if(options!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(options!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(options!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
316	[BUG]  [BUGGY]  argument  =  gbuilder.createOption(opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  gbuilder.createOption(opt,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  gbuilder.createOption(opt,  type);	  argument    =    abuilder.createOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
317	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(options!=  null)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
318	[BUG]  [BUGGY]  if(type!=  '*')  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '*')  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '*')  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
319	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	8	None	replace
320	[BUG]  [BUGGY]  if(type!=  '*')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '*')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '*')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
321	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type,  options));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type,  options));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(type,  options));	  gbuilder.addOption(OptionBuilder.createWithType(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	49	None	replace
322	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(options));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(options));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(options));	  gbuilder.addOption(OptionBuilder.createWithType(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	49	None	replace
323	[BUG]  [BUGGY]  gbuilder.reset();  abuilder.init();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.reset();  abuilder.init();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.reset();  abuilder.init();	          gbuilder.reset();    gbuilder.init();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
324	[BUG]  [BUGGY]  gbuilder.reset();  obuilder.init();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.reset();  obuilder.init();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.reset();  obuilder.init();	          gbuilder.reset();    gbuilder.init();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
325	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
326	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
327	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.set();  obuilder.withValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.set();  obuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.set();  obuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
328	[BUG]  [BUGGY]  Argument  argument  =  obuilder.withValidator(validator(type));  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  obuilder.withValidator(validator(type));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  obuilder.withValidator(validator(type));	  Argument    argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	111	None	replace
329	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  createOption(abuilder.createOption());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  createOption(abuilder.createOption());  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  createOption(abuilder.createOption());	  ArgumentBuilder    obuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
330	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.createOption();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  gbuilder.createOption();	  ArgumentBuilder    obuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
331	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  createOption(abuilder);  [CE]  method  createOption  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  createOption(abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  createOption(abuilder);	  ArgumentBuilder    obuilder    =    abuilder.createOption();    	non-compiled	[CE]  method  createOption  in  class  PatternBuilder  cannot  be  applied  to  given  types;	101	None	replace
332	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	105	None	add
333	[BUG]  [BUGGY]  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type!=    '-')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	108	None	replace
334	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	52	None	add
335	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	52	None	add
336	[BUG]  [BUGGY]  obuilder.createOption(options);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.createOption(options);	  abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
337	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(type);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(type);	  abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
338	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(obuilder!=    null)    {    if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
339	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
340	[BUG]  [BUGGY]  obuilder  =  abuilder.createOption(options);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder  =  abuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  abuilder.createOption(options);	  obuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	4	None	replace
341	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  null);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  null);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  null);	  gbuilder.addArgument(argument,    type);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
342	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	39	None	add
343	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
344	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(argument);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  options.createOption(argument);	  ArgumentBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
345	[BUG]  [BUGGY]  options  =  obuilder.createOption(options);  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  options  =  obuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	options  =  obuilder.createOption(options);	  options    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	78	None	replace
346	[BUG]  [BUGGY]  OptionsBuilder  obuilder  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionsBuilder  obuilder  =  options.getOptionBuilder();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionsBuilder  obuilder  =  options.getOptionBuilder();	          gbuilder.reset();    OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
347	[BUG]  [BUGGY]  if(obuilder.isOptional())  {  arguments  =  obuilder.create();  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder.isOptional())  {  arguments  =  obuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder.isOptional())  {  arguments  =  obuilder.create();  }	  if(obuilder.isOptional())    {    argument    =    obuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
348	[BUG]  [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
349	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
350	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
351	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	54	1	add
352	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
353	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
354	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
355	[BUG]  [BUGGY]  gbuilder.setOption(options,  opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  opt);	  gbuilder.setOption(options,    option);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
356	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  argument);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  argument);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(opt,  argument);	  gbuilder.addArgument(argument,    opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
357	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
358	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
359	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  opt,  required);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
360	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  obuilder);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  obuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  obuilder);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
361	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  abuilder,  required);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
362	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  obuilder,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  obuilder,  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  obuilder,  required);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
363	[BUG]  [BUGGY]  abuilder  =  options.create();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  options.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  options.create();	  abuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	1	None	replace
364	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	68	None	add
365	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
366	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '+')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
367	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(	  	non-compiled	[CE]  ')'  expected	68	None	add
368	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  abuilder.reset();    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	37	None	replace
369	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  abuilder.reset();    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	37	None	replace
370	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '-')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
371	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(abuilder,  type));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(abuilder,  type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(abuilder,  type));	  gbuilder.addOption(OptionBuilder.create(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	50	None	replace
372	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(options));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(options));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(options));	  gbuilder.addOption(OptionBuilder.create(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	50	None	replace
373	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(type,  options));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(type,  options));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(type,  options));	  gbuilder.addOption(OptionBuilder.create(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	50	None	replace
374	[BUG]  [BUGGY]  abuilder  =  options.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  options.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  options.createOption(opt);	  abuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	48	None	replace
375	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addValidator(validator(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(opt));	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
376	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type),  arguments);  [CE]  cannot  find  symbol  arguments  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addValidator(validator(type),  arguments);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(type),  arguments);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol  arguments	104	None	replace
377	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.withValidator(validator(opt));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.withValidator(validator(opt));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  gbuilder.withValidator(validator(opt));	  argument    =    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
378	[BUG]  [BUGGY]  argument  =  argument.withValidator(validator(opt));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  argument.withValidator(validator(opt));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  argument.withValidator(validator(opt));	  argument    =    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
379	[BUG]  [BUGGY]  obuilder.addOption(OptionBuilder.INSTANCE.create());  [CE]  package  OptionBuilder  does  not  exist  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.addOption(OptionBuilder.INSTANCE.create());  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.addOption(OptionBuilder.INSTANCE.create());	  obuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  package  OptionBuilder  does  not  exist	109	None	replace
380	[BUG]  [BUGGY]  obuilder.addOption(OptionBuilder.create(),  type);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.addOption(OptionBuilder.create(),  type);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.addOption(OptionBuilder.create(),  type);	  obuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	109	None	replace
381	[BUG]  [BUGGY]  if(type!=  '-')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '-')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '-')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
382	[BUG]  [BUGGY]  if(type!=  'n')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  'n')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  'n')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
383	[BUG]  [BUGGY]  if(abuilder!=  null)  {  obuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  obuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  obuilder.reset();  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	6	None	replace
384	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  Gbuilder.reset();  gbuilder.reset();  [CE]  cannot  find  symbol  Gbuilder  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  Gbuilder.reset();  gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    Gbuilder.reset();  gbuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol  Gbuilder	71	None	add
385	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.set();  gbuilder.reset();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  gbuilder.set();  gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    gbuilder.set();  gbuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
386	[BUG]  [BUGGY]  abuilder  =  options.createOption();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  options.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  options.createOption();	  abuilder    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	3	None	replace
387	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(option));  }  [CE]  cannot  find  symbol  option  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(option));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(option));  }	  if(required)    {    if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol  option	60	None	replace
388	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	43	None	add
389	[BUG]  [BUGGY]  if(type!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	106	None	replace
390	[BUG]  [BUGGY]  if(type!=  ':')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  ':')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  ':')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
391	[BUG]  [BUGGY]  argument  =  arguments.createOption(abuilder);  [CE]  cannot  find  symbol  arguments  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  arguments.createOption(abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  arguments.createOption(abuilder);	  argument    =    abuilder.createOption(argument);    	non-compiled	[CE]  cannot  find  symbol  arguments	23	None	replace
392	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(options,  abuilder);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.createOption(options,  abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(options,  abuilder);	  OptionBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
393	[BUG]  [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
394	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
395	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  options.createOption(opt);	  ArgumentBuilder    obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
396	[BUG]  [BUGGY]  argument  =  gbuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  gbuilder.createOption(type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  gbuilder.createOption(type);	  argument    =    gbuilder.create();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
397	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withArgument(argument);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(argument!=  null)  {  abuilder.withArgument(argument);  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(argument!=  null)  {  abuilder.withArgument(argument);  }	  abuilder.withArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
398	[BUG]  [BUGGY]  obuilder.reset();  Gbuilder.reset();  [CE]  cannot  find  symbol  Gbuilder  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  Gbuilder.reset();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();  Gbuilder.reset();	          gbuilder.reset();    Gbuilder.reset();    	non-compiled	[CE]  cannot  find  symbol  Gbuilder	123	None	replace
399	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
400	[BUG]  [BUGGY]  obuilder.reset();  obuilder.withShortName(String.valueOf(opt));  [CE]  variable  argument  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.reset();  obuilder.withShortName(String.valueOf(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.reset();  obuilder.withShortName(String.valueOf(opt));	  abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	32	None	replace
401	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  [CE]  variable  argument  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.withShortName(String.valueOf(opt));	  if(opt!=    '[')    {    abuilder.reset();    obuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	91	None	replace
402	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  obuilder.withString(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  obuilder.withString(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.reset();  obuilder.withString(String.valueOf(opt));  }	  if(opt!=    '[')    {    abuilder.reset();    obuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
403	[BUG]  [BUGGY]  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '@')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	114	None	replace
404	[BUG]  [BUGGY]  argument  =  type.createOption(obuilder);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  type.createOption(obuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  type.createOption(obuilder);	  argument    =    obuilder.createOption(type);    	non-compiled	[CE]  char  cannot  be  dereferenced	82	None	replace
405	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(abuilder,  obuilder);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  options.createOption(abuilder,  obuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(abuilder,  obuilder);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	26	None	replace
406	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(opt);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(opt);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
407	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  option);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  option);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  option);	  gbuilder.addOption(OptionBuilder.create(),    type);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	51	None	replace
408	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  argument);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  argument);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  argument);	  gbuilder.addOption(OptionBuilder.create(),    type);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	51	None	replace
409	[BUG]  [BUGGY]  obuilder.withArgument(value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.withArgument(value);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.withArgument(value);	  obuilder.withArgument(argument);    	non-compiled	[CE]  cannot  find  symbol  value	15	None	replace
410	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	118	None	replace
411	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.withShortName(String.valueOf(opt));  }	  if(type!=    '.')    {    gbuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
412	[BUG]  [BUGGY]  if(options!=  null)  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(options!=  null)  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(options!=  null)  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
413	[BUG]  [BUGGY]  Argument  argument  =  gbuilder.createOption();  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  gbuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  gbuilder.createOption();	  Argument    argument    =    abuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	5	None	replace
414	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	56	None	add
415	[BUG]  [BUGGY]  if(type!=  '-')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '-')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '-')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
416	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  abuilder.reset();    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	16	None	replace
417	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.set();  obuilder.withValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.set();  obuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  abuilder.set();  obuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
418	[BUG]  [BUGGY]  argument  =  obuilder.createOption(options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  obuilder.createOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption(options);	  argument    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
419	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  obuilder.createOption();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  obuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  obuilder.createOption();	  argument    =    obuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
420	[BUG]  [BUGGY]  argument  =  options.createOption();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  options.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  options.createOption();	  argument    =    obuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
421	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.set();  obuilder.withValidator(validator(type));  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.set();  obuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.set();  obuilder.withValidator(validator(type));  }	  if(type!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
422	[BUG]  [BUGGY]  if(type!=  '.')  {  obuilder.set();  abuilder.withValidator(validator(type));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '.')  {  obuilder.set();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  obuilder.set();  abuilder.withValidator(validator(type));  }	  if(type!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
423	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  abuilder);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
424	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(opt),  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(opt),  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(opt),  type);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
425	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	41	None	add
426	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incompatible  types	41	None	add
427	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(type,  options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(type,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.createOption(type,  options);	  argument    =    abuilder.createOption(type,    options);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
428	[BUG]  [BUGGY]  arguments  =  abuilder.createOption(type,  options);  [CE]  cannot  find  symbol  arguments  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  arguments  =  abuilder.createOption(type,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	arguments  =  abuilder.createOption(type,  options);	  argument    =    abuilder.createOption(type,    options);    	non-compiled	[CE]  cannot  find  symbol  arguments	22	None	replace
429	[BUG]  [BUGGY]  if(abuilder!=  null)  {  obuilder.withArgument(argument);  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  obuilder.withArgument(argument);  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  obuilder.withArgument(argument);  }	  if(abuilder!=    null)    {    arguments    =    abuilder.create();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	116	None	replace
430	[BUG]  [BUGGY]  if(obuilder!=  null)  {  arguments  =  obuilder.create();  }  [CE]  cannot  find  symbol  arguments  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  null)  {  arguments  =  obuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  arguments  =  obuilder.create();  }	  if(abuilder!=    null)    {    arguments    =    abuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol  arguments	116	None	replace
431	[BUG]  [BUGGY]  gbuilder.setOption(options,  type,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  type,  null);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type,  null);	  gbuilder.setOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
432	[BUG]  [BUGGY]  gbuilder.setOption(options,  type,  option);  [CE]  cannot  find  symbol  option  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  type,  option);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type,  option);	  gbuilder.setOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol  option	61	None	replace
433	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	53	None	replace
434	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(opt,  argument));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(opt,  argument));  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(opt,  argument));	  argument    =    abuilder.withValidator(validator(argument));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	97	None	replace
435	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    'n')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
436	[BUG]  [BUGGY]  if(obuilder!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  incomparable  types:  DefaultOptionBuilder  and  char  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }	  if(opt!=    '[')    {    obuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  incomparable  types:  DefaultOptionBuilder  and  char	113	None	replace
437	[BUG]  [BUGGY]  gbuilder.setOption(options,  options,  option);  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  options,  option);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  options,  option);	  gbuilder.setOption(options,    options);    	non-compiled	[CE]  cannot  find  symbol  option	63	None	replace
438	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '.'  ||  opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '.'  ||  opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(opt!=  '.'  ||  opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(required)    {    if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
439	[BUG]  [BUGGY]  Argument  argument  =  obuilder.createOption();  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  obuilder.createOption();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  obuilder.createOption();	  argument    =    obuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	84	None	replace
440	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  opt);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  opt);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  opt);	  gbuilder.addOption(OptionBuilder.create(),    type);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	51	None	replace
441	[BUG]  [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
442	[BUG]  [BUGGY]  if(abuilder!=  '[')  {  abuilder.set();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  incomparable  types:  ArgumentBuilder  and  char  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  '[')  {  abuilder.set();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  '[')  {  abuilder.set();  abuilder.withShortName(String.valueOf(opt));  }	  if(abuilder!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  incomparable  types:  ArgumentBuilder  and  char	34	None	replace
443	[BUG]  [BUGGY]  abuilder  =  _builder.create();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  _builder.create();  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  _builder.create();	  abuilder    =    abuilder.create();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	1	None	replace
444	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
445	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
446	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
447	[BUG]  [BUGGY]  if(opt!=  'n')  {  gbuilder.reset();  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  'n')  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  'n')  {  gbuilder.reset();  gbuilder.reset();  }	          gbuilder.reset();    gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	72	None	replace
448	[BUG]  [BUGGY]  if(obuilder!=  null)  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  null)  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  abuilder.reset();    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	16	None	replace
449	[BUG]  [BUGGY]  abuilder.withValidator(validator(type));  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.withValidator(validator(type));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.withValidator(validator(type));	  abuilder.reset();    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	16	None	replace
450	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  }	          gbuilder.reset();    OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
451	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
452	[BUG]  [BUGGY]  if(abuilder!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [CE]  incomparable  types:  ArgumentBuilder  and  char  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }	  if(opt!=    '[')    {    abuilder.reset();    obuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  incomparable  types:  ArgumentBuilder  and  char	91	None	replace
453	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.set();  obuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.set();  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.set();  obuilder.withShortName(String.valueOf(opt));  }	  if(opt!=    '[')    {    abuilder.reset();    obuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
454	[BUG]  [BUGGY]  gbuilder.setString(argument);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setString(argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setString(argument);	  argument    =    gbuilder.create();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
455	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
456	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
457	[BUG]  [BUGGY]  Opcodes.IASTORE_PASSED_TO_STRING_AS_NULL_OBJECT)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Opcodes.IASTORE_PASSED_TO_STRING_AS_NULL_OBJECT)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Opcodes.IASTORE_PASSED_TO_STRING_AS_NULL_OBJECT)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(required)    {    if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  not  a  statement	60	None	replace
458	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
459	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(opt,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(opt,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.createOption(opt,  type);	  ArgumentBuilder    obuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
460	[BUG]  [BUGGY]  gbuilder.setOption(options,  opt,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.setOption(options,  opt,  required);  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  opt,  required);	  gbuilder.setOption(options,    required);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
461	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	67	None	replace
462	[BUG]  [BUGGY]  if(type  ==  '*')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '*')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '*')  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
463	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
464	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
465	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	76	None	replace
466	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	76	None	replace
467	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type    >>    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	70	None	replace
468	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type,  opt));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addValidator(validator(type,  opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(type,  opt));	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	104	None	replace
469	[BUG]  [BUGGY]  nbuilder.reset();  obuilder.withShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  nbuilder  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  nbuilder.reset();  obuilder.withShortName(String.valueOf(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	nbuilder.reset();  obuilder.withShortName(String.valueOf(opt));	  abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  nbuilder	32	None	replace
470	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
471	[BUG]  [BUGGY]  argument  =  obuilder.createOption(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  obuilder.createOption(abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption(abuilder,  type);	  argument    =    obuilder.createOption(type);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
472	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
474	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	39	1	add
475	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  Gbuilder.reset();  }  [CE]  cannot  find  symbol  Gbuilder  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  Gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  gbuilder.reset();  Gbuilder.reset();  }	          gbuilder.reset();    Gbuilder.reset();    	non-compiled	[CE]  cannot  find  symbol  Gbuilder	123	None	replace
476	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  Gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  Gbuilder  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  Gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  gbuilder.reset();  Gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    Gbuilder.reset();    	non-compiled	[CE]  cannot  find  symbol  Gbuilder	123	None	replace
477	[BUG]  [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.set();  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.set();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.set();  }	          gbuilder.reset();    gbuilder.set();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
478	[BUG]  [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.set();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.set();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  gbuilder.reset();  gbuilder.set();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          gbuilder.reset();    gbuilder.set();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
479	[BUG]  [BUGGY]  abuilder.reset();  gbuilder.set();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  gbuilder.set();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  gbuilder.set();	          gbuilder.reset();    gbuilder.set();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
480	[BUG]  [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(type),  opt);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(type),  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.withValidator(validator(type),  opt);	  Argument    argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	111	None	replace
481	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	56	None	add
482	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type,  opt));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type,  opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(type,  opt));	  gbuilder.addOption(OptionBuilder.createWithType(type));    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	49	None	replace
483	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
484	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
485	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
486	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  gbuilder,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  gbuilder,  argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  gbuilder,  argument);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	95	None	replace
487	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  gbuilder);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  gbuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  gbuilder);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	95	None	replace
488	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder,  argument);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  abuilder,  argument);	  argument    =    abuilder.withValidator(validator(type),    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	95	None	replace
489	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
490	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
491	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
492	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
493	[BUG]  [BUGGY]  if(abuilder!=  null)  {  obuilder.create();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  obuilder.create();  }  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  obuilder.create();  }	  if(abuilder!=    null)    {    arguments    =    abuilder.create();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	116	None	replace
494	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type!=    '-')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	108	None	replace
495	[BUG]  [BUGGY]  obuilder.isOptional()?  argument  =  obuilder.create()  :  null;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.isOptional()?  argument  =  obuilder.create()  :  null;  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.isOptional()?  argument  =  obuilder.create()  :  null;	  if(obuilder.isOptional())    {    argument    =    obuilder.create();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
496	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt	  	non-compiled	[CE]  ')'  expected	105	None	add
497	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
498	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
499	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument    ==    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
500	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
501	[BUG]  [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	41	None	add
502	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >>    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
503	[BUG]  [BUGGY]  if(abuilder!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  incomparable  types:  ArgumentBuilder  and  char  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  incomparable  types:  ArgumentBuilder  and  char	86	None	replace
504	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	  if(type!=    '-')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
505	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(options!=  null)  {  gbuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  }	          gbuilder.reset();    OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
506	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	54	None	add
507	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]      IllegalArgumentException    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incompatible  types	54	None	add
508	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  abuilder.reset();  }	  if(type!=    '.')    {    gbuilder.reset();    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	7	None	replace
509	[BUG]  [BUGGY]  abuilder.withOption(options);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.withOption(options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.withOption(options);	  abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
510	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder,  opt);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder,  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(abuilder,  opt);	  OptionBuilder    obuilder    =    options.createOption(abuilder);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
511	[BUG]  [BUGGY]  abuilder.reset();  gbuilder.init();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder.reset();  gbuilder.init();  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  gbuilder.init();	          gbuilder.reset();    gbuilder.init();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
512	[BUG]  [BUGGY]  abuilder  =  opt.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  abuilder  =  opt.createOption(opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  opt.createOption(opt);	  abuilder    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	48	None	replace
513	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
514	[BUG]  [BUGGY]  if(opt!=  '*')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '*')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '*')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
515	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }	          gbuilder.reset();    final    Argument    argument    =    getOption(type);    if(argument!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
516	[BUG]  [BUGGY]  argument  =  argument.withValidator(validator(type),  opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  argument.withValidator(validator(type),  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  argument.withValidator(validator(type),  opt);	  argument    =    argument.withValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
517	[BUG]  [BUGGY]  obuilder.addOption(OptionBuilder.create(opt));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  obuilder.addOption(OptionBuilder.create(opt));  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.addOption(OptionBuilder.create(opt));	  obuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	109	None	replace
518	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(opt,  abuilder);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  options.createOption(opt,  abuilder);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(opt,  abuilder);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	26	None	replace
519	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(abuilder,  opt);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  options.createOption(abuilder,  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(abuilder,  opt);	  Argument    argument    =    options.createOption(abuilder);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	26	None	replace
520	[BUG]  [BUGGY]  if(type  ==  '.'  ||  type  ==  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(type  ==  '.'  ||  type  ==  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '.'  ||  type  ==  ':')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type    ==    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	17	None	replace
521	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  opt);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  opt);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
522	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(type),  abuilder,  type);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  abuilder,  type);	  argument    =    abuilder.withValidator(validator(type),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	21	None	replace
523	[BUG]  [BUGGY]  if(gbuilder!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(gbuilder!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(gbuilder!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(abuilder!=    null)    {    gbuilder.reset();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	8	None	replace
524	[BUG]  [BUGGY]  if(abuilder!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }  [CE]  incomparable  types:  ArgumentBuilder  and  char  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }	  if(type!=    '.')    {    abuilder.set();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  incomparable  types:  ArgumentBuilder  and  char	107	None	replace
525	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(opt,  options);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  Argument  argument  =  abuilder.createOption(opt,  options);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(opt,  options);	  Argument    argument    =    abuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	5	None	replace
526	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
527	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
528	[BUG]  [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >>  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >>  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                if(type!=        '.')        {        abuilder.reset();        abuilder.withValidator(validator(type));        }        if(type    >=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >>  '*')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	non-compiled	[CE]  incompatible  types	68	None	add
529	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(opt),  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  argument  =  abuilder.withValidator(validator(opt),  required);  [BUGGY]      }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(opt),  required);	  argument    =    abuilder.withValidator(validator(type),    required);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	20	None	replace
530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                gbuilder.reset();        gbuilder.reset();    if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
531	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                gbuilder.reset();        gbuilder.reset();    if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
533	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  abuilder.create();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	                gbuilder.reset();        gbuilder.reset();    if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  abuilder.create();  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
535	[BUG]  [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  abuilder.create();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]          gbuilder.reset();    gbuilder.reset();  if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  abuilder.create();  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	                gbuilder.reset();        gbuilder.reset();    if(gbuilder!=  null)  {  gbuilder.reset();  gbuilder.reset();  }  else  {  abuilder.create();  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
536	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  if(type!=    '@')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
537	[BUG]  [BUGGY]  if(abuilder!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  incomparable  types:  ArgumentBuilder  and  char  [FE]          IllegalArgumentException      [CONTEXT]      final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }      [BUGGY]  if(abuilder!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  incomparable  types:  ArgumentBuilder  and  char	81	None	replace
