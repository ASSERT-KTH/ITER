bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
2	[BUG]  [BUGGY]    if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }		compilable	  [FE]  ComparisonFailure  	50	1	add
4	[BUG]  [BUGGY]    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }		compilable	  [FE]  ComparisonFailure  	50	1	add
5	[BUG]  [BUGGY]  if(abuilder!=  null)  {  argument  =  abuilder.create();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  if(abuilder!=  null)  {  argument  =  abuilder.create();  }  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  argument  =  abuilder.create();  }	argument  =  abuilder.create();  	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	49	None	replace
6	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type));  [CE]  incompatible  types  [FE]      ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  argument  =  abuilder.withValidator(validator(type));  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type));	argument  =  abuilder.create();  	non-compiled	[CE]  incompatible  types	49	None	replace
7	[BUG]  [BUGGY]  argument  =  abuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  argument  =  abuilder.createOption(type);  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(type);	argument  =  abuilder.create();  	non-compiled	[CE]  cannot  find  symbol	49	None	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    gbuilder.reset();  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	    gbuilder.reset();		compilable	  [FE]  ComparisonFailure  	50	1	add
9	[BUG]  [BUGGY]    gbuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    gbuilder.reset();  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    gbuilder.reset();		compilable	  [FE]  ComparisonFailure  	50	1	add
10	[BUG]  [BUGGY]    gbuilder.addArgument(argument);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    gbuilder.addArgument(argument);  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    gbuilder.addArgument(argument);		non-compiled	[CE]  cannot  find  symbol	50	None	add
11	[BUG]  [BUGGY]    gbuilder.setOption(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    gbuilder.setOption(opt);  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    gbuilder.setOption(opt);		non-compiled	[CE]  cannot  find  symbol	50	None	add
12	[BUG]  [BUGGY]    gbuilder.setOption(options);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    gbuilder.setOption(options);  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    gbuilder.setOption(options);		non-compiled	[CE]  cannot  find  symbol	50	None	add
13	[BUG]  [BUGGY]    gbuilder.addOption(OptionBuilder.create());  [CE]  cannot  find  symbol  OptionBuilder  [FE]            ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    gbuilder.addOption(OptionBuilder.create());  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    gbuilder.addOption(OptionBuilder.create());		non-compiled	[CE]  cannot  find  symbol  OptionBuilder	50	None	add
14	[BUG]  [BUGGY]  argument  =  abuilder.createOption();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  argument  =  abuilder.createOption();  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption();	argument  =  abuilder.create();  	non-compiled	[CE]  cannot  find  symbol	49	None	replace
15	[BUG]  [BUGGY]  argument  =  abuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  argument  =  abuilder.createOption(opt);  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(opt);	argument  =  abuilder.create();  	non-compiled	[CE]  cannot  find  symbol	49	None	replace
16	[BUG]  [BUGGY]  argument  =  abuilder.createOption(options);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  argument  =  abuilder.createOption(options);  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(options);	argument  =  abuilder.create();  	non-compiled	[CE]  cannot  find  symbol	49	None	replace
17	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }		compilable	  [FE]  IllegalArgumentException  	50	1	add
18	[BUG]  [BUGGY]    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }		compilable	  [FE]  IllegalArgumentException  	50	1	add
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }		compilable	  [FE]  IllegalArgumentException  	50	1	add
20	[BUG]  [BUGGY]    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }		compilable	  [FE]  IllegalArgumentException  	50	1	add
21	[BUG]  [BUGGY]    if(opt!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]    if(opt!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	    if(opt!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }		non-compiled	[CE]  cannot  find  symbol	50	None	add
22	[BUG]  [BUGGY]  argument  =  obuilder.create();  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]  argument  =  obuilder.create();  [BUGGY]  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.create();	argument  =  abuilder.create();  	non-compiled	[CE]  incompatible  types	49	None	replace
