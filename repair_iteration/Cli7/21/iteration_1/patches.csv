bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '*')  {  if(opt!=  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '*')    {    if(opt!=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
2	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt  >=  '*')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '*')  {  if(opt  >=  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '*')    {    if(opt  >=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
3	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '*')  {  if(opt  ==  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '*')    {    if(opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
4	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt  >>  '*')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '*')  {  if(opt  >>  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '*')    {    if(opt  >>  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options!=  null  ||  options.contains(opt))  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
6	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  options.contains(opt))  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options!=  null  ||  options.size()  ==  1)  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
8	[BUG]  [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  options.size()  ==  1)  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
9	[BUG]  [BUGGY]  if(opt!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null)  {	  if(options!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	11	None	replace
10	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  if(opt!=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
11	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  if(opt  ==  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
12	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  if(opt  >=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
13	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt  >>  '.')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  if(opt  >>  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.')    {    if(opt  >>  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
14	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type));  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  gbuilder.addValidator(validator(type));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(type));	      gbuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt),  argument);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  gbuilder.addValidator(validator(opt),  argument);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(opt),  argument);	      gbuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt,  type));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  gbuilder.addValidator(validator(opt,  type));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(opt,  type));	      gbuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
18	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
19	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  incomparable  types:  char  and  <null>  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	add
20	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
21	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
22	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt!=  '[')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  if(opt!=  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '[')    {    if(opt!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
23	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  >=  '[')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  if(opt  >=  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '[')    {    if(opt  >=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
24	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  if(opt  ==  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '[')    {    if(opt  ==  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
25	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  >>  '[')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  if(opt  >>  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '[')    {    if(opt  >>  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
27	[BUG]  [BUGGY]  if(opt  ==  '[')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
29	[BUG]  [BUGGY]  if(type!=  '[')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
31	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
32	[BUG]  [BUGGY]  if(type  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type  ==  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type  ==  required)  {	  if(opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	9	None	replace
33	[BUG]  [BUGGY]  if(required  ==  opt)  {  [CE]  incomparable  types:  boolean  and  char  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(required  ==  opt)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required  ==  opt)  {	  if(opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  char	9	None	replace
34	[BUG]  [BUGGY]  abuilder.withValidator(validator(type));  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.withValidator(validator(type));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withValidator(validator(type));	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.setValidator(validator(opt));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setValidator(validator(opt));	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  abuilder.reset();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.reset();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.reset();	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '-')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
38	[BUG]  [BUGGY]  if(opt!=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
40	[BUG]  [BUGGY]  if(opt  ==  '.')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '.')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
42	[BUG]  [BUGGY]  if(type!=  '.')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
43	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  required)  {	  if(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	18	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
45	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
46	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  'n'  ||  opt  ==  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  required)  {	  if(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	18	None	replace
47	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt!=  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt!=  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    required)    {    if(opt!=  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
48	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt  ==  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt  ==  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    required)    {    if(opt  ==  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
49	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt  >=  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt  >=  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    required)    {    if(opt  >=  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
50	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt  >>  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  required)  {  if(opt  >>  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    required)    {    if(opt  >>  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
51	[BUG]  [BUGGY]  if(opt  >=  required)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  >=  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  required)  {	  if(opt!=    required)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	replace
52	[BUG]  [BUGGY]  if(type!=  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  required)  {	  if(opt!=    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	8	None	replace
53	[BUG]  [BUGGY]  if(options.contains(opt))  {  if(options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt))  {  if(options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt))    {    if(options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
54	[BUG]  [BUGGY]  if(options.contains(opt))  {  If(options.contains(opt))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt))  {  If(options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt))    {    If(options.contains(opt))  {	  	non-compiled	[CE]  ';'  expected	12	None	add
55	[BUG]  [BUGGY]  if(options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt);  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt))    {    OptionBuilder  abuilder  =  options.contains(opt);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
56	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
57	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
58	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
59	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder);	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
61	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  '.')  {  abuilder.withOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withOption(opt);  }	      if(opt!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
62	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(type);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(type);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withOption(type);  }	      if(opt!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
63	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.')  {  abuilder.withOption(opt);  }	      if(opt!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(opt)||  options.contains(opt))  {	  if(options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
65	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt))  {	  if(options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
66	[BUG]  [BUGGY]  if(options.contains(opt)||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)||  arguments.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  arguments.contains(opt))  {	  if(options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	13	None	replace
67	[BUG]  [BUGGY]  if(options.contains(opt)||  options.containsKey(opt))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)||  options.containsKey(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.containsKey(opt))  {	  if(options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
68	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.containsKey(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt))  {	  if(options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
69	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);	      OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);	      OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(type);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(type);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(type);	      OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(type!=  '[')  {  abuilder.withOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withOption(opt);  }	      if(opt!=    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(type);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(type);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withOption(type);  }	      if(opt!=    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
74	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '[')  {  abuilder.withOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '[')  {  abuilder.withOption(opt);  }	      if(opt!=    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  if(opt  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null)  {	  if(opt)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	7	None	replace
76	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.equals( " "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  null  ||  opt.equals( " "))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.equals( " "))  {	  if(opt)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	7	None	replace
77	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create();	      OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);	      OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  gbuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  gbuilder.setOption(type);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setOption(type);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  gbuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  gbuilder.setOption(option);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setOption(option);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  if(options!=  null)  {  if(options!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null)  {  if(options!=  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null)    {    if(options!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
82	[BUG]  [BUGGY]  if(options!=  null)  {  if(options  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null)  {  if(options  ==  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null)    {    if(options  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
83	[BUG]  [BUGGY]  if(options!=  null)  {  if(options  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null)  {  if(options  >=  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null)    {    if(options  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
84	[BUG]  [BUGGY]  if(options!=  null)  {  If(options!=  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null)  {  If(options!=  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null)    {    If(options!=  null)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
85	[BUG]  [BUGGY]  abuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.setOption(type);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(type);	      abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  abuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.setOption(option);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(option);	      abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  abuilder.setOption(op);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.setOption(op);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(op);	      abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
88	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
89	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
90	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(opt);	      OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
91	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  option.getOptionBuilder();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  option.getOptionBuilder();	      OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
92	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  opt.getOptionBuilder();	      OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
93	[BUG]  [BUGGY]  if(options!=  required)  {  [CE]  incomparable  types:  Set  and  boolean  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  required)  {	  if(opt!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	8	None	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  >=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  '.')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
95	[BUG]  [BUGGY]  if(opt  >=  '.')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  >=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  '.')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
96	[BUG]  [BUGGY]  obuilder.setOption(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  obuilder.setOption(opt);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	obuilder.setOption(opt);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
97	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  required);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  required);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withOption(opt,  required);  }	      if(opt!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
98	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(0);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(0);	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
100	[BUG]  [BUGGY]  abuilder.withOption(argument);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  abuilder.withOption(argument);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOption(argument);	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
101	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
102	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);	      OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
103	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  If(opt!=  'n'  ||  required)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  required)  {  If(opt!=  'n'  ||  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    required)    {    If(opt!=  'n'  ||  required)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
104	[BUG]  [BUGGY]  if(options.contains(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt))    {    OptionBuilder  obuilder  =  options.get(opt);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
105	[BUG]  [BUGGY]  if(options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt))    {    OptionBuilder  optionBuilder  =  options.get(opt);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options  ==  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options  ==  null)  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
107	[BUG]  [BUGGY]  if(options  ==  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options  ==  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null)  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
108	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!='')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!='')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    if(opt!='')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	1	None	add
109	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(opt);  }	  	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	1	None	add
110	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!='')  {  abuilder.withValidator(opt);  }  [CE]  empty  character  literal  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!='')  {  abuilder.withValidator(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    if(opt!='')  {  abuilder.withValidator(opt);  }	  	non-compiled	[CE]  empty  character  literal	1	None	add
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '*')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
112	[BUG]  [BUGGY]  if(opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '*')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt  ==  '-')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
114	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  '-')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
116	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt  ==  '+')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
118	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  '+')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
119	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options);  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options);	      OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt,  required);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt,  required);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withOption(opt,  required);  }	      if(opt!=    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
121	[BUG]  [BUGGY]  if(opt  ||  argument  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ||  argument  ==  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  argument  ==  null)  {	  if(opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
122	[BUG]  [BUGGY]  if(opt  ||  argument!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ||  argument!=  null)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  argument!=  null)  {	  if(opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
123	[BUG]  [BUGGY]  if(opt  ||  opt)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ||  opt)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  opt)  {	  if(opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
124	[BUG]  [BUGGY]  if(opt  ||  type!=  '.')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ||  type!=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  type!=  '.')  {	  if(opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
125	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.createOptionBuilder();	      OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
126	[BUG]  [BUGGY]  if(options  ==  required)  {  [CE]  incomparable  types:  Set  and  boolean  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options  ==  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  required)  {	  if(opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	9	None	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  ||  opt  ==  ':')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
128	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  ||  opt  ==  ':')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt!=  'r')  {	  if(opt!=    required)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
130	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt!=  'r')  {	  if(opt!=    required)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
131	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));	  	non-compiled	[CE]  ';'  expected	1	None	add
132	[BUG]  [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]      abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	        abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(opt);  }	  	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	1	None	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  &&  opt!=  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
134	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  &&  opt!=  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  &&  opt!=  '+')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
136	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  &&  opt!=  '+')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
137	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '[')  {  If(opt!=  '[')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '[')    {    If(opt!=  '[')  {	  	non-compiled	[CE]  ';'  expected	19	None	add
138	[BUG]  [BUGGY]  if(opt!=  '*')  {  If(opt!=  '*')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '*')  {  If(opt!=  '*')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '*')    {    If(opt!=  '*')  {	  	non-compiled	[CE]  ';'  expected	23	None	add
139	[BUG]  [BUGGY]  if(opt!=  '.')  {  If(opt!=  '.')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  If(opt!=  '.')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.')    {    If(opt!=  '.')  {	  	non-compiled	[CE]  ';'  expected	21	None	add
140	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }	      if(opt!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options!=  null  &&  options.contains(opt))  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
142	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  options.contains(opt))  {	  if(options!=    null)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
143	[BUG]  [BUGGY]  if(options!=  null  &&  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options!=  null  &&  arguments.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  arguments.contains(opt))  {	  if(options!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  arguments	11	None	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  &&  opt!=  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
145	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  &&  opt!=  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  &&  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
147	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  &&  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt  ==  ':')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
149	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  ':')  {	  if(opt!=    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
150	[BUG]  [BUGGY]  if(opt!=  opt)  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  opt)  {  abuilder.setOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  opt)  {  abuilder.setOption(opt);  }	      abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
151	[BUG]  [BUGGY]  if(opt!=  opt)  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  opt)  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  opt)  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
152	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  null  ||  opt  ==  required)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt  ==  required)  {	  if(opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	9	None	replace
153	[BUG]  [BUGGY]  if(opt  ==  preferred)  {  [CE]  cannot  find  symbol  preferred  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt  ==  preferred)  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  preferred)  {	  if(opt    ==    required)    {    	non-compiled	[CE]  cannot  find  symbol  preferred	9	None	replace
154	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
155	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	      abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
156	[BUG]  [BUGGY]  if(opt!=  opt)  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(opt!=  opt)  {  gbuilder.setOption(opt);  }  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  opt)  {  gbuilder.setOption(opt);  }	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(opt)&&  options.contains(opt))  {	  if(options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
158	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&  options.contains(opt))  {	  if(options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
159	[BUG]  [BUGGY]  if(options.contains(opt)&&  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  if(options.contains(opt)&&  arguments.contains(opt))  {  [BUGGY]    abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&  arguments.contains(opt))  {	  if(options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	13	None	replace
160	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder2();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));    [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder2();  [BUGGY]    if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder2();	      OptionBuilder    obuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
