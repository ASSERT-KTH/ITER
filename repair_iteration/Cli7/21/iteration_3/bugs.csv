bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  argument);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
2	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  required);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
3	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required,  argument);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
4	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  required);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
5	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  null);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  null);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
6	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
7	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  1)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.length()  ==  1)  {	  if(opt    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	75	None	replace
8	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.equals( " "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  ||  opt.equals( " "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  ||  opt.equals( " "))  {	  if(opt    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	75	None	replace
9	[BUG]  [BUGGY]  abuilder.setValidator(validator(type));  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.setValidator(validator(type));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setValidator(validator(type));	  abuilder.setValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
10	[BUG]  [BUGGY]  abuilder.setOption(validator(opt));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.setOption(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(validator(opt));	  abuilder.setValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
11	[BUG]  [BUGGY]  if(option  ==  required)  {  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(option  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(option  ==  required)  {	  if(required    ==    opt)    {    	non-compiled	[CE]  cannot  find  symbol  option	33	None	replace
12	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withOption(opt,  required);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withOption(opt,  required);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withOption(opt,  required);  }	  if(opt!=    '.')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
13	[BUG]  [BUGGY]  abuilder.withOption(opt,  required);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOption(opt,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOption(opt,  required);	  if(opt!=    '.')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
14	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(opt,  required);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(opt,  required);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.')  {  abuilder.withOption(opt,  required);  }	  if(opt!=    '.')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  type)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  type)  {	  if(opt    ==    preferred)    {    	compilable	  [FE]  ComparisonFailure  	153	1	replace
16	[BUG]  [BUGGY]  if(opt  ==  type)  {  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  type)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  type)  {	  if(opt    ==    preferred)    {    	compilable	  [FE]  ComparisonFailure  	153	1	replace
17	[BUG]  [BUGGY]  if(opt  ==  minimum)  {  [CE]  cannot  find  symbol  minimum  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  minimum)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  minimum)  {	  if(opt    ==    preferred)    {    	non-compiled	[CE]  cannot  find  symbol  minimum	153	None	replace
18	[BUG]  [BUGGY]  if(opt  ||  opt!=  '.')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  opt!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  opt!=  '.')  {	  if(opt    ||    type!=    '.')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	124	None	replace
19	[BUG]  [BUGGY]  if(opt  ||  type  ==  '.')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  type  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  type  ==  '.')  {	  if(opt    ||    type!=    '.')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	124	None	replace
20	[BUG]  [BUGGY]  if(opt  ||  opt  ==  '.')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  opt  ==  '.')  {	  if(opt    ||    type!=    '.')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	124	None	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '['  ||  opt  ==  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
22	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  '['  ||  opt  ==  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
24	[BUG]  [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  '['  ||  opt  ==  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '['  ||  opt!=  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
26	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '['  ||  opt!=  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
27	[BUG]  [BUGGY]  if(options.contains(opt)||  arguments.contains(type))  {  [CE]  cannot  find  symbol  arguments  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  arguments.contains(type))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  arguments.contains(type))  {	  if(options.contains(opt)||    arguments.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	66	None	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(type))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(opt)||  options.contains(type))  {	  if(options.contains(opt)||    arguments.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	66	1	replace
29	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(type))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(type))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(type))  {	  if(options.contains(opt)||    arguments.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	66	1	replace
30	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(1);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withOption(1);  }	  if(opt    ==    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
31	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  options);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
32	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
33	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  argument);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
34	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  abuilder);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  abuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  abuilder);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  ';')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	139	1	replace
36	[BUG]  [BUGGY]  if(opt!=  ';')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ';')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	139	1	replace
37	[BUG]  [BUGGY]  if(type!=  '.')  {  If(opt  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  If(opt  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  If(opt  ==  '.')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ';'  expected	139	None	replace
38	[BUG]  [BUGGY]  if(type!=  '[')  {  if(type!=  '[')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  if(type!=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '[')    {    if(type!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
39	[BUG]  [BUGGY]  if(type!=  '[')  {  if(type  >=  '[')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  if(type  >=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '[')    {    if(type  >=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
40	[BUG]  [BUGGY]  if(type!=  '[')  {  if(type  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  if(type  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '[')    {    if(type  ==  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
41	[BUG]  [BUGGY]  if(type!=  '[')  {  if(type  >>  '[')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  if(type  >>  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '[')    {    if(type  >>  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
42	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
43	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(option);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
44	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(0);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(0);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
45	[BUG]  [BUGGY]  if(type!=  '.')  {  if(type!=  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  if(type!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '.')    {    if(type!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
46	[BUG]  [BUGGY]  if(type!=  '.')  {  if(type  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  if(type  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '.')    {    if(type  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
47	[BUG]  [BUGGY]  if(type!=  '.')  {  if(type  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  if(type  >=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '.')    {    if(type  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
48	[BUG]  [BUGGY]  if(type!=  '.')  {  if(type  >>  '.')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  if(type  >>  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=    '.')    {    if(type  >>  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
49	[BUG]  [BUGGY]  gbuilder.setOption(option  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.setOption(option  +  1);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setOption(option  +  1);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
50	[BUG]  [BUGGY]  if(required)  {  if(opt  ==  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  ==  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  ==  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt    ==    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
51	[BUG]  [BUGGY]  if(required)  {  if(opt  ==  'n'  ||  opt  ==  required)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  ==  'n'  ||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  ==  'n'  ||  opt  ==  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt    ==    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  ||  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
53	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  ||  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '['  &&  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
55	[BUG]  [BUGGY]  if(opt  ==  '['  &&  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '['  &&  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
56	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt)||  options.containsKey(opt))  {	  if(options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
57	[BUG]  [BUGGY]  if(opt.containsKey(options))  {  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt.containsKey(options))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt.containsKey(options))  {	  if(options.containsKey(opt))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	68	None	replace
58	[BUG]  [BUGGY]  if(options.containsKey(opt)||  arguments.containsKey(opt))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt)||  arguments.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt)||  arguments.containsKey(opt))  {	  if(options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
59	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsValue(opt))  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt)||  options.containsValue(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt)||  options.containsValue(opt))  {	  if(options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
60	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(1);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(1);	  OptionBuilder    obuilder    =    options.getOptionBuilder2();    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
62	[BUG]  [BUGGY]  if(type!=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
64	[BUG]  [BUGGY]  if(opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '-'  ||  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
66	[BUG]  [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-'  ||  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
67	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  opt)  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  if(opt!=  opt)  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  if(opt!=  opt)  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
68	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
69	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
70	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  opt)  {  abuilder.setOption(opt);  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  if(opt!=  opt)  {  abuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  if(opt!=  opt)  {  abuilder.setOption(opt);  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
71	[BUG]  [BUGGY]  if(opt!=  '-')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  gbuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  gbuilder.setOption(opt);  }	  if(opt!=    opt)    {    gbuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
72	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  gbuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  gbuilder.setOption(opt);  }	  if(opt!=    opt)    {    gbuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
73	[BUG]  [BUGGY]  if(type!=  opt)  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  opt)  {  gbuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  opt)  {  gbuilder.setOption(opt);  }	  if(opt!=    opt)    {    gbuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
74	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '-')    {    if(opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
75	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '-')    {    if(opt  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
76	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '-')    {    if(opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
77	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  >>  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt  >>  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '-')    {    if(opt  >>  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
78	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt!=  required)  {	  if(opt    ==    'n'    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	46	None	replace
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  '[')  {	  if(opt!=    '[')    {    if(opt    >=    '[')    {    	compilable	  [FE]  ComparisonFailure  	23	1	replace
80	[BUG]  [BUGGY]  if(opt  >=  '[')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  '[')  {	  if(opt!=    '[')    {    if(opt    >=    '[')    {    	compilable	  [FE]  ComparisonFailure  	23	1	replace
81	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
82	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt!=  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
84	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt!=  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
86	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  &&  opt!=  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
88	[BUG]  [BUGGY]  if(opt!=  'n'  &&  opt!=  'r')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  &&  opt!=  'r')  {	  if(opt!=    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  ComparisonFailure  	130	1	replace
89	[BUG]  [BUGGY]  if(options!=  required  &&  options.contains(opt))  {  [CE]  incomparable  types:  Set  and  boolean  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  required  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  required  &&  options.contains(opt))  {	  if(options!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	93	None	replace
90	[BUG]  [BUGGY]  if(options!=  required  ||  options.size()  ==  options.size())  {  [CE]  incomparable  types:  Set  and  boolean  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  required  ||  options.size()  ==  options.size())  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  required  ||  options.size()  ==  options.size())  {	  if(options!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	93	None	replace
91	[BUG]  [BUGGY]  if(options!=  required  &&  options.size()  >  1)  {  [CE]  incomparable  types:  Set  and  boolean  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  required  &&  options.size()  >  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  required  &&  options.size()  >  1)  {	  if(options!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	93	None	replace
92	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type),  argument);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(validator(type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(type),  argument);	  gbuilder.addValidator(validator(opt),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
93	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt),  type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(validator(opt),  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(opt),  type);	  gbuilder.addValidator(validator(opt),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
94	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt),  argument,  required);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(validator(opt),  argument,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(opt),  argument,  required);	  gbuilder.addValidator(validator(opt),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
95	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '.')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null)  {  if(type!=  '.')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null)  {  if(type!=  '.')  {  abuilder.withOption(opt);  }	  if(type!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
96	[BUG]  [BUGGY]  abuilder.withOption(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOption(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOption(opt);	  if(type!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
97	[BUG]  [BUGGY]  if(options  ==  required  ||  options.contains(opt))  {  [CE]  incomparable  types:  Set  and  boolean  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  required  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  required  ||  options.contains(opt))  {	  if(options    ==    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	126	None	replace
98	[BUG]  [BUGGY]  if(options  ==  required  ||  options.size()  ==  options.size())  {  [CE]  incomparable  types:  Set  and  boolean  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  required  ||  options.size()  ==  options.size())  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  required  ||  options.size()  ==  options.size())  {	  if(options    ==    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	126	None	replace
99	[BUG]  [BUGGY]  if(opt!=  ';')  {  If(opt!=  'n'  ||  required)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ';')  {  If(opt!=  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ';')  {  If(opt!=  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
100	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  If(opt  ==  'n'  ||  type  ==  ';')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  required)  {  If(opt  ==  'n'  ||  type  ==  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  required)  {  If(opt  ==  'n'  ||  type  ==  ';')  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
101	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  If(opt!=  'n'  ||  type  ==  ';')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  If(opt!=  'n'  ||  type  ==  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  required)  {  If(opt!=  'n'  ||  type  ==  ';')  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
102	[BUG]  [BUGGY]  if(opt!=  'n'  ||  required)  {  If(opt  ==  'n'  ||  opt  ==  ';')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  required)  {  If(opt  ==  'n'  ||  opt  ==  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  required)  {  If(opt  ==  'n'  ||  opt  ==  ';')  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
103	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder,  opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder,  opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(abuilder);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
104	[BUG]  [BUGGY]  final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(abuilder);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
105	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder,  argument);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(abuilder,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(abuilder);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
106	[BUG]  [BUGGY]  if(type!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  'n')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
107	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  parent!=  null  &&  parent  ==  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	parent!=  null  &&  parent  ==  opt)  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  not  a  statement	99	None	replace
108	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt)||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt)||  arguments.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt)||  arguments.contains(opt))  {	  if(options.contains(opt)||    options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	65	None	replace
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(type)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(type)||  options.contains(opt))  {	  if(options.contains(opt)||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
110	[BUG]  [BUGGY]  if(options.contains(type)||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(type)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(type)||  options.contains(opt))  {	  if(options.contains(opt)||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
111	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(type);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
112	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt!=  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
113	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  ==  '.'  &&  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  ==  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt  ==  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
114	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  >=  '.'  &&  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  >=  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt  >=  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
115	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt  >=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt!=  '.'  &&  opt  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  ||  opt  ==  '-')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
117	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  ||  opt  ==  '-')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  &&  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
119	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  &&  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  ||  opt!=  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
121	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  ||  opt!=  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(opt)&&  options.contains(opt)||  options.contains(opt))  {	  if(options.contains(opt)&&    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	158	1	replace
123	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt)||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&  options.contains(opt)||  options.contains(opt))  {	  if(options.contains(opt)&&    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	158	1	replace
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(type)&&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(type)&&  options.contains(opt))  {	  if(options.contains(opt)&&    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	158	1	replace
125	[BUG]  [BUGGY]  if(options.contains(type)&&  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(type)&&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(type)&&  options.contains(opt))  {	  if(options.contains(opt)&&    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	158	1	replace
126	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required,  argument);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
127	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  argument);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
128	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required,  type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  type  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  type  ==  '-')  {	  if(opt    ==    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
130	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  type  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  type  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  type  ==  '-')  {	  if(opt    ==    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
131	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '.')  {  if(opt  >=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    >=    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
132	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '.')  {  if(opt!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    >=    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
133	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '.')  {  if(opt  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    >=    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
134	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt  >>  '.')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '.')  {  if(opt  >>  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    >=    '.')    {    if(opt  >>  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
135	[BUG]  [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  if(options!=  null  ||  options.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  if(options!=  null  ||  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.size()    ==    1)    {    if(options!=  null  ||  options.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
136	[BUG]  [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  if(options  ==  null  ||  options.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  if(options  ==  null  ||  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.size()    ==    1)    {    if(options  ==  null  ||  options.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
137	[BUG]  [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  If(options!=  null  ||  options.size()  ==  1)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  If(options!=  null  ||  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.size()    ==    1)    {    If(options!=  null  ||  options.size()  ==  1)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
138	[BUG]  [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  if(options  >=  null  ||  options.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.size()  ==  1)  {  if(options  >=  null  ||  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.size()    ==    1)    {    if(options  >=  null  ||  options.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
139	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
140	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
141	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
142	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
143	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt  ==  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
144	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
145	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  'n'  ||  opt  ==  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
146	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  'n'  ||  opt  ==  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt!=  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
148	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  ':')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt!=  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type  ==  '[')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
150	[BUG]  [BUGGY]  if(type  ==  '[')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type  ==  '[')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '['  ||  opt  ==  ']')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
152	[BUG]  [BUGGY]  if(type!=  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '['  ||  opt  ==  ']')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
153	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(opt);	  OptionBuilder    abuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
154	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);	  OptionBuilder    abuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
155	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createDefaultOptionBuilder();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createDefaultOptionBuilder();  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createDefaultOptionBuilder();	  OptionBuilder    abuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
156	[BUG]  [BUGGY]  if(options  ==  null)  {  if(options  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null)  {  if(options  ==  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options    ==    null)    {    if(options  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
157	[BUG]  [BUGGY]  if(options  ==  null)  {  if(options!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null)  {  if(options!=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options    ==    null)    {    if(options!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
158	[BUG]  [BUGGY]  if(options  ==  null)  {  If(options  ==  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null)  {  If(options  ==  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options    ==    null)    {    If(options  ==  null)  {	  	non-compiled	[CE]  ';'  expected	106	None	add
159	[BUG]  [BUGGY]  if(options  ==  null)  {  if(options  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null)  {  if(options  >=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options    ==    null)    {    if(options  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
160	[BUG]  [BUGGY]  gbuilder.setValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.setValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setValidator(validator(opt));	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
161	[BUG]  [BUGGY]  gbuilder.addOption(validator(opt));  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addOption(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addOption(validator(opt));	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
162	[BUG]  [BUGGY]  gbuilder.addValidator(argument);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(argument);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt  ==  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
164	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  'n'  ||  opt  ==  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
166	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  'n'  ||  opt  ==  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
167	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt!=  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
168	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt!=  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
169	[BUG]  [BUGGY]  abuilder.withOption(option);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOption(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOption(option);	  abuilder.withOption(argument);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
170	[BUG]  [BUGGY]  abuilder.withValidator(opt);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withValidator(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withValidator(opt);	  abuilder.withOption(argument);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
172	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt!=  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
174	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'n')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt!=  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
176	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
177	[BUG]  [BUGGY]  if(type!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
178	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ".equals(type));  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ".equals(type));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ".equals(type));  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
179	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  ';'  expected	131	None	replace
180	[BUG]  [BUGGY]  if(type!=  ';')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  ';')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  ';')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  ';'  expected	131	None	replace
181	[BUG]  [BUGGY]  if(type!=  ';')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  ';')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  ';')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
182	[BUG]  [BUGGY]  if(type!=  ';')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  ';')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  ';')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
183	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
184	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
185	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  required);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
186	[BUG]  [BUGGY]  if(opt  ==  '[')  {  if(opt  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  if(opt  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '[')    {    if(opt  ==  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
187	[BUG]  [BUGGY]  if(opt  ==  '[')  {  if(opt!=  '[')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  if(opt!=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '[')    {    if(opt!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
188	[BUG]  [BUGGY]  if(opt  ==  '[')  {  if(opt  >=  '[')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  if(opt  >=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '[')    {    if(opt  >=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
189	[BUG]  [BUGGY]  if(opt  ==  '[')  {  If(opt  ==  '[')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  If(opt  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '[')    {    If(opt  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	26	None	add
190	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  type.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  type.getOptionBuilder();  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  type.getOptionBuilder();	  OptionBuilder    obuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
191	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder(true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder(true);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  opt.getOptionBuilder(true);	  OptionBuilder    obuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
192	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(1);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(1);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(0);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
193	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  if(options!=  null  &&  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  if(options!=  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    &&    options.contains(opt))    {    if(options!=  null  &&  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
194	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  if(options  ==  null  &&  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  if(options  ==  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    &&    options.contains(opt))    {    if(options  ==  null  &&  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
195	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  If(options!=  null  &&  options.contains(opt))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  If(options!=  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    &&    options.contains(opt))    {    If(options!=  null  &&  options.contains(opt))  {	  	non-compiled	[CE]  ';'  expected	141	None	add
196	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  if(options  >=  null  &&  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt))  {  if(options  >=  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    &&    options.contains(opt))    {    if(options  >=  null  &&  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options  ==  null  ||  options.size()  ==  1)  {	  if(options!=    null    ||    options.size()    ==    1)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
198	[BUG]  [BUGGY]  if(options  ==  null  ||  options.size()  ==  1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null  ||  options.size()  ==  1)  {	  if(options!=    null    ||    options.size()    ==    1)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
199	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options!=  null  &&  options.size()  ==  1)  {	  if(options!=    null    ||    options.size()    ==    1)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
200	[BUG]  [BUGGY]  if(options!=  null  &&  options.size()  ==  1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.size()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  options.size()  ==  1)  {	  if(options!=    null    ||    options.size()    ==    1)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.size()  ==  2)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options!=  null  ||  options.size()  ==  2)  {	  if(options!=    null    ||    options.size()    ==    1)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
202	[BUG]  [BUGGY]  if(options!=  null  ||  options.size()  ==  2)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.size()  ==  2)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  options.size()  ==  2)  {	  if(options!=    null    ||    options.size()    ==    1)    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
203	[BUG]  [BUGGY]  abuilder.withOptionalValue(validator(opt));  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOptionalValue(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOptionalValue(validator(opt));	  abuilder.withValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
204	[BUG]  [BUGGY]  abuilder.withOptionalValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOptionalValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOptionalValidator(validator(opt));	  abuilder.withValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
205	[BUG]  [BUGGY]  abuilder.withOption(validator(opt));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOption(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOption(validator(opt));	  abuilder.withValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
206	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt!=  required)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt!=  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt!=  required)  {	  if(opt    ==    null    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	152	None	replace
207	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  required)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.length()  ==  required)  {	  if(opt    ==    null    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	152	None	replace
208	[BUG]  [BUGGY]  if(opt  ==  null  ||  type  ==  required)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  type  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  type  ==  required)  {	  if(opt    ==    null    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	152	None	replace
209	[BUG]  [BUGGY]  obuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  obuilder.setOption(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	obuilder.setOption(option);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
210	[BUG]  [BUGGY]  obuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  obuilder.setOption(type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	obuilder.setOption(type);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
211	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(abuilder);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(abuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(abuilder);	  OptionBuilder    obuilder    =    OptionBuilder.create(type);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
212	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt!=  'n'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt!=  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '+')    {    if(opt!=  'n'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
213	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt  ==  'n'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt  ==  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '+')    {    if(opt  ==  'n'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
214	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt  >=  'n'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt  >=  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '+')    {    if(opt  >=  'n'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
215	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt  >>  'n'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  if(opt  >>  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '+')    {    if(opt  >>  'n'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
216	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  empty  character  literal	108	None	replace
217	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
218	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt!=  '.'  &&  opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt!=  '.'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '+')    {    if(opt!=  '.'  &&  opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
219	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt  >=  '.'  &&  opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt  >=  '.'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '+')    {    if(opt  >=  '.'  &&  opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
220	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt  ==  '.'  &&  opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt  ==  '.'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '+')    {    if(opt  ==  '.'  &&  opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
221	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt!=  '.'  &&  opt  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  if(opt!=  '.'  &&  opt  >=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '+')    {    if(opt!=  '.'  &&  opt  >=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
222	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  If(options.containsKey(opt))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt))  {  If(options.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt))  {  If(options.containsKey(opt))  {	  if(options.contains(opt))    {    If(options.contains(opt))    {    	non-compiled	[CE]  ';'  expected	54	None	replace
223	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  options.get(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  options.get(opt);	  if(options.contains(opt))    {    If(options.contains(opt))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
224	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	128	1	replace
225	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	128	1	replace
226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  &&  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	128	1	replace
227	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  &&  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	128	1	replace
228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	128	1	replace
229	[BUG]  [BUGGY]  if(opt  >=  '['  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	128	1	replace
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options  ==  null  ||  options.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
231	[BUG]  [BUGGY]  if(options  ==  null  ||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null  ||  options.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options  ==  null  &&  options.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
233	[BUG]  [BUGGY]  if(options  ==  null  &&  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null  &&  options.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
234	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(opt);  }  [CE]  empty  character  literal  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  empty  character  literal	110	None	replace
235	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
236	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  empty  character  literal	110	None	replace
237	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
238	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.get(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.get(opt);	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
239	[BUG]  [BUGGY]  OptionsBuilder  obuilder  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionsBuilder  obuilder  =  options.get(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionsBuilder  obuilder  =  options.get(opt);	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
240	[BUG]  [BUGGY]  options.put(opt,  options.get(opt));  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  options.put(opt,  options.get(opt));  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	options.put(opt,  options.get(opt));	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
241	[BUG]  [BUGGY]  options.put(opt,  options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  options.put(opt,  options);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	options.put(opt,  options);	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
242	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
243	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	109	None	replace
244	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt  ==  '[')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  If(opt  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  If(opt  ==  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	137	None	replace
245	[BUG]  [BUGGY]  if(type!=  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  If(opt!=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  If(opt!=  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	137	None	replace
246	[BUG]  [BUGGY]  if(type!=  '[')  {  If(opt  ==  '[')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  If(opt  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  If(opt  ==  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	137	None	replace
247	[BUG]  [BUGGY]  if(required)  {  if(opt!=  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt!=  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt!=  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
248	[BUG]  [BUGGY]  if(required)  {  if(opt!=  'n'  ||  preferred)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt!=  'n'  ||  preferred)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt!=  'n'  ||  preferred)  {	  if(opt!=    'n'    ||    required)    {    if(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
249	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(option));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(option));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(option));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
250	[BUG]  [BUGGY]  if(opt  ||  type)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  type)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  type)  {	  if(opt    ||    opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	123	None	replace
251	[BUG]  [BUGGY]  if(opt  ||  opt.equals( " "))  {  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  opt.equals( " "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  opt.equals( " "))  {	  if(opt    ||    opt)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
252	[BUG]  [BUGGY]  if(opt  ||  opt.equals(type))  {  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  opt.equals(type))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  opt.equals(type))  {	  if(opt    ||    opt)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
253	[BUG]  [BUGGY]  if(opt  ||  opt.length()  ==  1)  {  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  opt.length()  ==  1)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  opt.length()  ==  1)  {	  if(opt    ||    opt)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	123	None	replace
254	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  if(opt  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
255	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  if(opt!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
256	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  if(opt  >=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
257	[BUG]  [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '.')    {    If(opt  ==  '.')  {	  	non-compiled	[CE]  ';'  expected	39	None	add
258	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt!=  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt!=  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
259	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  ==  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  ==  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt  ==  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
260	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  >=  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  >=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt  >=  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
261	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  >>  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  >>  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt  >>  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
262	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null)  {  if(type!=  '[')  {  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
263	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt  ==  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt  ==  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    'n'    ||    required)    {    if(opt  ==  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
264	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt!=  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt!=  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    'n'    ||    required)    {    if(opt!=  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
265	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt  >=  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt  >=  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    'n'    ||    required)    {    if(opt  >=  'n'  ||  required)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
266	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  If(opt  ==  'n'  ||  required)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  If(opt  ==  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    'n'    ||    required)    {    If(opt  ==  'n'  ||  required)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
267	[BUG]  [BUGGY]  if(required)  {  if(opt  >=  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  >=  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  >=  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt    >=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
268	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.setOption(opt);  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
269	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  abuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  abuilder.setOption(opt);  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
270	[BUG]  [BUGGY]  if(type!=  opt)  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  opt)  {  abuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  opt)  {  abuilder.setOption(opt);  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
271	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withOption(opt,  required);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withOption(opt,  required);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withOption(opt,  required);  }	  if(opt!=    '[')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
272	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.withOption(opt,  required);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  abuilder.withOption(opt,  required);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '[')  {  abuilder.withOption(opt,  required);  }	  if(opt!=    '[')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
273	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt!=    'r')    {    if(opt!=  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
274	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt!=    'r')    {    if(opt  ==  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
275	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt  >=  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt  >=  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt!=    'r')    {    if(opt  >=  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
276	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt  >=  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt!=    'r')    {    if(opt!=  'n'  ||  opt  >=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
277	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt!=    'r')    {    if(opt!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	129	None	add
278	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt!=  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt!=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
279	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  >=  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  >=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt  >=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
280	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  ==  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  ==  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt  ==  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
281	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  >>  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  >>  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt  >>  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
282	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.contains(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  options.contains(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  options.contains(opt);	  if(options.contains(opt))    {    OptionBuilder    abuilder    =    options.contains(opt);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
283	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt);  }	  if(options.contains(opt))    {    OptionBuilder    abuilder    =    options.contains(opt);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
284	[BUG]  [BUGGY]  if(options.contains(opt))  {  OptionBuilder  abuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt))  {  OptionBuilder  abuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt))  {  OptionBuilder  abuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    abuilder    =    options.contains(opt);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
285	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  abuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  abuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  abuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    abuilder    =    options.contains(opt);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
286	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  if(options.contains(opt)&&  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  if(options.contains(opt)&&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&    options.contains(opt))    {    if(options.contains(opt)&&  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
287	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  If(options.contains(opt)&&  options.contains(opt))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  If(options.contains(opt)&&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&    options.contains(opt))    {    If(options.contains(opt)&&  options.contains(opt))  {	  	non-compiled	[CE]  ';'  expected	157	None	add
288	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt)&&  options.contains(opt));  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  OptionBuilder  abuilder  =  options.contains(opt)&&  options.contains(opt));  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&    options.contains(opt))    {    OptionBuilder  abuilder  =  options.contains(opt)&&  options.contains(opt));	  	non-compiled	[CE]  ';'  expected	157	None	add
289	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
290	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
291	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
292	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  argument);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
293	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type,  opt));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(validator(type,  opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(type,  opt));	  gbuilder.addValidator(validator(opt,    type));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
294	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt,  type),  argument);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(validator(opt,  type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(opt,  type),  argument);	  gbuilder.addValidator(validator(opt,    type));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
295	[BUG]  [BUGGY]  gbuilder.setValidator(validator(opt,  type));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.setValidator(validator(opt,  type));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setValidator(validator(opt,  type));	  gbuilder.addValidator(validator(opt,    type));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
296	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
297	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt  ==  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
298	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
299	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  >=  'n'  ||  opt  ==  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
300	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  'n'  ||  opt  ==  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
301	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt!=  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
302	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt!=  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
303	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
304	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
305	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  Abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [CE]  cannot  find  symbol  Abuilder  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  Abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    Abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	17	None	add
306	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  ifbuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [CE]  cannot  find  symbol  ifbuilder  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  ifbuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    ifbuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  cannot  find  symbol  ifbuilder	17	None	add
307	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  &&  opt!=  '+')  {	  if(opt!=    '.'    &&    opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	136	1	replace
308	[BUG]  [BUGGY]  if(opt  ==  '.'  &&  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  &&  opt!=  '+')  {	  if(opt!=    '.'    &&    opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	136	1	replace
309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  ||  opt!=  '+')  {	  if(opt!=    '.'    &&    opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	136	1	replace
310	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt!=  '+')  {	  if(opt!=    '.'    &&    opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	136	1	replace
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  &&  opt  ==  '+')  {	  if(opt!=    '.'    &&    opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	136	1	replace
312	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  &&  opt  ==  '+')  {	  if(opt!=    '.'    &&    opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	136	1	replace
313	[BUG]  [BUGGY]  if(opt.contains(options)||  options.containsKey(opt))  {  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt.contains(options)||  options.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt.contains(options)||  options.containsKey(opt))  {	  if(options.contains(opt)||    options.containsKey(opt))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	67	None	replace
314	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.containsKey(opt))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&  options.containsKey(opt))  {	  if(options.contains(opt)||    options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
315	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  option.getOptionBuilder(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  option.getOptionBuilder(opt);	  OptionBuilder    obuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
316	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '*')  {  if(opt  ==  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '*')    {    if(opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
317	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '*')  {  if(opt!=  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '*')    {    if(opt!=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
318	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt  >=  '*')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '*')  {  if(opt  >=  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '*')    {    if(opt  >=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
319	[BUG]  [BUGGY]  if(opt  ==  '*')  {  If(opt  ==  '*')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '*')  {  If(opt  ==  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    '*')    {    If(opt  ==  '*')  {	  	non-compiled	[CE]  ';'  expected	111	None	add
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options!=  null  &&  options.contains(opt)||  options.contains(opt))  {	  if(options!=    null    &&    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	142	1	replace
321	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt)||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  options.contains(opt)||  options.contains(opt))  {	  if(options!=    null    &&    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	142	1	replace
322	[BUG]  [BUGGY]  if(options!=  null  &&  options.contains(opt)||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  options.contains(opt)||  arguments.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  options.contains(opt)||  arguments.contains(opt))  {	  if(options!=    null    &&    options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	142	None	replace
323	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options,  required);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
324	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  null);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  null);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
325	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options,  opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options,  opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
326	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
327	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt!=  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
328	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  >=  '['  &&  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  >=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt  >=  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
329	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  ==  '['  &&  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  ==  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt  ==  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
330	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  >=  ']')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  >=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt!=  '['  &&  opt  >=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
331	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	132	None	replace
332	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	132	None	replace
333	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
334	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
335	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
336	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
337	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
338	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
339	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
340	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  ||  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	134	1	replace
342	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	134	1	replace
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  &&  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	134	1	replace
344	[BUG]  [BUGGY]  if(opt  ==  '.'  &&  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  &&  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	134	1	replace
345	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
346	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
347	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
348	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.equals( "- "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.equals( "- "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.equals( "- "))  {	  if(opt    ==    null    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	76	None	replace
349	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.equals( "* "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.equals( "* "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.equals( "* "))  {	  if(opt    ==    null    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	76	None	replace
350	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.equals( "_ "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.equals( "_ "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.equals( "_ "))  {	  if(opt    ==    null    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	76	None	replace
351	[BUG]  [BUGGY]  abuilder.withOptional(opt);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOptional(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOptional(opt);	  abuilder.reset();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
352	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt!=  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    'n')    {    if(opt!=  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
353	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
354	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt  >=  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt  >=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    'n')    {    if(opt  >=  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
355	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt  >>  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  if(opt  >>  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    'n')    {    if(opt  >>  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
356	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt!=  'n'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt!=  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    ':')    {    if(opt!=  'n'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
357	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt  ==  'n'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt  ==  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    ':')    {    if(opt  ==  'n'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
358	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt  >=  'n'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt  >=  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    ':')    {    if(opt  >=  'n'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
359	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt  >>  'n'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  if(opt  >>  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    ':')    {    if(opt  >>  'n'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
360	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.createOptionBuilder(opt);	  OptionBuilder    obuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
361	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder(0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder(0);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.createOptionBuilder(0);	  OptionBuilder    obuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
362	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >=  'n'  ||  opt  ==  required)  {	  if(opt!=    'n'    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	43	None	replace
363	[BUG]  [BUGGY]  if(opt!=  null)  {  If(options!=  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null)  {  If(options!=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null)  {  If(options!=  null)  {	  if(options!=    null)    {    If(options!=    null)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
364	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  if(options.contains(opt)||  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  if(options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||    options.contains(opt))    {    if(options.contains(opt)||  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
365	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  If(options.contains(opt)||  options.contains(opt))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  If(options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||    options.contains(opt))    {    If(options.contains(opt)||  options.contains(opt))  {	  	non-compiled	[CE]  ';'  expected	64	None	add
366	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt!=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt!=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
367	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt  ==  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
368	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt  >=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
369	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >>  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >>  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt  >>  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
370	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt!=  ']')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  If(opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  If(opt!=  ']')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	138	None	replace
371	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt  ==  ']')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  If(opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  If(opt  ==  ']')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	138	None	replace
372	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  ';')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	138	1	replace
373	[BUG]  [BUGGY]  if(opt  ==  ';')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  ';')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	138	1	replace
374	[BUG]  [BUGGY]  if(opt!=  null  &&  options.contains(opt))  {  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  &&  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  &&  options.contains(opt))  {	  if(options!=    null    &&    arguments.contains(opt))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	143	None	replace
375	[BUG]  [BUGGY]  if(options!=  null  &&  opt.contains(option))  {  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  opt.contains(option))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  opt.contains(option))  {	  if(options!=    null    &&    arguments.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  option	143	None	replace
376	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(type);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(type);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
377	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt)+  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt)+  1;  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(opt)+  1;	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
378	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  required);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
379	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type  ==  '.')  {	  if(type!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	42	1	replace
380	[BUG]  [BUGGY]  if(type  ==  '.')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type  ==  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type  ==  '.')  {	  if(type!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	42	1	replace
381	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt!=  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt!=  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
382	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  ==  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  ==  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt  ==  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
383	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  >=  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  >=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt  >=  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
384	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  >>  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  >>  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt  >>  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
385	[BUG]  [BUGGY]  if(opt  &&  argument!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  &&  argument!=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  &&  argument!=  null)  {	  if(opt    ||    argument!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	122	None	replace
386	[BUG]  [BUGGY]  if(opt  ||  type!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  type!=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  type!=  null)  {	  if(opt    ||    argument!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	122	None	replace
387	[BUG]  [BUGGY]  OptionBuilder  optionBuilder  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  optionBuilder  =  options.get(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  optionBuilder  =  options.get(opt);	  if(options.contains(opt))    {    OptionBuilder    optionBuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
388	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    optionBuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
389	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    optionBuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
390	[BUG]  [BUGGY]  if(options.contains(opt)||  options.containsKey(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.containsKey(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.containsKey(opt))  {  OptionBuilder  optionBuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    optionBuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
391	[BUG]  [BUGGY]  gbuilder.addOption(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addOption(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addOption(opt);	  gbuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
392	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
393	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
394	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.')  {  abuilder.reset();  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
395	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt!=  'n'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt!=  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '-')    {    if(opt!=  'n'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
396	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt  ==  'n'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt  ==  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '-')    {    if(opt  ==  'n'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
397	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt  >=  'n'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt  >=  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '-')    {    if(opt  >=  'n'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
398	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt  >>  'n'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  if(opt  >>  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '-')    {    if(opt  >>  'n'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
399	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '@')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt  ==  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
400	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '@')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  &&  opt!=  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
401	[BUG]  [BUGGY]  if(type!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
402	[BUG]  [BUGGY]  if(opt  &&  argument  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  &&  argument  ==  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  &&  argument  ==  null)  {	  if(opt    ||    argument    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	121	None	replace
403	[BUG]  [BUGGY]  if(opt  ||  type  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  type  ==  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  type  ==  null)  {	  if(opt    ||    argument    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	121	None	replace
404	[BUG]  [BUGGY]  if(required)  {  if(opt!=  'n'  ||  opt  ==  required)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt!=  'n'  ||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt!=  'n'  ||  opt  ==  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt    >>    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
405	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  if(options!=  null  ||  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  if(options!=  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.contains(opt))    {    if(options!=  null  ||  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
406	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  if(options  ==  null  ||  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  if(options  ==  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.contains(opt))    {    if(options  ==  null  ||  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
407	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  If(options!=  null  ||  options.contains(opt))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  If(options!=  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.contains(opt))    {    If(options!=  null  ||  options.contains(opt))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
408	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  if(options  >=  null  ||  options.contains(opt))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  if(options  >=  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.contains(opt))    {    if(options  >=  null  ||  options.contains(opt))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
409	[BUG]  [BUGGY]  if(opt.contains(option)||  options.containsKey(opt))  {  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt.contains(option)||  options.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt.contains(option)||  options.containsKey(opt))  {	  if(options.contains(opt)||    options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol  option	67	None	replace
410	[BUG]  [BUGGY]  if(required!=  'n')  {  if(opt  ==  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required!=  'n')  {  if(opt  ==  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required!=  'n')  {  if(opt  ==  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt    ==    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
411	[BUG]  [BUGGY]  if(opt!=  'n')  {  if(opt  ==  'n'  ||  required)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  if(opt  ==  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  if(opt  ==  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    if(opt    ==    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
412	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  ':')  {	  if(type!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	42	1	replace
413	[BUG]  [BUGGY]  if(opt!=  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ':')  {	  if(type!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	42	1	replace
414	[BUG]  [BUGGY]  if(required)  {  if(opt  >=  'n')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  >=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  >=  'n')  {	  if(opt!=    'n'    ||    required)    {    if(opt    >=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
415	[BUG]  [BUGGY]  if(required)  {  if(opt  >=  'n'  ||  opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  >=  'n'  ||  opt!=  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  >=  'n'  ||  opt!=  '*')  {	  if(opt!=    'n'    ||    required)    {    if(opt    >=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
416	[BUG]  [BUGGY]  abuilder.setOption(options);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.setOption(options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(options);	  abuilder.setOption(op);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
417	[BUG]  [BUGGY]  gbuilder.setOption(option  ||  argument  ==  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.setOption(option  ||  argument  ==  null);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setOption(option  ||  argument  ==  null);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
418	[BUG]  [BUGGY]  gbuilder.setOption(option  ||  argument!=  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.setOption(option  ||  argument!=  null);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.setOption(option  ||  argument!=  null);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
419	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  If(opt!=  '['  ||  opt  ==  ':')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  If(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    If(opt!=  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  ';'  expected	127	None	add
420	[BUG]  [BUGGY]  if(opt  ||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  arguments.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  arguments.contains(opt))  {	  if(opt    ||    argument!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  arguments	122	None	replace
421	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
422	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
423	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(opt);  }  [CE]  empty  character  literal  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  empty  character  literal	110	None	replace
424	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '-')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
425	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder1();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder1();  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder1();	  OptionBuilder    obuilder    =    options.getOptionBuilder2();    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
426	[BUG]  [BUGGY]  abuilder.withOptionalValue(1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOptionalValue(1);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOptionalValue(1);	  abuilder.reset();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
427	[BUG]  [BUGGY]  if(opt!=  'n')  {  if(opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  if(opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  if(opt  ==  'r')  {	  if(opt!=    '[')    {    if(opt    ==    '[')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
428	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n')  {	  if(options!=    null)    {    if(options    >=    null)    {    	compilable	  [FE]  ComparisonFailure  	83	1	replace
429	[BUG]  [BUGGY]  if(opt!=  'n')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {	  if(options!=    null)    {    if(options    >=    null)    {    	compilable	  [FE]  ComparisonFailure  	83	1	replace
430	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(options);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
431	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
432	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
433	[BUG]  [BUGGY]  if(options!=  null  &&  option.contains(opt))  {  [CE]  cannot  find  symbol  option  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  &&  option.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  &&  option.contains(opt))  {	  if(options!=    null    &&    arguments.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  option	143	None	replace
434	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder(options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.createOptionBuilder(options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.createOptionBuilder(options);	  OptionBuilder    obuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
435	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  Options!=  null  ||  options.contains(opt))  {  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.contains(opt))  {  Options!=  null  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=    null    ||    options.contains(opt))    {    Options!=  null  ||  options.contains(opt))  {	  	non-compiled	[CE]  not  a  statement	5	None	add
436	[BUG]  [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'r')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'r')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  If(opt  ==  'r')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	138	None	replace
437	[BUG]  [BUGGY]  if(opt!=  '.')  {  If(opt  ==  '>')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  If(opt  ==  '>')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  If(opt  ==  '>')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	138	None	replace
438	[BUG]  [BUGGY]  abuilder.setOption(option  ||  argument  ==  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.setOption(option  ||  argument  ==  null);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(option  ||  argument  ==  null);	  abuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
439	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  >>  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  >>  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt!=  '['  &&  opt  >>  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
440	[BUG]  [BUGGY]  if(opt  ==  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  If(opt!=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '[')  {  If(opt!=  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	137	None	replace
441	[BUG]  [BUGGY]  OptionsBuilder  optionBuilder  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionsBuilder  optionBuilder  =  options.get(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionsBuilder  optionBuilder  =  options.get(opt);	  if(options.contains(opt))    {    OptionBuilder    optionBuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
442	[BUG]  [BUGGY]  OptionBuilder  optionBuilder  =  options.get(0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  optionBuilder  =  options.get(0);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  optionBuilder  =  options.get(0);	  if(options.contains(opt))    {    OptionBuilder    optionBuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
443	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  if(opt!=  '+')  {	  if(opt!=    '.')    {    if(opt!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
444	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  if(opt  ==  '+')  {	  if(opt!=    '.')    {    if(opt!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
445	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
446	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(option);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(option);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
447	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  If(opt!=  'n'  ||  opt  ==  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '-')  {  If(opt!=  'n'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '-')    {    If(opt!=  'n'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	113	None	add
448	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '['  &&  opt  ==  ']')  {	  if(opt!=    '['    &&    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	147	1	replace
449	[BUG]  [BUGGY]  if(opt  ==  '['  &&  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '['  &&  opt  ==  ']')  {	  if(opt!=    '['    &&    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	147	1	replace
450	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(option);	  OptionBuilder    obuilder    =    OptionBuilder.create(type);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
451	[BUG]  [BUGGY]  if(opt  ||  arguments!=  null)  {  [CE]  cannot  find  symbol  arguments  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  arguments!=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  arguments!=  null)  {	  if(opt    ||    argument    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  arguments	121	None	replace
452	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  false);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  false);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
453	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  abuilder);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  abuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  abuilder);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
454	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  if(opt  >=  '+')  {	  if(opt!=    '.')    {    if(opt    >=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
455	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	132	None	replace
456	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	132	None	replace
457	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  argument);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  argument);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
458	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(option);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
459	[BUG]  [BUGGY]  if(opt!='')  {  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!='')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!='')  {	  if(opt!=    '*')    {    if(opt    >>    '*')    {    	non-compiled	[CE]  empty  character  literal	4	None	replace
460	[BUG]  [BUGGY]  gbuilder.addOption(argument);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addOption(argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addOption(argument);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
461	[BUG]  [BUGGY]  gbuilder.addOption(argument,  opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addOption(argument,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addOption(argument,  opt);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
462	[BUG]  [BUGGY]  if(options!=  null  ||  options.contains(opt)||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options.contains(opt)||  arguments.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  options.contains(opt)||  arguments.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	6	None	replace
463	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.createOptionBuilder();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  option.createOptionBuilder();  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  option.createOptionBuilder();	  OptionBuilder    obuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
464	[BUG]  [BUGGY]  if(opt  ||  argument)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  argument)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  argument)  {	  if(opt    ||    opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	123	None	replace
465	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  gbuilder.setOption(opt);  }	  gbuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
466	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt,  type);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt,  type);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withOption(opt,  type);  }	  if(opt!=    '[')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
467	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt,  null);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withOption(opt,  null);  }	  if(opt!=    '[')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
468	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  incomparable  types:  char  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	19	None	replace
469	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
470	[BUG]  [BUGGY]  obuilder.setOption(argument);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  obuilder.setOption(argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	obuilder.setOption(argument);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
471	[BUG]  [BUGGY]  obuilder.setOption(opt  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  obuilder.setOption(opt  +  1);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	obuilder.setOption(opt  +  1);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
472	[BUG]  [BUGGY]  if(required)  {  if(opt!=  'n')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt!=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt!=  'n')  {	  if(opt!=    'n'    ||    required)    {    if(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
473	[BUG]  [BUGGY]  if(required)  {  if(opt!=  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt!=  'n'  ||  opt  ==  'n')  {	  if(opt!=    'n'    ||    required)    {    if(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
474	[BUG]  [BUGGY]  if(options!=  null  ||  options!=  required)  {  [CE]  incomparable  types:  Set  and  boolean  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options!=  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  options!=  required)  {	  if(options!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	93	None	replace
475	[BUG]  [BUGGY]  if(opt  &&  opt!=  '.')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  &&  opt!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  &&  opt!=  '.')  {	  if(opt    ||    type!=    '.')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	124	None	replace
476	[BUG]  [BUGGY]  if(opt  &&  type!=  '.')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  &&  type!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  &&  type!=  '.')  {	  if(opt    ||    type!=    '.')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	124	None	replace
477	[BUG]  [BUGGY]  if(options!=  null  ||  options  ==  required)  {  [CE]  incomparable  types:  Set  and  boolean  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  options  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  options  ==  required)  {	  if(options    ==    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	126	None	replace
478	[BUG]  [BUGGY]  if(opt!=  '.')  {  If(opt  ==  ';')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  If(opt  ==  ';')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  If(opt  ==  ';')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ';'  expected	139	None	replace
479	[BUG]  [BUGGY]  if(opt!=  '.')  {  If(opt  ==  ':')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  If(opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  If(opt  ==  ':')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ';'  expected	139	None	replace
480	[BUG]  [BUGGY]  abuilder.setOption(argument);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.setOption(argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.setOption(argument);	  abuilder.setValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
481	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  gbuilder.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  gbuilder.getOptionBuilder();  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  gbuilder.getOptionBuilder();	  OptionBuilder    obuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
482	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
483	[BUG]  [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'n'  ||  required)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  If(opt  ==  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
484	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  If(opt!=  'n'  ||  required)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  If(opt!=  'n'  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  required)  {  If(opt!=  'n'  ||  required)  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
485	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  ';'  expected	17	None	add
486	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt);  abuilder.withValidator(validator(opt));  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt);  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(opt);  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	17	None	add
487	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  abuilder  =  options.containsKey(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt))  {  OptionBuilder  abuilder  =  options.containsKey(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt))  {  OptionBuilder  abuilder  =  options.containsKey(opt);  }	  if(options.contains(opt))    {    OptionBuilder    abuilder    =    options.contains(opt);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
488	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  abuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.setOption(opt);  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
489	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  ';'  expected	131	None	replace
490	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  ';'  expected	131	None	replace
491	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withOption(opt);  }	  if(opt    ==    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
492	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  ']')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
493	[BUG]  [BUGGY]  if(opt!=  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ']')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
494	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
495	[BUG]  [BUGGY]  if(opt  >>  required)  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >>  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >>  required)  {	  if(opt    >=    required)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	51	None	replace
496	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  type);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  type);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withOption(opt,  type);  }	  if(opt!=    '.')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
497	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  null);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withOption(opt,  null);  }	  if(opt!=    '.')    {    abuilder.withOption(opt,    required);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
498	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(type);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(type);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.')  {  abuilder.withOption(type);  }	  if(opt!=    '.')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
499	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  option);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
500	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
501	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
502	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  ||  opt  ==  '+')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
503	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  ||  opt  ==  '+')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
504	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
505	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
506	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
507	[BUG]  [BUGGY]  if(opt!=  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
508	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
509	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
510	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withMinimum(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
511	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  ||  opt.length()  ==  0)  {	  if(opt!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	9	None	replace
512	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(options.contains(opt)||  options.contains(opt)||  options.contains(opt))  {	  if(options.contains(opt)||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
513	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt)||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt)||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt)||  options.contains(opt))  {	  if(options.contains(opt)||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
514	[BUG]  [BUGGY]  if(opt!=  null  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  ||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  ||  opt  ==  required)  {	  if(opt    ==    null    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	152	None	replace
515	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length  ==  required)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.length  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.length  ==  required)  {	  if(opt    ==    null    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	152	None	replace
516	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  If(opt!=  '.'  ||  opt  ==  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  If(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    If(opt!=  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	88	None	add
517	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  If(opt!=  'n'  ||  opt  ==  ':')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  ':')  {  If(opt!=  'n'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    ':')    {    If(opt!=  'n'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  ';'  expected	148	None	add
518	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withMinimum(1);  }	  if(opt    ==    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
519	[BUG]  [BUGGY]  if(opt!=  'n')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  gbuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  gbuilder.setOption(opt);  }	  if(opt!=    opt)    {    gbuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
520	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.withOption(type);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '[')  {  abuilder.withOption(type);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '[')  {  abuilder.withOption(type);  }	  if(opt!=    '[')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
521	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  false);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  false);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
522	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  option);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
523	[BUG]  [BUGGY]  if(opt!=  ']')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ']')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ']')  {  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
524	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '.'  ||  opt  ==  '+')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
525	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.'  ||  opt  ==  '+')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
526	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(options,  opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(options,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(options,  opt);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
527	[BUG]  [BUGGY]  if(opt  ==  requirement)  {  [CE]  cannot  find  symbol  requirement  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  requirement)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  requirement)  {	  if(required    ==    opt)    {    	non-compiled	[CE]  cannot  find  symbol  requirement	33	None	replace
528	[BUG]  [BUGGY]  if(options!=  null  ||  opt!=  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  null  ||  opt!=  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  null  ||  opt!=  required)  {	  if(type!=    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	52	None	replace
529	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(abuilder);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	112	1	replace
531	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	112	1	replace
532	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.equals( "- "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  ||  opt.equals( "- "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  ||  opt.equals( "- "))  {	  if(opt    ==    null    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	76	None	replace
533	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.equals( "* "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  ||  opt.equals( "* "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  ||  opt.equals( "* "))  {	  if(opt    ==    null    ||    opt.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	76	None	replace
534	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
535	[BUG]  [BUGGY]  if(argument  ==  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument  ==  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument  ==  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
536	[BUG]  [BUGGY]  if(options.containsKey(opt)&&  options.containsKey(opt))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.containsKey(opt)&&  options.containsKey(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.containsKey(opt)&&  options.containsKey(opt))  {	  if(options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
537	[BUG]  [BUGGY]  if(opt.containsKey(option))  {  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt.containsKey(option))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt.containsKey(option))  {	  if(options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol  option	68	None	replace
538	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt)||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt)||  arguments.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&  options.contains(opt)||  arguments.contains(opt))  {	  if(options.contains(opt)&&    options.contains(opt))    {    	non-compiled	[CE]  cannot  find  symbol  arguments	158	None	replace
539	[BUG]  [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.contains(opt)&&  options.contains(opt);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)&&  options.contains(opt))  {  OptionBuilder  optionBuilder  =  options.contains(opt)&&  options.contains(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)&&    options.contains(opt))    {    OptionBuilder  optionBuilder  =  options.contains(opt)&&  options.contains(opt);	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
540	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  If(opt!=  '['  &&  opt  ==  ']')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  If(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    If(opt!=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	146	None	add
541	[BUG]  [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
542	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(argument);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(argument);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withOption(argument);  }	  abuilder.withOption(argument);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
543	[BUG]  [BUGGY]  if(opt  ==  opt)  {  abuilder.withOption(argument);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  opt)  {  abuilder.withOption(argument);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  opt)  {  abuilder.withOption(argument);  }	  abuilder.withOption(argument);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
544	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt,  argument));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(validator(opt,  argument));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(validator(opt,  argument));	  gbuilder.addValidator(validator(opt,    type));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
545	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '['  ||  type  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '['  ||  type  ==  ']')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
546	[BUG]  [BUGGY]  if(type!=  '['  ||  type  ==  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '['  ||  type  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '['  ||  type  ==  ']')  {	  if(type!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
547	[BUG]  [BUGGY]  if(options!=  options.size())  {  [CE]  incomparable  types:  Set  and  int  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  options.size())  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  options.size())  {	  if(options!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  int	93	None	replace
548	[BUG]  [BUGGY]  if(options!=  required  &&  opt!=  options.size())  {  [CE]  incomparable  types:  Set  and  boolean  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options!=  required  &&  opt!=  options.size())  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options!=  required  &&  opt!=  options.size())  {	  if(options!=    required)    {    	non-compiled	[CE]  incomparable  types:  Set  and  boolean	93	None	replace
549	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  &&  opt  ==  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
550	[BUG]  [BUGGY]  if(opt!=  'n'  &&  opt  ==  'n')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  &&  opt  ==  'n')  {	  if(opt!=    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	116	1	replace
551	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  options.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
552	[BUG]  [BUGGY]  if(opt!=  'n'  ||  options.contains(opt))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  options.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  options.contains(opt))  {	  if(options!=    null    ||    options.contains(opt))    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
553	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  &&  opt  ==  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
554	[BUG]  [BUGGY]  if(opt!=  'n'  &&  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  &&  opt  ==  '+')  {	  if(opt!=    'n'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	118	1	replace
555	[BUG]  [BUGGY]  if(option!=  opt)  {  abuilder.setOption(option);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(option!=  opt)  {  abuilder.setOption(option);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(option!=  opt)  {  abuilder.setOption(option);  }	  abuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
556	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  null  ||  opt.length()  ==  0)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  null  ||  opt.length()  ==  0)  {	  if(opt    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	75	None	replace
557	[BUG]  [BUGGY]  if(argument  ==  null)  {  [CE]  variable  argument  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument  ==  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument  ==  null)  {	  if(opt    ==    null)    {    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	75	None	replace
558	[BUG]  [BUGGY]  if(opt  ==  '.')  {  If(opt!=  ';'  expected)  {  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.')  {  If(opt!=  ';'  expected)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.')  {  If(opt!=  ';'  expected)  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ')'  expected	139	None	replace
559	[BUG]  [BUGGY]  if(opt!=  ':')  {  If(opt!=  ';'  expected)  {  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ':')  {  If(opt!=  ';'  expected)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ':')  {  If(opt!=  ';'  expected)  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ')'  expected	139	None	replace
560	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options,  type);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    options);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
561	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  null);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  null);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
562	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(type!=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
563	[BUG]  [BUGGY]  if(type!=  '.'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
564	[BUG]  [BUGGY]  if(opt!=  'n'  &&  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  &&  opt  ==  required)  {	  if(opt!=    'n'    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	43	None	replace
565	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  If(opt!=  '['  ||  opt  ==  ']')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  If(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    If(opt!=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	30	None	add
566	[BUG]  [BUGGY]  if(opt!=  ':')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ':')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ':')  {  abuilder.withOption(opt);  }	  if(type!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
567	[BUG]  [BUGGY]  if(options  ==  null  ||  arguments.contains(opt))  {  [CE]  cannot  find  symbol  arguments  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  arguments.contains(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null  ||  arguments.contains(opt))  {	  if(options    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  arguments	107	None	replace
568	[BUG]  [BUGGY]  if(options  ==  null  ||  options.hasOption(opt))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  options.hasOption(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null  ||  options.hasOption(opt))  {	  if(options    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
569	[BUG]  [BUGGY]  if(required)  {  if(opt  ==  'n'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  ==  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  ==  'n'  ||  opt  ==  '*')  {	  if(opt!=    'n'    ||    required)    {    if(opt    ==    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
570	[BUG]  [BUGGY]  gbuilder.addValidator(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addValidator(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addValidator(opt);	  gbuilder.addValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
571	[BUG]  [BUGGY]  if(option!=  opt)  {  gbuilder.setOption(option);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(option!=  opt)  {  gbuilder.setOption(option);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(option!=  opt)  {  gbuilder.setOption(option);  }	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
572	[BUG]  [BUGGY]  gbuilder.addOption(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  gbuilder.addOption(option);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	gbuilder.addOption(option);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
573	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.reset();  }	  if(opt    ==    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
574	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
575	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  If(opt!=  '.'  &&  opt!=  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  If(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    If(opt!=  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  ';'  expected	133	None	add
576	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
577	[BUG]  [BUGGY]  if(options  ==  Option.NUMBER_INT  ||  options  ==  required)  {  [CE]  cannot  find  symbol  NUMBER_INT  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  Option.NUMBER_INT  ||  options  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  Option.NUMBER_INT  ||  options  ==  required)  {	  if(options    ==    required)    {    	non-compiled	[CE]  cannot  find  symbol  NUMBER_INT	126	None	replace
578	[BUG]  [BUGGY]  if(options  ==  OptionOption.NUMBER_INT  ||  options  ==  required)  {  [CE]  cannot  find  symbol  OptionOption  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  OptionOption.NUMBER_INT  ||  options  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  OptionOption.NUMBER_INT  ||  options  ==  required)  {	  if(options    ==    required)    {    	non-compiled	[CE]  cannot  find  symbol  OptionOption	126	None	replace
579	[BUG]  [BUGGY]  if(opt!=  ':')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ':')  {  If(opt!=  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ':')  {  If(opt!=  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	137	None	replace
580	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  &&  opt  ==  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
581	[BUG]  [BUGGY]  if(opt!=  'n'  &&  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  &&  opt  ==  ':')  {	  if(opt!=    'n'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	149	1	replace
582	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.reset();  }	  if(opt    ==    '[')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
583	[BUG]  [BUGGY]  if(opt  ||  argument  ==  null  ||  opt.equals( " "))  {  [CE]  bad  operand  types  for  binary  operator  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  argument  ==  null  ||  opt.equals( " "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  argument  ==  null  ||  opt.equals( " "))  {	  if(opt    ||    argument    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	121	None	replace
584	[BUG]  [BUGGY]  if(opt  ||  argument  ==  null  ||  opt.equals(argument))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  argument  ==  null  ||  opt.equals(argument))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  argument  ==  null  ||  opt.equals(argument))  {	  if(opt    ||    argument    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	121	None	replace
585	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt  ==  'n'  ||  needed)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  required)  {  if(opt  ==  'n'  ||  needed)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt    ==    'n'    ||    required)    {    if(opt  ==  'n'  ||  needed)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
586	[BUG]  [BUGGY]  if(options.contains(opt)||  options.containsValue(opt))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.containsValue(opt))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.containsValue(opt))  {	  if(options.contains(opt)||    options.containsKey(opt))    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
587	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(op);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(op);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.setOption(op);  }	  abuilder.setOption(op);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
588	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.setOption(op);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.setOption(op);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.setOption(op);  }	  abuilder.setOption(op);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
589	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.setValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.setValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.setValidator(validator(opt));  }	  abuilder.setValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
590	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  If(opt!=  'n'  ||  opt  ==  'n')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  If(opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    'n')    {    If(opt!=  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  ';'  expected	115	None	add
591	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  &&  opt.length()  >  0)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  &&  opt.length()  >  0)  {	  if(opt!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	9	None	replace
592	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.equals( " "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  &&  opt.equals( " "))  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  &&  opt.equals( " "))  {	  if(opt!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	9	None	replace
593	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.length()  ==  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  null  &&  opt.length()  ==  0)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  null  &&  opt.length()  ==  0)  {	  if(opt!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	9	None	replace
594	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
595	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.setValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.setValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.setValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
596	[BUG]  [BUGGY]  if(options  ==  null)  {  if(options  {  null)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null)  {  if(options  {  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options    ==    null)    {    if(options  {  null)  {	  	non-compiled	[CE]  ')'  expected	106	None	add
597	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt),  argument);  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt),  argument);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(opt),  argument);  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
598	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  gbuilder);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  gbuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  gbuilder);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
599	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  abuilder);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  abuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type,  abuilder);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
600	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(type);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(type);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  gbuilder.setOption(type);  }	  gbuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
601	[BUG]  [BUGGY]  abuilder.withOptionalValue(opt);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  abuilder.withOptionalValue(opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	abuilder.withOptionalValue(opt);	  abuilder.reset();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
602	[BUG]  [BUGGY]  if(opt!=  '.')  {  obuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  obuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  obuilder.setOption(opt);  }	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
603	[BUG]  [BUGGY]  if(opt!=  '[')  {  obuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  obuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  obuilder.setOption(opt);  }	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
604	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
605	[BUG]  [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.contains(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
606	[BUG]  [BUGGY]  if(options.contains(opt)||  options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  options.containsKey(opt))  {  OptionBuilder  obuilder  =  options.get(opt);  }	  if(options.contains(opt))    {    OptionBuilder    obuilder    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
607	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }	  abuilder.withValidator(validator(type));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
608	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  '.'  ||  opt  ==  '@')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
609	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  ||  opt  ==  '@')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
610	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '-'  &&  opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
611	[BUG]  [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-'  &&  opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	38	1	replace
612	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  '.'  ||  opt  ==  required)  {	  if(opt    ==    'n'    ||    opt    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	46	None	replace
613	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  If(opt!=  '.'  &&  opt!=  '+')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.'  &&  opt!=  '+')  {  If(opt!=  '.'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '.'    &&    opt!=    '+')    {    If(opt!=  '.'  &&  opt!=  '+')  {	  	non-compiled	[CE]  ';'  expected	135	None	add
614	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  If(opt!=  'n'  ||  opt  ==  '+')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '+')  {  If(opt!=  'n'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    'n'    ||    opt    ==    '+')    {    If(opt!=  'n'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  ';'  expected	117	None	add
615	[BUG]  [BUGGY]  if(argument  ||  opt!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument  ||  opt!=  null)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument  ||  opt!=  null)  {	  if(opt    ||    argument!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	122	None	replace
616	[BUG]  [BUGGY]  if(options.contains(opt)||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options.contains(opt)||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options.contains(opt)||  opt  ==  required)  {	  if(type    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	32	None	replace
617	[BUG]  [BUGGY]  if(options  ==  null  ||  opt  ==  required)  {  [CE]  incomparable  types:  char  and  boolean  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(options  ==  null  ||  opt  ==  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(options  ==  null  ||  opt  ==  required)  {	  if(type    ==    required)    {    	non-compiled	[CE]  incomparable  types:  char  and  boolean	32	None	replace
618	[BUG]  [BUGGY]  if(required  ==  opt  ||  opt!=  '-')  {  [CE]  incomparable  types:  boolean  and  char  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required  ==  opt  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required  ==  opt  ||  opt!=  '-')  {	  if(required    ==    opt)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  char	33	None	replace
619	[BUG]  [BUGGY]  if(required  ==  opt  ||  opt!=  'n')  {  [CE]  incomparable  types:  boolean  and  char  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required  ==  opt  ||  opt!=  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required  ==  opt  ||  opt!=  'n')  {	  if(required    ==    opt)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  char	33	None	replace
620	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withOption(type);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withOption(type);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withOption(type);  }	  if(opt!=    '[')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
621	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.reset();  }  [CE]  empty  character  literal  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.reset();  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.reset();  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  empty  character  literal	110	None	replace
622	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.reset();  }  [CE]  empty  character  literal  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.reset();  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '')  {  abuilder.reset();  }	          abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  empty  character  literal	110	None	replace
623	[BUG]  [BUGGY]  if(opt!=  '-')  {  If(opt!=  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  If(opt!=  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '-')    {    If(opt!=  '-')  {	  	non-compiled	[CE]  ';'  expected	37	None	add
624	[BUG]  [BUGGY]  if(required)  {  if(opt  >=  'n'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(required)  {  if(opt  >=  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(required)  {  if(opt  >=  'n'  ||  opt  ==  '*')  {	  if(opt!=    'n'    ||    required)    {    if(opt    >=    'n'    ||    required)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
625	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt  ==  'n'  ||  opt  ==  '*')  {	  if(opt    ==    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
626	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ==  'n'  ||  opt  ==  '*')  {	  if(opt    ==    'n'    ||    required)    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
627	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	109	None	replace
628	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '[')  {  abuilder.setOption(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '[')  {  abuilder.setOption(opt);  }	  if(opt!=    opt)    {    abuilder.setOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
629	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
630	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
631	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  gbuilder);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  gbuilder);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  gbuilder);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
632	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(opt);  }	          abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	132	None	replace
633	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  '['  ||  opt  ==  '[')  {	  if(opt!=    '[')    {    if(opt    ==    '[')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
634	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  '[')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  ||  opt  ==  '[')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '['  ||  opt  ==  '[')  {	  if(opt!=    '[')    {    if(opt    ==    '[')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
635	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(option);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(option);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.setOption(option);  }	  abuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
636	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  &&  opt  ==  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
637	[BUG]  [BUGGY]  if(opt!=  'n'  &&  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  &&  opt  ==  '-')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  &&  opt  ==  '-')  {	  if(opt!=    'n'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	114	1	replace
638	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	if(opt!=  'n'  ||  opt!=  't')  {	  if(type!=    required)    {    	compilable	  [FE]  ComparisonFailure  	52	1	replace
639	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  't')  {  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n'  ||  opt!=  't')  {	  if(type!=    required)    {    	compilable	  [FE]  ComparisonFailure  	52	1	replace
640	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(argument);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(argument);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withOption(argument);  }	  abuilder.withOption(argument);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
641	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withOption(argument);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  abuilder.withOption(argument);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.withOption(argument);  }	  abuilder.withOption(argument);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
642	[BUG]  [BUGGY]  if(opt  >  required)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  >  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  >  required)  {	  if(opt    >=    required)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	51	None	replace
643	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  ';'  expected	131	None	replace
644	[BUG]  [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(abuilder!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  ';'  expected	131	None	replace
645	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ';')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ';')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
646	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
647	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
649	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
650	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  If(opt!=  '['  &&  opt!=  ']')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  If(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    If(opt!=  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  ';'  expected	144	None	add
651	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.reset();  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	21	None	replace
652	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	21	None	replace
653	[BUG]  [BUGGY]  if(opt!=  ':')  {  If(opt!=  ';'  required)  {  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  ':')  {  If(opt!=  ';'  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  ':')  {  If(opt!=  ';'  required)  {	  if(opt!=    'n'    ||    required)    {    If(opt!=    'n'    ||    required)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
654	[BUG]  [BUGGY]  if(opt  ||  required)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt  ||  required)  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt  ||  required)  {	  if(opt    ||    opt)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	123	None	replace
655	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
656	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	add	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
657	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
658	[BUG]  [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));      [BUGGY]          abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	108	108	1	replace	                abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  ';'  expected	20	None	add
