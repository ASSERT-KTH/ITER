bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.get(options.size());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(options.size());  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(options.size());	  if    (options.size()    >    1)    {    Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  options.get(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.get(options.size()  -  1);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.get(options.size()  -  1);	  if    (options.size()    >    1)    {    Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  options.put(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(options.size()  -  1);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(options.size()  -  1);	  if    (options.size()    >    1)    {    Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  options.put(option,(Option)this.options.get(0));  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(option,(Option)this.options.get(0));  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(option,(Option)this.options.get(0));	  Option    option    =(Option)this.options.get(1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
5	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(2);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.options.get(2);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(2);	  Option    option    =(Option)this.options.get(1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
6	[BUG]  [BUGGY]  Option  option  =  abuilder.getOptions();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  abuilder.getOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  abuilder.getOptions();	  Option    option    =    obuilder.getOptions();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
7	[BUG]  [BUGGY]  Option  option  =  obuilder.getOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  obuilder.getOption(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  obuilder.getOption(option);	  Option    option    =    obuilder.getOptions();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
8	[BUG]  [BUGGY]  options  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options  =(Option)options.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options  =(Option)options.clone();	  Option    option    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  2);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(options.size()  -  2);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(options.size()  -  2);	  Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  final  Option  option  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =(Option)this.options.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)this.options.clone();	  final    Option    option    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  final  Option  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  options.get(options.size()  -  1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.get(options.size()  -  1);	  final    Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
12	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(DefaultOptionBuilder.class);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  options.getOption(DefaultOptionBuilder.class);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.getOption(DefaultOptionBuilder.class);	  final    Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(null);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(null);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(this.options);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(this.options);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  options.clear();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.clear();  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.clear();	  if    (options.size()    ==    0)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
17	[BUG]  [BUGGY]  Options  option  =  options.get(0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Options  option  =  options.get(0);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Options  option  =  options.get(0);	  if    (options.size()    ==    0)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
18	[BUG]  [BUGGY]  Option  options  =(Option)this.allOptions.get(0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =(Option)this.allOptions.get(0);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.allOptions.get(0);	  Option    options    =(Option)allOptions.get(0);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  <  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	add	if(options.size()  <  1)  {	  if    (options.size()    >    1)    {    If    (options.size()    >    1)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
20	[BUG]  [BUGGY]  if(options.size()  <  1)  {  [FE]  ComparisonFailure  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  <  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  <  1)  {	  if    (options.size()    >    1)    {    If    (options.size()    >    1)    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
21	[BUG]  [BUGGY]  Option  options  =  this.options.getOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  this.options.getOption(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  this.options.getOption(option);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  this.options.getOptions(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  this.options.getOptions(option);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  Option  options  =  _options.getOptions();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  _options.getOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  _options.getOptions();	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  options.put(option.getKey(),  options.get(0));  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(option.getKey(),  options.get(0));  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(option.getKey(),  options.get(0));	  if    (options.size()    ==    0)    {    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
25	[BUG]  [BUGGY]  Option  options  =(Option)this.super.clone();  [CE]  '('  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =(Option)this.super.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.super.clone();	  Option    options    =(Option)super.clone();    	non-compiled	[CE]  '('  expected	9	None	replace
26	[BUG]  [BUGGY]  options  =(Option)super.clone();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options  =(Option)super.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options  =(Option)super.clone();	  Option    options    =(Option)super.clone();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Option  option  =(Option)super.clone();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)super.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)super.clone();	  Option    options    =(Option)super.clone();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)options.get(2);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)options.get(2);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)options.get(2);	  if    (options.size()    ==    2)    {    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
29	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(optionId);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.options.get(optionId);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(optionId);	  Option    option    =(Option)options.get(optionId);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)options.get(optionId  -  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)options.get(optionId  -  1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)options.get(optionId  -  1);	  Option    option    =(Option)options.get(optionId);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
31	[BUG]  [BUGGY]  Option  option  =(Option)this.optionIds.get(optionId);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.optionIds.get(optionId);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.optionIds.get(optionId);	  Option    option    =(Option)options.get(optionId);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
32	[BUG]  [BUGGY]  If  (options.size()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  If  (options.size()  ==  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	If  (options.size()  ==  0)  {	  if    (options.size()    ==    2)    {    If    (options.size()    ==    2)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
33	[BUG]  [BUGGY]  Option  option  =  obuilder.getOption(DefaultOptionBuilder.class);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  obuilder.getOption(DefaultOptionBuilder.class);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  obuilder.getOption(DefaultOptionBuilder.class);	  Option    option    =    options.getOption(DefaultOptionBuilder.class);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class,  true);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.class,  true);	  Option    option    =    options.getOption(DefaultOptionBuilder.class);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
35	[BUG]  [BUGGY]  Option  option  =  abuilder.getOption(DefaultOptionBuilder.class);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  abuilder.getOption(DefaultOptionBuilder.class);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  abuilder.getOption(DefaultOptionBuilder.class);	  Option    option    =    options.getOption(DefaultOptionBuilder.class);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.get(option.cloneTree());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(option.cloneTree());  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(option.cloneTree());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(defaultOption);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(defaultOption);	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
38	[BUG]  [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(option);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(option);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  0)  {  Option  option  =  options.get(option);  }	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
39	[BUG]  [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(option);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(option);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  1)  {  Option  option  =  options.get(option);  }	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
40	[BUG]  [BUGGY]  options.put(option,  options.size()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(option,  options.size()  -  1);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(option,  options.size()  -  1);	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
41	[BUG]  [BUGGY]  options  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options  =(Option)this.options.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options  =(Option)this.options.clone();	  Option    option    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
42	[BUG]  [BUGGY]  option  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  option  =(Option)this.options.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	option  =(Option)this.options.clone();	  Option    option    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  true);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  true);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  0);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  0);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
45	[BUG]  [BUGGY]  Option  option  =  obuilder.getOption(DefaultOptionBuilder.DEFAULT_OPTION);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  obuilder.getOption(DefaultOptionBuilder.DEFAULT_OPTION);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  obuilder.getOption(DefaultOptionBuilder.DEFAULT_OPTION);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  Option  options  =  abuilder.getOptions();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  abuilder.getOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  abuilder.getOptions();	  Option    options    =    obuilder.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
47	[BUG]  [BUGGY]  Option  options  =  obuilder.create();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  obuilder.create();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  obuilder.create();	  Option    options    =    obuilder.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
48	[BUG]  [BUGGY]  final  Option  option  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =(Option)this.options.get(0);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)this.options.get(0);	  final    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  Option  options  =  getOptions();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  getOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  Option  options  =(Option)this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =(Option)this.options.getOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.options.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  options.put(option,  options.size());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(option,  options.size());  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(option,  options.size());	  if    (options.size()    >    1)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
52	[BUG]  [BUGGY]  options.put(option,  options.get(0));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(option,  options.get(0));  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(option,  options.get(0));	  if    (options.size()    >    1)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
53	[BUG]  [BUGGY]  final  Option  option  =  abuilder.create();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  abuilder.create();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  abuilder.create();	  final    Option    option    =    obuilder.create();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  If  (options.size()  ==  1)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  If  (options.size()  ==  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	If  (options.size()  ==  1)  {	  if    (options.size()    ==    0)    {    If    (options.size()    ==    0)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()!=  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	add	if(options.size()!=  0)  {	  if(options.size()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
56	[BUG]  [BUGGY]  if(options.size()!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()!=  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()!=  0)  {	  if(options.size()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
57	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(option  -  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.options.get(option  -  1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(option  -  1);	  Option    option    =(Option)this.options.get(option);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
58	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(option  +  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.options.get(option  +  1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(option  +  1);	  Option    option    =(Option)this.options.get(option);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
59	[BUG]  [BUGGY]  Option  option  =  gbuilder.create();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  gbuilder.create();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  gbuilder.create();	  Option    option    =    abuilder.create();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  options.remove(0);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.remove(0);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.remove(0);	  if    (options.size()    >    1)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
61	[BUG]  [BUGGY]  Option  option  =  abuilder.createOption();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  abuilder.createOption();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  abuilder.createOption();	  Option    option    =    obuilder.createOption();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if  (options.size()!=  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	add	if  (options.size()!=  1)  {	  if    (options.size()    ==    2)    {    if    (options.size()!=    2)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
63	[BUG]  [BUGGY]  if  (options.size()!=  1)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if  (options.size()!=  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if  (options.size()!=  1)  {	  if    (options.size()    ==    2)    {    if    (options.size()!=    2)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
64	[BUG]  [BUGGY]  options  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options  =(Option)this.options.get(0);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options  =(Option)this.options.get(0);	  Option    option    =(Option)this.options.get(0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  Option  option  =(Option)this.allOptions.get(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.allOptions.get(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.allOptions.get(option);	  Option    option    =(Option)allOptions.get(option);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.get(option);  if(option!=  null)  {  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(option);  if(option!=  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(option);  if(option!=  null)  {	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    if    (options.size()    ==    0)    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.get(option);  if(option  ==  null)  {  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(option);  if(option  ==  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(option);  if(option  ==  null)  {	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    if    (options.size()    ==    0)    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.get(option);  if(option  instanceof  Option)  {  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(option);  if(option  instanceof  Option)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(option);  if(option  instanceof  Option)  {	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    if    (options.size()    ==    0)    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	replace
69	[BUG]  [BUGGY]  Option  options  =(Option)this.options.get(1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =(Option)this.options.get(1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.options.get(1);	  Option    options    =(Option)options.get(1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  true);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  true);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  true);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  null);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  null);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  0);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  0);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.createOption(null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.createOption(null);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.createOption(null);	  Option    option    =    options.createOption();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.createOption(false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.createOption(false);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.createOption(false);	  Option    option    =    options.createOption();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
75	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.options.get(i);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(i);	  Option    option    =(Option)options.get(i);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
76	[BUG]  [BUGGY]  options.get(options.size());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.get(options.size());  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.get(options.size());	  if    (options.size()    ==    2)    {    Option    option    =    options.get(options.size()    -    2);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
77	[BUG]  [BUGGY]  final  Option  option  =(Option)this.options.get(option);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =(Option)this.options.get(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)this.options.get(option);	  final    Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
78	[BUG]  [BUGGY]  final  Option  option  =(Option)allOptions.get(option);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =(Option)allOptions.get(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)allOptions.get(option);	  final    Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
79	[BUG]  [BUGGY]  if(options.size()  >  0)  {  if(options.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  if(options.size()  >  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()    >    0)    {    if(options.size()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
80	[BUG]  [BUGGY]  if(options.size()  >  0)  {  If(options.size()  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  If(options.size()  >  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()    >    0)    {    If(options.size()  >  0)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
81	[BUG]  [BUGGY]  if(options.size()  >  0)  {  Option  option  =(Option)options.get(0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  Option  option  =(Option)options.get(0);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()    >    0)    {    Option  option  =(Option)options.get(0);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
82	[BUG]  [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(option);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  0)  {  Option  option  =  options.get(option);	  if    (options.size()    >    1)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	43	None	replace
83	[BUG]  [BUGGY]  if(options.size()  >  1)  {  Option  option  =  options.get(option);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  1)  {  Option  option  =  options.get(option);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  1)  {  Option  option  =  options.get(option);  }	  if    (options.size()    >    1)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOption);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(defaultOption);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(defaultOption);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
85	[BUG]  [BUGGY]  Option  option  =  obuilder.createOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  obuilder.createOption(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  obuilder.createOption(option);	  Option    option    =    obuilder.createOption();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
86	[BUG]  [BUGGY]  Option  options  =  obuilder.createOptions();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  obuilder.createOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  obuilder.createOptions();	  Option    options    =    obuilder.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  options.getOption(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.getOption(option);	  final    Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
88	[BUG]  [BUGGY]  Options  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Options  option  =  options.get(options.size()  -  1);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Options  option  =  options.get(options.size()  -  1);	  if    (options.size()    ==    0)    {    Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
89	[BUG]  [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(0);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(0);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  1)  {  Option  option  =  options.get(0);  }	  if    (options.size()    ==    0)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
90	[BUG]  [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(0);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(0);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  0)  {  Option  option  =  options.get(0);  }	  if    (options.size()    ==    0)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
91	[BUG]  [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(1);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(1);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  1)  {  Option  option  =  options.get(1);  }	  if    (options.size()    ==    0)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
92	[BUG]  [BUGGY]  Option  options  =(Option)this.options.get(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =(Option)this.options.get(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.options.get(option);	  Option    options    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options!=  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	add	if(options!=  null)  {	  if    (options.size()    ==    0)    {    if    (options.size()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
94	[BUG]  [BUGGY]  if(options!=  null)  {  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options!=  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options!=  null)  {	  if    (options.size()    ==    0)    {    if    (options.size()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
95	[BUG]  [BUGGY]  if(option  ==  null)  {  [CE]  variable  option  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null)  {	  if    (options.size()    ==    0)    {    if    (options.size()    ==    0)    {    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	28	None	replace
96	[BUG]  [BUGGY]  if(option  instanceof  Option)  {  [CE]  variable  option  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  instanceof  Option)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  instanceof  Option)  {	  if    (options.size()    ==    0)    {    if    (options.size()    ==    0)    {    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	28	None	replace
97	[BUG]  [BUGGY]  if(option  ==  null)  {  If  (options.size()  ==  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null)  {  If  (options.size()  ==  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null)  {  If  (options.size()  ==  1)  {	  if    (options.size()    ==    2)    {    If    (options.size()    ==    2)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
98	[BUG]  [BUGGY]  if(option  ==  null)  {  If  (options.size()  ==  2)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null)  {  If  (options.size()  ==  2)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null)  {  If  (options.size()  ==  2)  {	  if    (options.size()    ==    2)    {    If    (options.size()    ==    2)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
99	[BUG]  [BUGGY]  Option  option  =  options.createOption(options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.createOption(options);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.createOption(options);	  Option    option    =    options.createOption();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
100	[BUG]  [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(options.size()  -  1);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()    >    0)    {    Option  option  =  options.get(options.size()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
101	[BUG]  [BUGGY]  if(option!=  null)  {  [CE]  variable  option  might  not  have  been  initialized  [FE]        AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option!=  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option!=  null)  {	  if    (options.size()    >    1)    {    if    (options.size()    >    1)    {    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	1	None	replace
102	[BUG]  [BUGGY]  final  Option  option  =(Option)options.get(1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =(Option)options.get(1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)options.get(1);	  final    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  if(options.size()  ==  1)  {  Option  option  =(Option)options.get(0);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  1)  {  Option  option  =(Option)options.get(0);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  1)  {  Option  option  =(Option)options.get(0);  }	  if    (options.size()    ==    2)    {    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
104	[BUG]  [BUGGY]  if(options.size()  ==  1)  {  Option  option  =(Option)options.get(0);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  1)  {  Option  option  =(Option)options.get(0);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  1)  {  Option  option  =(Option)options.get(0);	  if    (options.size()    ==    2)    {    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	39	None	replace
105	[BUG]  [BUGGY]  if(option  ==  null  ||  options.size()  >  1)  {  If  (options.size()  >  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null  ||  options.size()  >  1)  {  If  (options.size()  >  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null  ||  options.size()  >  1)  {  If  (options.size()  >  1)  {	  if    (options.size()    >    1)    {    If    (options.size()    >    1)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
106	[BUG]  [BUGGY]  if(option  ==  null)  {  If  (options.size()  >  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null)  {  If  (options.size()  >  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null)  {  If  (options.size()  >  1)  {	  if    (options.size()    >    1)    {    If    (options.size()    >    1)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
107	[BUG]  [BUGGY]  if(option!=  null)  {  If  (options.size()  >  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option!=  null)  {  If  (options.size()  >  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option!=  null)  {  If  (options.size()  >  1)  {	  if    (options.size()    >    1)    {    If    (options.size()    >    1)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
108	[BUG]  [BUGGY]  if(option  ==  null)  {  If  (options.size()  ==  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null)  {  If  (options.size()  ==  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null)  {  If  (options.size()  ==  0)  {	  if    (options.size()    ==    0)    {    If    (options.size()    ==    0)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
109	[BUG]  [BUGGY]  if(option!=  null)  {  If  (options.size()  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option!=  null)  {  If  (options.size()  ==  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option!=  null)  {  If  (options.size()  ==  0)  {	  if    (options.size()    ==    0)    {    If    (options.size()    ==    0)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
110	[BUG]  [BUGGY]  if(option  ==  null  ||  options.size()  >  0)  {  [CE]  variable  option  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option  ==  null  ||  options.size()  >  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option  ==  null  ||  options.size()  >  0)  {	  if(options.size()    >    0)    {    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	11	None	replace
111	[BUG]  [BUGGY]  if(option.size()  >  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(option.size()  >  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(option.size()  >  0)  {	  if(options.size()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
112	[BUG]  [BUGGY]  final  Option  option  =  options.get(1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  options.get(1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.get(1);	  final    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
113	[BUG]  [BUGGY]  option  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  option  =(Option)this.options.get(0);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	option  =(Option)this.options.get(0);	  Option    option    =(Option)this.options.get(0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
114	[BUG]  [BUGGY]  Options  option  =(Option)options.get(0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Options  option  =(Option)options.get(0);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Options  option  =(Option)options.get(0);	  if    (options.size()    ==    0)    {    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class,  options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class,  options);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.class,  options);	  Option    option    =    options.getOption(DefaultOptionBuilder.class);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION)+  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION)+  1;  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION)+  1;	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
117	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  options.size());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  options.size());  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  options.size());	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
118	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(option);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
119	[BUG]  [BUGGY]  final  Option  option  =(Option)options.get(option.cloneTree());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =(Option)options.get(option.cloneTree());  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)options.get(option.cloneTree());	  final    Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  abuilder);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  abuilder);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  abuilder);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
121	[BUG]  [BUGGY]  Option  option  =  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  this.options.getOptions();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  this.options.getOptions();	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  if(options.size()  ==  0)  {  Option  option  =  options.get(option);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  0)  {  Option  option  =  options.get(option);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  0)  {  Option  option  =  options.get(option);  }	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
123	[BUG]  [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  ==  1)  {  Option  option  =  options.get(option);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  ==  1)  {  Option  option  =  options.get(option);	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	50	None	replace
124	[BUG]  [BUGGY]  if(options.size()  >  1)  {  Option  option  =  options.get(0);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  1)  {  Option  option  =  options.get(0);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  1)  {  Option  option  =  options.get(0);  }	  if    (options.size()    >    1)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
125	[BUG]  [BUGGY]  if(options.size()  >  1)  {  Option  option  =  options.get(1);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  1)  {  Option  option  =  options.get(1);  }  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  1)  {  Option  option  =  options.get(1);  }	  if    (options.size()    >    1)    {    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
126	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  this.options.getOption(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  this.options.getOption(option);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	add	if(options!=  null  &&  options.size()  >  0)  {	  if(options.size()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
128	[BUG]  [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options!=  null  &&  options.size()  >  0)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options!=  null  &&  options.size()  >  0)  {	  if(options.size()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
129	[BUG]  [BUGGY]  option  =(Option)options.get(0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  option  =(Option)options.get(0);  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	option  =(Option)options.get(0);	  if    (options.size()    ==    2)    {    Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
130	[BUG]  [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(options.size());  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options.size()  >  0)  {  Option  option  =  options.get(options.size());  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()    >    0)    {    Option  option  =  options.get(options.size());	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
131	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  options.get(option);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.get(option);	  final    Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
132	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  options);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION,  options);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.getOption( "option ");  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption( "option ");  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption( "option ");	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
134	[BUG]  [BUGGY]  option  =  options.get(option);  if(option!=  null)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  option  =  options.get(option);  if(option!=  null)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	option  =  options.get(option);  if(option!=  null)  {	  if    (options.size()    ==    0)    {    Option    option    =    options.get(option);    if    (options.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
135	[BUG]  [BUGGY]  if(options!=  null)  {  If  (options.size()  >  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  if(options!=  null)  {  If  (options.size()  >  1)  {  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options!=  null)  {  If  (options.size()  >  1)  {	  if    (options.size()    >    1)    {    If    (options.size()    >    1)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
136	[BUG]  [BUGGY]  options.put(option,  options.get(option));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  options.put(option,  options.get(option));  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	options.put(option,  options.get(option));	  if    (options.size()    >    1)    {    Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
137	[BUG]  [BUGGY]  Option  option  =(Option)modules.clone();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)modules.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)modules.clone();	  Option    option    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.clone();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.clone();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.clone();	  Option    option    =(Option)options.clone();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
139	[BUG]  [BUGGY]  Option  option  =  options.iterator().next();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.iterator().next();  [BUGGY]      option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.iterator().next();	  if    (options.size()    ==    0)    {    If    (options.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
140	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.get(options.size()  +  1);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(options.size()  +  1);	  Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
141	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  options);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR,  options);	  Option    option    =    options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
142	[BUG]  [BUGGY]  Option  options  =  obuilder.createOption();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  options  =  obuilder.createOption();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  obuilder.createOption();	  Option    options    =    obuilder.getOptions();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
143	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  Option  option  =(Option)this.options.get();  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get();	  Option    option    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
144	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTIONAL_FACTOR);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;      [BUGGY]  final  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTIONAL_FACTOR);  [BUGGY]      if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTIONAL_FACTOR);	  final    Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
