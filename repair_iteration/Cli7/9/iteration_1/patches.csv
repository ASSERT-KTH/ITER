bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (options.size()  >  1)  {  if  (options.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  >  1)  {  if  (options.size()  >  1)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    >    1)    {    if  (options.size()  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
2	[BUG]  [BUGGY]  if  (options.size()  >  1)  {  If  (options.size()  >  1)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  >  1)  {  If  (options.size()  >  1)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    >    1)    {    If  (options.size()  >  1)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
3	[BUG]  [BUGGY]  if  (options.size()  >  1)  {  Option  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  >  1)  {  Option  option  =  options.get(options.size()  -  1);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    >    1)    {    Option  option  =  options.get(options.size()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
4	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  if  (options.size()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  if  (options.size()  ==  2)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    if  (options.size()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  If  (options.size()  ==  2)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  If  (options.size()  ==  2)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    If  (options.size()  ==  2)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
6	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  if  (options.size()!=  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  if  (options.size()!=  2)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    if  (options.size()!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
7	[BUG]  [BUGGY]  Option  options  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =(Option)options.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)options.clone();	      Option    options    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Option  options  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =(Option)this.options.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.options.clone();	      Option    options    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  Option  options  =(Option)super.clone();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =(Option)super.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)super.clone();	      Option    options    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if(options.size()  >  0)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	add	if(options.size()  >  0)  {	  if    (options.size()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	1	replace
11	[BUG]  [BUGGY]  if(options.size()  >  0)  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if(options.size()  >  0)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if(options.size()  >  0)  {	  if    (options.size()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	1	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =  this.options.getOptions();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  this.options.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  options.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  final  Option  option  =  options.get(0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =  options.get(0);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.get(0);	      Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.get(options.size()  -  1);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(options.size()  -  1);	      Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  Option  option  =  abuilder.create();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  abuilder.create();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  abuilder.create();	      Option    option    =    obuilder.create();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  final  Option  option  =  obuilder.create();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =  obuilder.create();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  obuilder.create();	      Option    option    =    obuilder.create();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)this.options.get(0);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(0);	      Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  final  Option  option  =(Option)options.get(0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =(Option)options.get(0);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)options.get(0);	      Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  Option  option  =(Option)options.get(1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)options.get(1);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)options.get(1);	      Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)this.options.get(option);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(option);	      Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  final  Option  option  =(Option)options.get(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =(Option)options.get(option);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)options.get(option);	      Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)options.get(i);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)options.get(i);	      Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  Option  options  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =(Option)this.options.get(0);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)this.options.get(0);	      Option    options    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  Option  options  =(Option)allOptions.get(0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =(Option)allOptions.get(0);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)allOptions.get(0);	      Option    options    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  Option  options  =(Option)options.get(1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =(Option)options.get(1);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =(Option)options.get(1);	      Option    options    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  if  (options.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  if  (options.size()  ==  0)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    if  (options.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
29	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  If  (options.size()  ==  0)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  If  (options.size()  ==  0)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    If  (options.size()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
30	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(option);  if  (options.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(option);  if  (options.size()  ==  0)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    Option  option  =  options.get(option);  if  (options.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
31	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)options.clone();	      Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)this.options.clone();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)this.options.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.clone();	      Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  final  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =(Option)option.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)option.clone();	      Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  final  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =(Option)options.clone();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =(Option)options.clone();	      Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  final  Option  option  =  options.create();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  final  Option  option  =  options.create();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	final  Option  option  =  options.create();	      Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.createOption();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.createOption();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.createOption();	      Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.get(1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.get(1);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(1);	      Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  Option  option  =  options.get(options.size()  -  2);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  Option  option  =  options.get(options.size()  -  2);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    Option  option  =  options.get(options.size()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
39	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  Option  option  =(Option)options.get(0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  Option  option  =(Option)options.get(0);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    Option  option  =(Option)options.get(0);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
40	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  Option  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  Option  option  =  options.get(options.size()  -  1);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    Option  option  =  options.get(options.size()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
41	[BUG]  [BUGGY]  Option  option  =  obuilder.createOption();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  obuilder.createOption();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  obuilder.createOption();	      Option    option    =    obuilder.create();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  if  (options.size()  >  1)  {  Option  option  =(Option)options.get(0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  >  1)  {  Option  option  =(Option)options.get(0);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    >    1)    {    Option  option  =(Option)options.get(0);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
43	[BUG]  [BUGGY]  if  (options.size()  >  1)  {  Option  option  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  >  1)  {  Option  option  =  options.get(option);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    >    1)    {    Option  option  =  options.get(option);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
44	[BUG]  [BUGGY]  Option  options  =  obuilder.getOptions();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  options  =  obuilder.getOptions();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  options  =  obuilder.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
45	[BUG]  [BUGGY]  Option  option  =(Option)options.get(optionId);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)options.get(optionId);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)options.get(optionId);	      Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.class);	      Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_OPTION);	      Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
48	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =(Option)options.get(0);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =(Option)options.get(0);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    Option  option  =(Option)options.get(0);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
49	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(options.size()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(options.size()  -  1);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    Option  option  =  options.get(options.size()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
50	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(option);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    Option  option  =  options.get(option);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
51	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)this.options.get(1);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)this.options.get(1);	      Option    option    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  Option  option  =  obuilder.getOptions();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  obuilder.getOptions();  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  obuilder.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.DEFAULT_LOAD_FACTOR);	      Option    option    =    options.create();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  if  (options.size()  >  1)  {  Option  option  =  options.get(0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  >  1)  {  Option  option  =  options.get(0);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    >    1)    {    Option  option  =  options.get(0);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
55	[BUG]  [BUGGY]  Option  option  =  options.get(option);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =  options.get(option);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =  options.get(option);	      Option    option    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(0);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  0)  {  Option  option  =  options.get(0);  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    0)    {    Option  option  =  options.get(0);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
57	[BUG]  [BUGGY]  Option  option  =(Option)allOptions.get(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  Option  option  =(Option)allOptions.get(option);  [BUGGY]    if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	Option  option  =(Option)allOptions.get(option);	      Option    option    =(Option)options.get(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  if  (options.size()  ==  2)  {  if  (options.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Option  create()  {  final  Option  option;    [BUGGY]  if  (options.size()  ==  2)  {  if  (options.size()  ==  1)  {  [BUGGY]    option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	76	76	1	replace	if    (options.size()    ==    2)    {    if  (options.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
