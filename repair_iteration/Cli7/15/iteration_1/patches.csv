bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  abuilder;  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  abuilder;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  abuilder;	  return    obuilder;    	non-compiled	[CE]  incompatible  types	6	None	replace
2	[BUG]  [BUGGY]  return  obuilder.withOption(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  obuilder.withOption(option);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  obuilder.withOption(option);	  return    obuilder;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	18	None	replace
4	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
5	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.add  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.add  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.add	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
6	[BUG]  [BUGGY]  return  options.clone();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options.clone();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.clone();	  return    option.clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
7	[BUG]  [BUGGY]  return  gbuilder.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  gbuilder.clone();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  gbuilder.clone();	  return    option.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	7	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.clone();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.clone();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.clone();	  return    option.clone();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	7	None	replace
9	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Options)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
10	[BUG]  [BUGGY]  gbuilder.setOption(option,  options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.setOption(option,  options);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(option,  options);	      gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
11	[BUG]  [BUGGY]  gbuilder.setOption(this.option);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.setOption(this.option);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(this.option);	      gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol  option	13	None	replace
12	[BUG]  [BUGGY]  gbuilder.setOption(obuilder);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.setOption(obuilder);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(obuilder);	      gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(i.next());  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i.next());	      Option    option    =    options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	12	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.get(i  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(i  +  1);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i  +  1);	      Option    option    =    options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	12	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.get(0);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(0);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);	      Option    option    =    options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	12	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	20	None	replace
17	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	19	None	replace
20	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
21	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [CE]  not  a  statement  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	17	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	17	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
25	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =(Option)options.get(i);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    Option  option  =(Option)options.get(i);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	add
26	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =  options.get(i);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    Option  option  =  options.get(i);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	add
27	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  gbuilder.reset();  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  gbuilder.reset();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    gbuilder.reset();	  	non-compiled	[CE]  unreachable  statement	14	None	add
28	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    gbuilder.setOption(option);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
29	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =  options.get(option);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    Option  option  =  options.get(option);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	add
30	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  missing  return  statement	1	None	replace
31	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  missing  return  statement  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    gbuilder.reset();    for(Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(defaultOption);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(defaultOption);	      Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.get(this.option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(this.option);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(this.option);	      Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
35	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [CE]  variable  option  might  already  have  been  assigned  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  variable  option  might  already  have  been  assigned	5	None	replace
36	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.getOption(i);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(i);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.getOption(defaultOption);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(defaultOption);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.getOption(this.options);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this.options);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option!=  null?  null  :  option;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	add	return  option!=  null?  null  :  option;	  return    option    ==    null?    null    :    option;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
41	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option!=  null?  null  :  option;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  null  :  option;	  return    option    ==    null?    null    :    option;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options  ==  null?  null  :  option;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	add	return  options  ==  null?  null  :  option;	  return    option    ==    null?    null    :    option;    	compilable	  [FE]  ComparisonFailure  	15	1	replace
43	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options  ==  null?  null  :  option;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options  ==  null?  null  :  option;	  return    option    ==    null?    null    :    option;    	compilable	  [FE]  ComparisonFailure  	15	1	replace
44	[BUG]  [BUGGY]  return  options.values();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options.values();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.values();	  return    options;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
45	[BUG]  [BUGGY]  return  options.keySet();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options.keySet();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.keySet();	  return    options;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
46	[BUG]  [BUGGY]  return  options.toArray(options);  [CE]  no  suitable  method  found  for  toArray(Set)  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options.toArray(options);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(options);	  return    options;    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Set)	8	None	replace
47	[BUG]  [BUGGY]  return  options!=  null?(Option)option.clone()  :  null;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options!=  null?(Option)option.clone()  :  null;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?(Option)option.clone()  :  null;	  return    option!=    null?(Option)option.clone()    :    null;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	21	None	replace
49	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
50	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [CE]  not  a  statement  [FE]                    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  not  a  statement	21	None	replace
51	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  incompatible  types	4	None	replace
52	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =(Option)this.options.get(i);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(i);	      Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	11	None	replace
54	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =(Option)options.get(i.next());  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.next());	      Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	11	None	replace
55	[BUG]  [BUGGY]  Option  option  =(Option)allOptions.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =(Option)allOptions.get(i);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)allOptions.get(i);	      Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	11	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(options.size()  -  1);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);	      Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
57	[BUG]  [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
60	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  option  =  options.clone();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  option  =  options.clone();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.clone();	  return    option.clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
64	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  option  ==  null?  null  :  option;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  option  ==  null?  null  :  option;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    option  ==  null?  null  :  option;	  	non-compiled	[CE]  not  a  statement	14	None	add
65	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option;  Option  option  =  options.getOption(option);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option    ==    null?    null    :    option;    Option  option  =  options.getOption(option);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	add
66	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option);  }	      gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
67	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }	      gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }	      gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	17	None	replace
70	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.intValue());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =(Option)options.get(i.intValue());  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.intValue());	      Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	11	None	replace
72	[BUG]  [BUGGY]  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	19	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	19	None	replace
76	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
79	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  ')'  expected	21	None	replace
80	[BUG]  [BUGGY]  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  incompatible  types	17	None	replace
81	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  option  =  gbuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  option  =  gbuilder.setOption(option);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  gbuilder.setOption(option);	      gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
83	[BUG]  [BUGGY]  gbuilder.setOption(option;  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  gbuilder.setOption(option;  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(option;	      gbuilder.setOption(option);    	non-compiled	[CE]  ')'  expected	13	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION);  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(Option.OPTIONAL_OPTION);	      Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
85	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option.toString();  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option  ==  null?  null  :  option.toString();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option  ==  null?  null  :  option.toString();	  return    option    ==    null?    null    :    option;    	non-compiled	[CE]  incompatible  types	15	None	replace
86	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
87	[BUG]  [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	20	None	replace
88	[BUG]  [BUGGY]  return  option!=  null?(Option)option,  options.clone()  :  null;  [CE]  :  expected  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option!=  null?(Option)option,  options.clone()  :  null;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?(Option)option,  options.clone()  :  null;	  return    option!=    null?(Option)option.clone()    :    null;    	non-compiled	[CE]  :  expected	16	None	replace
89	[BUG]  [BUGGY]  return  option!=  null?  options.clone()  :  option;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option!=  null?  options.clone()  :  option;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  options.clone()  :  option;	  return    option.clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
90	[BUG]  [BUGGY]  return  option!=  null?  options.clone()  :  null;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  option!=  null?  options.clone()  :  null;  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  options.clone()  :  null;	  return    option.clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
91	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  return  obuilder.cloneTree();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  obuilder.cloneTree();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  obuilder.cloneTree();	  return    obuilder;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
93	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  return  options.iterator().next();  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options.iterator().next();  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.iterator().next();	  return    options;    	non-compiled	[CE]  incompatible  types	8	None	replace
95	[BUG]  [BUGGY]  return  options.toArray(optionalOptions);  [CE]  cannot  find  symbol  optionalOptions  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  return  options.toArray(optionalOptions);  [BUGGY]    }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(optionalOptions);	  return    options;    	non-compiled	[CE]  cannot  find  symbol  optionalOptions	8	None	replace
96	[BUG]  [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	21	None	replace
97	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	      if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
98	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)option.next());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();    [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)option.next());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.withOption((  Option)option.next());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	      if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
