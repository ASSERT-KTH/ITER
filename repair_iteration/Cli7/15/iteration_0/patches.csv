bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
2	[BUG]  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
3	[BUG]  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
4	[BUG]  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
5	[BUG]  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
6	[BUG]  [BUGGY]  return  obuilder;  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]  return  obuilder;  [BUGGY]  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  obuilder;	return  option;  	non-compiled	[CE]  incompatible  types	29	None	replace
7	[BUG]  [BUGGY]  return  option.clone();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]  return  option.clone();  [BUGGY]  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option.clone();	return  option;  	non-compiled	[CE]  cannot  find  symbol	29	None	replace
8	[BUG]  [BUGGY]  return  options;  [CE]  incompatible  types  [FE]        ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]  return  options;  [BUGGY]  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options;	return  option;  	non-compiled	[CE]  incompatible  types	29	None	replace
9	[BUG]  [BUGGY]    Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    Option  option  =  options.get(option);  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    Option  option  =  options.get(option);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	add
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    Option  option  =  options.getOption(option);  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    Option  option  =  options.getOption(option);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	add
11	[BUG]  [BUGGY]    Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    Option  option  =(Option)options.get(i);  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    Option  option  =(Option)options.get(i);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	add
12	[BUG]  [BUGGY]    Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    Option  option  =  options.get(i);  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    Option  option  =  options.get(i);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	30	None	add
13	[BUG]  [BUGGY]    gbuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    gbuilder.setOption(option);  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    gbuilder.setOption(option);		non-compiled	[CE]  cannot  find  symbol	30	None	add
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]  return  option  ==  null?  null  :  option;  [BUGGY]  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	add	return  option  ==  null?  null  :  option;	return  option;  	compilable	  [FE]  ComparisonFailure  	29	1	replace
15	[BUG]  [BUGGY]  return  option  ==  null?  null  :  option;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]  return  option  ==  null?  null  :  option;  [BUGGY]  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option  ==  null?  null  :  option;	return  option;  	compilable	  [FE]  ComparisonFailure  	29	1	replace
16	[BUG]  [BUGGY]  return  option!=  null?(Option)option.clone()  :  null;  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]  return  option!=  null?(Option)option.clone()  :  null;  [BUGGY]  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?(Option)option.clone()  :  null;	return  option;  	non-compiled	[CE]  cannot  find  symbol	29	None	replace
17	[BUG]  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
18	[BUG]  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
19	[BUG]  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
20	[BUG]  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
21	[BUG]  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  [BUGGY]    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	    if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }		non-compiled	[CE]  illegal  start  of  expression	30	None	add
