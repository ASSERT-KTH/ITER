bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  option!=  null?  null  :  option.toString();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option.toString();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  null  :  option.toString();	  return    option    ==    null?    null    :    option.toString();    	non-compiled	[CE]  incompatible  types	85	None	replace
2	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option.toString();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option.toString();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options  ==  null?  null  :  option.toString();	  return    option    ==    null?    null    :    option.toString();    	non-compiled	[CE]  incompatible  types	85	None	replace
3	[BUG]  [BUGGY]  return  options.toArray(options,  gbuilder);  [CE]  no  suitable  method  found  for  toArray(Set,GroupBuilder)  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(options,  gbuilder);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(options,  gbuilder);	  return    options.toArray(options);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Set,GroupBuilder)	46	None	replace
4	[BUG]  [BUGGY]  return  options.toArray(options,  abuilder);  [CE]  no  suitable  method  found  for  toArray(Set,ArgumentBuilder)  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(options,  abuilder);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(options,  abuilder);	  return    options.toArray(options);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Set,ArgumentBuilder)	46	None	replace
5	[BUG]  [BUGGY]  return  options.toArray(options,  obuilder);  [CE]  no  suitable  method  found  for  toArray(Set,DefaultOptionBuilder)  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(options,  obuilder);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(options,  obuilder);	  return    options.toArray(options);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Set,DefaultOptionBuilder)	46	None	replace
6	[BUG]  [BUGGY]  return  options.toArray(options,  option);  [CE]  no  suitable  method  found  for  toArray(Set,Option)  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(options,  option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(options,  option);	  return    options.toArray(options);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Set,Option)	46	None	replace
7	[BUG]  [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }	  return    option    ==    null?    null    :    option;    gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
8	[BUG]  [BUGGY]  if(option  ==  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }	  return    option    ==    null?    null    :    option;    gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
9	[BUG]  [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  else  {  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  else  {  gbuilder.setOption(option);  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.setOption(option);  }  else  {  gbuilder.setOption(option);  }	  return    option    ==    null?    null    :    option;    gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
10	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  this.options.getOption(options);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  this.options.getOption(options);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	39	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  this.options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(this.options,  this.options);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this.options,  this.options);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	39	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  null);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(this.options,  null);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this.options,  null);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	39	None	replace
13	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  variable  option  might  already  have  been  assigned  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  might  already  have  been  assigned	52	None	replace
14	[BUG]  [BUGGY]  if(option!=  null)  {  gBuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gBuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gBuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
15	[BUG]  [BUGGY]  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	72	None	replace
17	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	73	None	replace
19	[BUG]  [BUGGY]  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
20	[BUG]  [BUGGY]  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    gbuilder.set();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
21	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
23	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  option  =  options.getOption(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.getOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.getOption(option);	  return    option    ==    null?    null    :    option;    Option    option    =    options.getOption(option);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
25	[BUG]  [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  option  ==  null?  null  :  option;  }	  return    option    ==    null?    null    :    option;    Option    option    =    options.getOption(option);    	non-compiled	[CE]  missing  return  statement	65	None	replace
26	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option.next());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.withOption((  Option)option.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.withOption((  Option)option.next());	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
27	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  options  ==  null?  null  :  option;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  options  ==  null?  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    options  ==  null?  null  :  option;	  	non-compiled	[CE]  not  a  statement	42	None	add
28	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =(Option)options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =(Option)options.get(i);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
29	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  gbuilder.reset();  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  gbuilder.reset();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    gbuilder.reset();	  	non-compiled	[CE]  unreachable  statement	42	None	add
30	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.get(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options.get(option);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
31	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options.get(i);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
32	[BUG]  [BUGGY]  return  options!=  null?  options.clone()  :  option;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  options.clone()  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  options.clone()  :  option;	  return    option!=    null?    options.clone()    :    option;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
33	[BUG]  [BUGGY]  return  options!=  null?  option.clone()  :  option;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  option.clone()  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  option.clone()  :  option;	  return    option!=    null?    options.clone()    :    option;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	61	None	replace
35	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	61	None	replace
36	[BUG]  [BUGGY]  return  option.withOption(obuilder);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option.withOption(obuilder);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option.withOption(obuilder);	  return    obuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
37	[BUG]  [BUGGY]  return  options.withOption(obuilder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.withOption(obuilder);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.withOption(obuilder);	  return    obuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
38	[BUG]  [BUGGY]  return  abuilder.withOption(option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  abuilder.withOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  abuilder.withOption(option);	  return    obuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
39	[BUG]  [BUGGY]  return  options.withOption(option);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.withOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.withOption(option);	  return    obuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
40	[BUG]  [BUGGY]  return  abuilder.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  abuilder.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  abuilder.clone();	  return    abuilder;    	non-compiled	[CE]  clone()  has  protected  access  in  Object	1	None	replace
41	[BUG]  [BUGGY]  return  abuilder.defaultBuilder();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  abuilder.defaultBuilder();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  abuilder.defaultBuilder();	  return    abuilder;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
42	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Options)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Options)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
44	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
45	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
46	[BUG]  [BUGGY]  return  options.values()?  null  :  options.values();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.values()?  null  :  options.values();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.values()?  null  :  options.values();	  return    options.values();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
47	[BUG]  [BUGGY]  return  options.values()  &&  options.size()  >  0;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.values()  &&  options.size()  >  0;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.values()  &&  options.size()  >  0;	  return    options.values();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
48	[BUG]  [BUGGY]  option  =(Option)options.get(i);  [CE]  cannot  find  symbol  i  [FE]        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =(Option)options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =(Option)options.get(i);	  return    option    ==    null?    null    :    option;    Option    option    =(Option)options.get(i);    	non-compiled	[CE]  cannot  find  symbol  i	25	None	replace
49	[BUG]  [BUGGY]  options.put(i,  option);  [CE]  cannot  find  symbol  i  [FE]          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.put(i,  option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.put(i,  option);	  return    option    ==    null?    null    :    option;    Option    option    =(Option)options.get(i);    	non-compiled	[CE]  cannot  find  symbol  i	25	None	replace
50	[BUG]  [BUGGY]  obuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  obuilder.setOption(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	obuilder.setOption(option);	  gbuilder.setOption(obuilder);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
51	[BUG]  [BUGGY]  if(obuilder!=  null)optBuilder.setOption(obuilder);  [CE]  cannot  find  symbol  optBuilder  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(obuilder!=  null)optBuilder.setOption(obuilder);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(obuilder!=  null)optBuilder.setOption(obuilder);	  gbuilder.setOption(obuilder);    	non-compiled	[CE]  cannot  find  symbol  optBuilder	12	None	replace
52	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
53	[BUG]  [BUGGY]  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOpti    	non-compiled	[CE]  not  a  statement	50	None	replace
56	[BUG]  [BUGGY]  if(option  ==  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOpti    	non-compiled	[CE]  not  a  statement	50	None	replace
57	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOpti    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
58	[BUG]  [BUGGY]  gbuilder.setOption(option,  null);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.setOption(option,  null);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(option,  null);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
59	[BUG]  [BUGGY]  gbuilder.setOption(option,  option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.setOption(option,  option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(option,  option);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
60	[BUG]  [BUGGY]  gbuilder.setOption(option,  Options.EMPTY);  [CE]  cannot  find  symbol  Options  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.setOption(option,  Options.EMPTY);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(option,  Options.EMPTY);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol  Options	10	None	replace
61	[BUG]  [BUGGY]  option  =  options.get(i);  [CE]  cannot  find  symbol  i  [FE]          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.get(i);	  return    option    ==    null?    null    :    option;    Option    option    =    options.get(i);    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
62	[BUG]  [BUGGY]  if(option!=  null)return  null;  Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)return  null;  Option  option  =  options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)return  null;  Option  option  =  options.get(i);	  return    option    ==    null?    null    :    option;    Option    option    =    options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	26	None	replace
63	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption();    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
64	[BUG]  [BUGGY]  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	OptionBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption();    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
65	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
66	[BUG]  [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  final  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
67	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  ')'  expected	96	None	replace
68	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
71	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
72	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  ')'  expected	48	None	replace
73	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
74	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.get(i);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	74	None	replace
76	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  not  a  statement	74	None	replace
77	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(this.option!=  null)  {  gbuilder.setOption(this.option);  }	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	11	None	replace
78	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  option  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	11	None	replace
79	[BUG]  [BUGGY]  gbuilder.setOption(this);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.setOption(this);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(this);	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
80	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.get(i);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	23	None	replace
82	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	23	None	replace
83	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.get(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.get(option);	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	23	None	replace
84	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
85	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
88	[BUG]  [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  final  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	87	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOptions);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(defaultOptions);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(defaultOptions);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	63	None	replace
91	[BUG]  [BUGGY]  option  =  options.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.get(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.get(option);	  return    option    ==    null?    null    :    option;    Option    option    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
92	[BUG]  [BUGGY]  if(option!=  null)return  null;  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)return  null;  Option  option  =  options.get(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)return  null;  Option  option  =  options.get(option);	  return    option    ==    null?    null    :    option;    Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	29	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	78	None	replace
94	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	78	None	replace
95	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	18	None	replace
96	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	18	None	replace
98	[BUG]  [BUGGY]  return  options!=  null?(Option)option,  options.clone()  :  null;  [CE]  :  expected  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?(Option)option,  options.clone()  :  null;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?(Option)option,  options.clone()  :  null;	  return    option!=    null?(Option)option,    options.clone()    :    null;    	non-compiled	[CE]  :  expected	88	None	replace
99	[BUG]  [BUGGY]  return  option  ==  null?(Option)option,  options.clone()  :  null;  [CE]  :  expected  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option  ==  null?(Option)option,  options.clone()  :  null;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option  ==  null?(Option)option,  options.clone()  :  null;	  return    option!=    null?(Option)option,    options.clone()    :    null;    	non-compiled	[CE]  :  expected	88	None	replace
100	[BUG]  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  For(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
101	[BUG]  [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  For(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(i.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(i.next());	  Option    option    =    options.getOption(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	37	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(null);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(null);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(null);	  Option    option    =    options.getOption(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	37	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  obuilder);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(i,  obuilder);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(i,  obuilder);	  Option    option    =    options.getOption(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	37	None	replace
105	[BUG]  [BUGGY]  return  options.clone()?  null  :  options.clone();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.clone()?  null  :  options.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.clone()?  null  :  options.clone();	  return    options.clone();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
106	[BUG]  [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
107	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
108	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.add  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.add  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.add	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.add    	non-compiled	[CE]  not  a  statement	5	None	replace
109	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.add    	non-compiled	[CE]  <identifier>  expected	5	None	replace
110	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.add    	non-compiled	[CE]  <identifier>  expected	5	None	replace
111	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  gbuilder.reset();    for(Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
112	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  gbuilder.reset();    for(Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
113	[BUG]  [BUGGY]  gbuilder.keySet();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.keySet();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.keySet();	  return    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
114	[BUG]  [BUGGY]  options.keySet();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.keySet();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.keySet();	  return    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.get(options.size());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size());	  Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	56	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  +  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  +  1);	  Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	56	None	replace
117	[BUG]  [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
118	[BUG]  [BUGGY]  final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
119	[BUG]  [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.get(i.next(),  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i.next(),  options);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i.next(),  options);	  Option    option    =    options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	13	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.get(i.next()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i.next()  -  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i.next()  -  1);	  Option    option    =    options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	13	None	replace
122	[BUG]  [BUGGY]  Option  option  =  options.get(i.next()  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i.next()  +  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i.next()  +  1);	  Option    option    =    options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	13	None	replace
123	[BUG]  [BUGGY]  option  =  options.get(0);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.get(0);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.get(0);	  Option    option    =    options.get(0);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
124	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option;  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option;  }	  gbuilder.setOption(option;    	non-compiled	[CE]  ')'  expected	83	None	replace
125	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option;  }  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  gbuilder.setOption(option;  }	  gbuilder.setOption(option;    	non-compiled	[CE]  ')'  expected	83	None	replace
126	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	22	None	replace
128	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.withOption((  Option)options.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.withOption((  Option)options.next());	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
129	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  expected;  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  expected;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  expected;  }	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
130	[BUG]  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
131	[BUG]  [BUGGY]  if(option!=  null)  {  if(option.clone  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option.clone  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option.clone  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  not  a  statement	79	None	replace
132	[BUG]  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone!=  ')'  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone!=  ')'  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone!=  ')'	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
133	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  option!=  null?  null  :  option;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  option!=  null?  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    option!=  null?  null  :  option;	  	non-compiled	[CE]  not  a  statement	40	None	add
134	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =(Option)options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    Option  option  =(Option)options.get(i);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	add
135	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =  options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    Option  option  =  options.get(i);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	add
136	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =  options.get(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    Option  option  =  options.get(option);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	add
137	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  gbuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  gbuilder.setOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    gbuilder.setOption(option);	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
138	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
139	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	69	None	replace
140	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.getOption(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	69	None	replace
141	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	76	None	replace
142	[BUG]  [BUGGY]  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    options.add(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	57	None	replace
143	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    options.add(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
144	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    options.add(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
145	[BUG]  [BUGGY]  option  ==  null?  null  :  option;  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  ==  null?  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  ==  null?  null  :  option;	  return    option    ==    null?    null    :    option;    option    ==    null?    null    :    option;    	non-compiled	[CE]  not  a  statement	64	None	replace
146	[BUG]  [BUGGY]  Option  option  =  null?  null  :  option;  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  null?  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  null?  null  :  option;	  return    option    ==    null?    null    :    option;    option    ==    null?    null    :    option;    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	64	None	replace
147	[BUG]  [BUGGY]  return  options  ==  null?  null  :  options;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  options;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options  ==  null?  null  :  options;	  return    options    ==    null?    null    :    option;    	non-compiled	[CE]  incompatible  types	43	None	replace
148	[BUG]  [BUGGY]  return  options  ==  null?  null  :  options.values();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  options.values();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options  ==  null?  null  :  options.values();	  return    options    ==    null?    null    :    option;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
149	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
150	[BUG]  [BUGGY]  final  Iterator  i  =  options.iterator();  if(i.hasNext())  {  option  =  i.next();  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Iterator  i  =  options.iterator();  if(i.hasNext())  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Iterator  i  =  options.iterator();  if(i.hasNext())  {  option  =  i.next();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  incompatible  types	51	None	replace
151	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  (Option)i.next();  }  [CE]  variable  option  might  already  have  been  assigned  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  (Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  (Option)i.next();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  might  already  have  been  assigned	51	None	replace
152	[BUG]  [BUGGY]  option  =  options.setOption(gbuilder);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.setOption(gbuilder);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.setOption(gbuilder);	  option    =    gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
153	[BUG]  [BUGGY]  option  =  obuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  obuilder.setOption(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  obuilder.setOption(option);	  option    =    gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
154	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option.next());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.withOption((  Option)option.next());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.withOption((  Option)option.next());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.withOption((    Option)option.next());    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
155	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)option.next();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)option.next();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }	  if(option!=    null)    {    gbuilder.withOption((    Option)option.next());    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	98	None	replace
156	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(i.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(i.next());	  Option    option    =(Option)this.options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	53	None	replace
157	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(0);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(0);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(0);	  Option    option    =(Option)this.options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	53	None	replace
158	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(i  +  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(i  +  1);	  Option    option    =(Option)this.options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	53	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.get(i  +  1  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i  +  1  -  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i  +  1  -  1);	  Option    option    =    options.get(i    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	replace
160	[BUG]  [BUGGY]  Option  option  =  options.get(i  +  1L);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i  +  1L);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i  +  1L);	  Option    option    =    options.get(i    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	replace
161	[BUG]  [BUGGY]  Options  option  =  options.clone();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Options  option  =  options.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Options  option  =  options.clone();	  Option    option    =    options.clone();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
162	[BUG]  [BUGGY]  options.clone();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.clone();	  Option    option    =    options.clone();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
163	[BUG]  [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
164	[BUG]  [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  jbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  jbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  jbuilder.withOption((  Option)i.next());  }	  option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
165	[BUG]  [BUGGY]  if(gbuilder!=  null)  {  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(gbuilder!=  null)  {  gbuilder.setOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(gbuilder!=  null)  {  gbuilder.setOption(option);  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
166	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  gbuilder.setOption(option);  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
167	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
168	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
169	[BUG]  [BUGGY]  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
170	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
171	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
172	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.intValue()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)options.get(i.intValue()  -  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.intValue()  -  1);	  Option    option    =(Option)options.get(i.intValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	71	None	replace
173	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.intValue(),  options.intValue());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)options.get(i.intValue(),  options.intValue());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.intValue(),  options.intValue());	  Option    option    =(Option)options.get(i.intValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	71	None	replace
174	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i.intValue());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(i.intValue());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(i.intValue());	  Option    option    =(Option)options.get(i.intValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	71	None	replace
175	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption,  i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(defaultOption,  i);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(defaultOption,  i);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	33	None	replace
176	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption,  defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(defaultOption,  defaultOption);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(defaultOption,  defaultOption);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	33	None	replace
177	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
178	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
179	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuild  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuild  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuild	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
180	[BUG]  [BUGGY]  final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
181	[BUG]  [BUGGY]  return  option.cloneTree();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option.cloneTree();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option.cloneTree();	  return    obuilder.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
182	[BUG]  [BUGGY]  return  abuilder.cloneTree();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  abuilder.cloneTree();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  abuilder.cloneTree();	  return    obuilder.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
183	[BUG]  [BUGGY]  return  gbuilder.cloneTree();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  gbuilder.cloneTree();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  gbuilder.cloneTree();	  return    obuilder.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
184	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  ';'  expected	36	None	replace
185	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuild  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuild  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuild	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  ';'  expected	36	None	replace
186	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  ==  '  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  ==  '	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  illegal  line  end  in  character  literal	36	None	replace
187	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  gbuilder.setOption(option);  }  else  {  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption(option);    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
188	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	58	None	replace
189	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
190	[BUG]  [BUGGY]  return  options  ==  null?(Option)option.clone()  :  null;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?(Option)option.clone()  :  null;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options  ==  null?(Option)option.clone()  :  null;	  return    options!=    null?(Option)option.clone()    :    null;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
191	[BUG]  [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION,  true);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION,  true);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(Option.OPTIONAL_OPTION,  true);	  Option    option    =    options.get(Option.OPTIONAL_OPTION);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	84	None	replace
192	[BUG]  [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION,  null);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION,  null);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(Option.OPTIONAL_OPTION,  null);	  Option    option    =    options.get(Option.OPTIONAL_OPTION);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	84	None	replace
193	[BUG]  [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION,  i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION,  i);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(Option.OPTIONAL_OPTION,  i);	  Option    option    =    options.get(Option.OPTIONAL_OPTION);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	84	None	replace
194	[BUG]  [BUGGY]  Option  option  =  options.get(this.option  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(this.option  +  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(this.option  +  1);	  Option    option    =    options.get(this.option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	34	None	replace
195	[BUG]  [BUGGY]  Option  option  =  this.options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  this.options.get(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  this.options.get(option);	  Option    option    =    options.get(this.option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	34	None	replace
196	[BUG]  [BUGGY]  Option  option  =  options.get(this.option,  this.option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(this.option,  this.option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(this.option,  this.option);	  Option    option    =    options.get(this.option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	34	None	replace
197	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
198	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  Option  option  =(Option)allOptions.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)allOptions.get(i.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)allOptions.get(i.next());	  Option    option    =(Option)allOptions.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	55	None	replace
200	[BUG]  [BUGGY]  Option  option  =(Option)this.allOptions.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.allOptions.get(i);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.allOptions.get(i);	  Option    option    =(Option)allOptions.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	55	None	replace
201	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  }	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create()    	non-compiled	[CE]  ';'  expected	59	None	replace
202	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()!=  '  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()!=  '	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create()    	non-compiled	[CE]  illegal  line  end  in  character  literal	59	None	replace
203	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
204	[BUG]  [BUGGY]  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
205	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
206	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  }	  if(option!=    null)    {    if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.re    	non-compiled	[CE]  not  a  statement	21	None	replace
207	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  if(option!=    null)    {    if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.re    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
208	[BUG]  [BUGGY]  option  =  gbuilder.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  gbuilder.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  gbuilder.clone();	  option    =    options.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
209	[BUG]  [BUGGY]  Option  option  =  options.iterator().next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.iterator().next();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator().next();	  return    options.iterator().next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	94	None	replace
210	[BUG]  [BUGGY]  return  options.iterator(),  option.next();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.iterator(),  option.next();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.iterator(),  option.next();	  return    options.iterator().next();    	non-compiled	[CE]  ';'  expected	94	None	replace
211	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
212	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.reset();  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
213	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =(Option)i.next();  gbuilder.reset();  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
214	[BUG]  [BUGGY]  Option  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    option    =    options.values().iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	60	None	replace
215	[BUG]  [BUGGY]  Option  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  if(option!=    null)    {    option    =    options.values().iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
216	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with	  if(option!=    null)    {    option    =    options.values().iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  not  a  statement	60	None	replace
217	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  if(option!=    null)    {    option    =    options.values().iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
218	[BUG]  [BUGGY]  if(option!=  null)  {  return  gbuilder.clone();  }  [CE]  clone()  has  protected  access  in  Object  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  gbuilder.clone();  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  gbuilder.clone();  }	  return    gbuilder.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	7	None	replace
219	[BUG]  [BUGGY]  return  options!=  null?  options.clone()  :  null;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  options.clone()  :  null;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  options.clone()  :  null;	  return    option!=    null?    options.clone()    :    null;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
220	[BUG]  [BUGGY]  return  options!=  null?  option.clone()  :  null;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  option.clone()  :  null;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  option.clone()  :  null;	  return    option!=    null?    options.clone()    :    null;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
221	[BUG]  [BUGGY]  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
222	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	  if(option!=    null)    {    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
223	[BUG]  [BUGGY]  gbuilder.reset();  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();	  return    option    ==    null?    null    :    option;    gbuilder.reset();    	non-compiled	[CE]  missing  return  statement	27	None	replace
224	[BUG]  [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.reset();  }  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.reset();  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  option  ==  null?  null  :  option;  gbuilder.reset();  }	  return    option    ==    null?    null    :    option;    gbuilder.reset();    	non-compiled	[CE]  unreachable  statement	27	None	replace
225	[BUG]  [BUGGY]  if(option  ==  null)return  null;  if(option!=  null)return  null;  gbuilder.reset();  }  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)return  null;  if(option!=  null)return  null;  gbuilder.reset();  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)return  null;  if(option!=  null)return  null;  gbuilder.reset();  }	  return    option    ==    null?    null    :    option;    gbuilder.reset();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
226	[BUG]  [BUGGY]  return  options.toArray(option);  [CE]  no  suitable  method  found  for  toArray(Option)  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(option);	  return    options.toArray(optionalOptions);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Option)	95	None	replace
227	[BUG]  [BUGGY]  return  options.toArray(Options.EMPTY_SET);  [CE]  cannot  find  symbol  Options  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(Options.EMPTY_SET);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(Options.EMPTY_SET);	  return    options.toArray(optionalOptions);    	non-compiled	[CE]  cannot  find  symbol  Options	95	None	replace
228	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOption,  i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(defaultOption,  i);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(defaultOption,  i);	  Option    option    =    options.getOption(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	38	None	replace
229	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(this.defaultOption);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this.defaultOption);	  Option    option    =    options.getOption(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	38	None	replace
230	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.next(),  options);	  Option    option    =(Option)options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	54	None	replace
231	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)options.get(i.next()  -  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.next()  -  1);	  Option    option    =(Option)options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	54	None	replace
232	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
233	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  not  a  statement	75	None	replace
234	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
235	[BUG]  [BUGGY]  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.values().iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    option    =    options.values().iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
236	[BUG]  [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
237	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options  ==  null?  null  :  option;  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options  ==  null?  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options  ==  null?  null  :  option;	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
238	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options!=  null?  null  :  option;  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options!=  null?  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options!=  null?  null  :  option;	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
239	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options  ==  null?  null  :  option.create();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options  ==  null?  null  :  option.create();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options  ==  null?  null  :  option.create();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
240	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  }	  For(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
241	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option,  options);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option,  options);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option,  options);  }	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
242	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option,  options);  }  else  {  gbuilder.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option,  options);  }  else  {  gbuilder.setOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option,  options);  }  else  {  gbuilder.setOption(option);  }	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
243	[BUG]  [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION)+  1;  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(Option.OPTIONAL_OPTION)+  1;  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(Option.OPTIONAL_OPTION)+  1;	  Option    option    =    options.get(Option.OPTIONAL_OPTION);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	84	None	replace
244	[BUG]  [BUGGY]  final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
245	[BUG]  [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	51	None	replace
246	[BUG]  [BUGGY]  return  options.toArray(optionalOptionBuilder);  [CE]  cannot  find  symbol  optionalOptionBuilder  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(optionalOptionBuilder);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(optionalOptionBuilder);	  return    options.toArray(optionalOptions);    	non-compiled	[CE]  cannot  find  symbol  optionalOptionBuilder	95	None	replace
247	[BUG]  [BUGGY]  Option  option  =  options.keySet();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.keySet();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.keySet();	  return    options.keySet();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	45	None	replace
248	[BUG]  [BUGGY]  return  option.keySet();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option.keySet();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option.keySet();	  return    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
249	[BUG]  [BUGGY]  OptionBuilder  option  =  options.getOption(option);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  OptionBuilder  option  =  options.getOption(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	OptionBuilder  option  =  options.getOption(option);	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption(option);    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
250	[BUG]  [BUGGY]  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	OptionBuilder  option  =  options.getOption(option);  if(option!=  null)  {  option  =  option;  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption(option);    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
251	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =  obuilder.create();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  Option  option  =  obuilder.create();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    Option  option  =  obuilder.create();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	add
252	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.class);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	75	None	replace
253	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOption);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(defaultOption);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(defaultOption);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	75	None	replace
254	[BUG]  [BUGGY]  option  =  option.setOption(gbuilder);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  option.setOption(gbuilder);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  option.setOption(gbuilder);	  option    =    gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
255	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
256	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
257	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  bbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  bbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  bbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
258	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
259	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option.clone);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option.clone);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option.clone);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
260	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.get(option.clone);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  option  =  options.get(option.clone);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.get(option.clone);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
261	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clon  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clon  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clon	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
262	[BUG]  [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	58	None	replace
263	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	16	None	replace
264	[BUG]  [BUGGY]  return  options.iterator();  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.iterator();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.iterator();	  return    options.iterator().next();    	non-compiled	[CE]  incompatible  types	94	None	replace
265	[BUG]  [BUGGY]  return  options.keySet().next();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.keySet().next();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.keySet().next();	  return    options.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
266	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	19	None	replace
267	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)option.get());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)option.get());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.withOption((  Option)option.get());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.withOption((    Option)option.next());    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
268	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)option.next();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)option.next();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.withOption((    Option)option.next());    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	98	None	replace
269	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)option.getValue());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)option.getValue());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.withOption((  Option)option.getValue());  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.withOption((    Option)option.next());    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
270	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(defaultOption  -  1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(defaultOption  -  1);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	33	None	replace
271	[BUG]  [BUGGY]  if(option  ==  null)  {  return  option;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  return  option;  }	  return    option    ==    null?    null    :    option;    Option    option    =(Option)options.get(i);    	non-compiled	[CE]  missing  return  statement	25	None	replace
272	[BUG]  [BUGGY]  return  options.cloneTree();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.cloneTree();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.cloneTree();	  return    obuilder.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
273	[BUG]  [BUGGY]  final  Iterator  <  Option>  options  =  options.iterator();  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  final  Iterator  <  Option>  options  =  options.iterator();  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	final  Iterator  <  Option>  options  =  options.iterator();  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  not  a  statement	97	None	replace
274	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.WithOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.WithOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.WithOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
275	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone()  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone()  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone()	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  ')'  expected	48	None	replace
276	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create()	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create()    	non-compiled	[CE]  ';'  expected	59	None	replace
277	[BUG]  [BUGGY]  if(option!=  null)  {  options.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  options.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
278	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	80	None	replace
279	[BUG]  [BUGGY]  if(option!=  null)  {  options.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  options.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    gbuilder.set();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
280	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.set();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }	  if(option!=    null)    {    gbuilder.set();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
281	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }	  gbuilder.reset();    for(Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
282	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }	  gbuilder.reset();    for(Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
283	[BUG]  [BUGGY]  return  OptionBuilder.withOption(option);  [CE]  cannot  find  symbol  OptionBuilder  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  OptionBuilder.withOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  OptionBuilder.withOption(option);	  return    obuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	2	None	replace
284	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOpti	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOpti    	non-compiled	[CE]  not  a  statement	50	None	replace
285	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
286	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(this.options,  options);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this.options,  options);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	39	None	replace
287	[BUG]  [BUGGY]  if(option!=  null)  {  options.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  options.setOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.setOption(option);  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
288	[BUG]  [BUGGY]  if(option!=  null)  {  option.setOption(option);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  option.setOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option.setOption(option);  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
289	[BUG]  [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option  ==  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder	  if(option!=    null)    {    if(option    ==    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.re    	non-compiled	[CE]  not  a  statement	20	None	replace
290	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
291	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option;  }  else  {  options.add(option);  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option;  }  else  {  options.add(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option;  }  else  {  options.add(option);  }	  gbuilder.setOption(option;    	non-compiled	[CE]  ')'  expected	83	None	replace
292	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  o  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  o  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  o	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
293	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  else  {  gbuilder.setOption(this.option);  }  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  else  {  gbuilder.setOption(this.option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  else  {  gbuilder.setOption(this.option);  }	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	11	None	replace
294	[BUG]  [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
295	[BUG]  [BUGGY]  Option  option  =  options.clone();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.clone();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.clone();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
296	[BUG]  [BUGGY]  Option  option  =  options.get(options.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.next());	  Option    option    =    options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	13	None	replace
297	[BUG]  [BUGGY]  return  options!=  null?  null  :  options;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  null  :  options;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  null  :  options;	  return    options    ==    null?    null    :    option;    	non-compiled	[CE]  incompatible  types	43	None	replace
298	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.setOption(obuilder);  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(obuilder!=  null)  {  gbuilder.setOption(obuilder);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(obuilder!=  null)  {  gbuilder.setOption(obuilder);  }	  gbuilder.setOption(obuilder);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
299	[BUG]  [BUGGY]  if(obuilder.setOption(option))  {  gbuilder.setOption(obuilder);  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(obuilder.setOption(option))  {  gbuilder.setOption(obuilder);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(obuilder.setOption(option))  {  gbuilder.setOption(obuilder);  }	  gbuilder.setOption(obuilder);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
300	[BUG]  [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.add(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
301	[BUG]  [BUGGY]  if(option!=  null)  {  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
302	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  ';'  expected	36	None	replace
303	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  <identifier>  expected	36	None	replace
304	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.setOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.setOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.setOption(option);  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
305	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.intValue(),  options.size());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)options.get(i.intValue(),  options.size());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.intValue(),  options.size());	  Option    option    =(Option)options.get(i.intValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	71	None	replace
306	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.intValue(),  options.length);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)options.get(i.intValue(),  options.length);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)options.get(i.intValue(),  options.length);	  Option    option    =(Option)options.get(i.intValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	71	None	replace
307	[BUG]  [BUGGY]  OptionBuilder  option  =  options.getOption();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  OptionBuilder  option  =  options.getOption();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	OptionBuilder  option  =  options.getOption();	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption();    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
308	[BUG]  [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	23	None	replace
309	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(option);	  Option    option    =(Option)this.options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	53	None	replace
310	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(options,  i);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(options,  i);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	63	None	replace
311	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.class);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	69	None	replace
312	[BUG]  [BUGGY]  Option  option  =  options.getOption(this);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(this);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(this);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	69	None	replace
313	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(options);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(options);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	69	None	replace
314	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  ')'  expected	78	None	replace
315	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
316	[BUG]  [BUGGY]  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Options)i.next());  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Options)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
317	[BUG]  [BUGGY]  Option  option  =  options.toArray(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.toArray(options);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.toArray(options);	  return    options.toArray(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	46	None	replace
318	[BUG]  [BUGGY]  Option  option  =(Option)allOptions.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)allOptions.get(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)allOptions.get(option);	  Option    option    =(Option)allOptions.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	55	None	replace
319	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  2);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(options.size()  -  2);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(options.size()  -  2);	  Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	56	None	replace
320	[BUG]  [BUGGY]  return  options!=  null?(Option)option.clone()  :  option;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?(Option)option.clone()  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?(Option)option.clone()  :  option;	  return    options!=    null?(Option)option.clone()    :    null;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
321	[BUG]  [BUGGY]  return  obuilder.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  obuilder.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  obuilder.clone();	  return    gbuilder.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	7	None	replace
322	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.with	  if(option!=    null)    {    if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.re    	non-compiled	[CE]  not  a  statement	21	None	replace
323	[BUG]  [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  if(option!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder	  if(option!=    null)    {    if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.re    	non-compiled	[CE]  not  a  statement	21	None	replace
324	[BUG]  [BUGGY]  options  =  obuilder.clone();  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options  =  obuilder.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options  =  obuilder.clone();	  option    =    options.clone();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	62	None	replace
325	[BUG]  [BUGGY]  options.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  options.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	options.reset();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
326	[BUG]  [BUGGY]  Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
327	[BUG]  [BUGGY]  Option  option  =  options.values();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.values();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.values();	  return    options.values();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	44	None	replace
328	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.re	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  not  a  statement	76	None	replace
329	[BUG]  [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.add(option);  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    options.add(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
330	[BUG]  [BUGGY]  Option  option  =  options.cloneOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.cloneOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.cloneOption(option);	  Option    option    =    options.clone();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	8	None	replace
331	[BUG]  [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  Option  option  =  options.get(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  option  ==  null?  null  :  option;  Option  option  =  options.get(option);  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  option  ==  null?  null  :  option;  Option  option  =  options.get(option);  }	  return    option    ==    null?    null    :    option;    Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	29	None	replace
332	[BUG]  [BUGGY]  Option  option  =  options.get(this.option,  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(this.option,  options);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(this.option,  options);	  Option    option    =    options.get(this.option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	34	None	replace
333	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  this.options.getOption(option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  this.options.getOption(option);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	39	None	replace
334	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
335	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.addOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
336	[BUG]  [BUGGY]  Option  option  =  options.iterator();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.iterator();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	18	None	replace
337	[BUG]  [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
338	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
339	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
340	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i.next());  [CE]  cannot  find  symbol  i  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.withOption((  Option)i.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.withOption((  Option)i.next());	  Option    option    =    options.getOption(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol  i	69	None	replace
341	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i.toString());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(i.toString());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(i.toString());	  Option    option    =(Option)this.options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	53	None	replace
342	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i.type);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =(Option)this.options.get(i.type);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =(Option)this.options.get(i.type);	  Option    option    =(Option)this.options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	53	None	replace
343	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
344	[BUG]  [BUGGY]  Option  option  =  options.get(1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(1);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(1);	  Option    option    =    options.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	15	None	replace
345	[BUG]  [BUGGY]  return  options.toArray(optional);  [CE]  cannot  find  symbol  optional  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(optional);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(optional);	  return    options.toArray(optionalOptions);    	non-compiled	[CE]  cannot  find  symbol  optional	95	None	replace
346	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  i.next();  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
347	[BUG]  [BUGGY]  Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }	  if(option!=    null)    {    options.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	72	None	replace
348	[BUG]  [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  option  =  option.next();  }	  if(option!=    null)    {    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	73	None	replace
349	[BUG]  [BUGGY]  gbuilder.withOption((  Options)options.next());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.withOption((  Options)options.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.withOption((  Options)options.next());	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Options)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
350	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  return  option;  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
351	[BUG]  [BUGGY]  if(obuilder.setOption(option))  throw  new  IllegalArgumentException( " ");  gbuilder.setOption(obuilder);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(obuilder.setOption(option))  throw  new  IllegalArgumentException( " ");  gbuilder.setOption(obuilder);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(obuilder.setOption(option))  throw  new  IllegalArgumentException( " ");  gbuilder.setOption(obuilder);  }	  gbuilder.setOption(obuilder);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
352	[BUG]  [BUGGY]  option  =  options.get(this.option);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  options.get(this.option);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  options.get(this.option);	  Option    option    =    options.get(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	34	None	replace
353	[BUG]  [BUGGY]  return  options!=  null?  options.values()  :  Collections.EMPTY_SET;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  options.values()  :  Collections.EMPTY_SET;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  options.values()  :  Collections.EMPTY_SET;	  return    options.values();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
354	[BUG]  [BUGGY]  return  options!=  null?  options.values()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options!=  null?  options.values()  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options!=  null?  options.values()  :  Collections.EMPTY_LIST;	  return    options.values();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
355	[BUG]  [BUGGY]  if(option!=  null)  {  return  option;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  return  option;  }	  return    option    ==    null?    null    :    option;    gbuilder.reset();    	non-compiled	[CE]  missing  return  statement	27	None	replace
356	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  gbuilder.reset();  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  gbuilder.reset();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  null  :  option;  gbuilder.reset();	  return    option    ==    null?    null    :    option;    gbuilder.reset();    	non-compiled	[CE]  unreachable  statement	27	None	replace
357	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
358	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(option);  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.reset();  }	  Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
359	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
360	[BUG]  [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  options.add(option);  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  options.add(option);  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.addOption(option);  }	  if(option!=    null)    {    options.add(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
361	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  obuilder);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(options,  obuilder);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(options,  obuilder);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	63	None	replace
362	[BUG]  [BUGGY]  return  option!=  null?(Option)option,  options.get(option):  null;  [CE]  :  expected  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?(Option)option,  options.get(option):  null;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?(Option)option,  options.get(option):  null;	  return    option!=    null?(Option)option,    options.clone()    :    null;    	non-compiled	[CE]  :  expected	88	None	replace
363	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
364	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gBuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gBuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gBuilder.withOption(option.clone());  }	  if(option!=    null)    {    for(final    Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
365	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOption,  defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(defaultOption,  defaultOption);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(defaultOption,  defaultOption);	  Option    option    =    options.getOption(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	38	None	replace
366	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
367	[BUG]  [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone  ==  ')'	  if(option!=    null)    {    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone    	non-compiled	[CE]  ')'  expected	79	None	replace
368	[BUG]  [BUGGY]  if(option  ==  null)return  option;  Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)return  option;  Option  option  =  options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)return  option;  Option  option  =  options.get(i);	  return    option    ==    null?    null    :    option;    Option    option    =    options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	26	None	replace
369	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
370	[BUG]  [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }	  option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
371	[BUG]  [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  builder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  builder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  builder.withOption((  Option)i.next());  }	  option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
372	[BUG]  [BUGGY]  return  options  ==  null?  null  :  options.toArray(option);  [CE]  no  suitable  method  found  for  toArray(Option)  [FE]    ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  options.toArray(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options  ==  null?  null  :  options.toArray(option);	  return    options    ==    null?    null    :    option;    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Option)	43	None	replace
373	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)it.next();  gbuilder.withOption(option);  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
374	[BUG]  [BUGGY]  return  options.toArray(new  Option[options.size()  ]);  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.toArray(new  Option[options.size()  ]);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.toArray(new  Option[options.size()  ]);	  return    options.clone();    	non-compiled	[CE]  incompatible  types	6	None	replace
375	[BUG]  [BUGGY]  return  options.keySet().clone();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.keySet().clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.keySet().clone();	  return    options.clone();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
376	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionsBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionsBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option);  }  else  {  OptionsBuilder  option  =  options.getOption();  if(option!=  null)  {  option  =  option;  }	  if(option!=    null)    {    gbuilder.setOption(option);    }    else    {    OptionBuilder    option    =    options.getOption();    if(option!=    null)    {    option    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
377	[BUG]  [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  final  Option  option  =  options.iterator();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
378	[BUG]  [BUGGY]  gbuilder.withOption(option.clone());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.withOption(option.clone());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.withOption(option.clone());	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
379	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
380	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option.clone());  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option.clone());    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
381	[BUG]  [BUGGY]  Option  option  =  options.values();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.values();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.values();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    option    =    options.values().iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	60	None	replace
382	[BUG]  [BUGGY]  return  option!=  null?  null  :  option.clone();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  null  :  option.clone();	  return    option!=    null?    null    :    option;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
383	[BUG]  [BUGGY]  return  option!=  null?  options.clone()  :  OptionBuilder.create(option);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  options.clone()  :  OptionBuilder.create(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  option!=  null?  options.clone()  :  OptionBuilder.create(option);	  return    option!=    null?    options.clone()    :    option;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
384	[BUG]  [BUGGY]  if(option  ==  null)return  option;  Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option  ==  null)return  option;  Option  option  =(Option)options.get(i);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option  ==  null)return  option;  Option  option  =(Option)options.get(i);	  return    option    ==    null?    null    :    option;    Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	25	None	replace
385	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  gbuilder.setOption(option;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  gbuilder.setOption(option;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gbuilder.setOption(option;    	non-compiled	[CE]  	83	None	replace
386	[BUG]  [BUGGY]  return  option!=  null?  null  :  option;  option!=  null  :  option;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  option!=  null?  null  :  option;  option!=  null  :  option;  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    option!=    null?    null    :    option;    option!=  null  :  option;	  	non-compiled	[CE]  not  a  statement	40	None	add
387	[BUG]  [BUGGY]  Option  option  =  options.getOption(Option.OPTIONAL_OPTION);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.getOption(Option.OPTIONAL_OPTION);  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.getOption(Option.OPTIONAL_OPTION);	  Option    option    =    options.get(Option.OPTIONAL_OPTION);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	84	None	replace
388	[BUG]  [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  final  Option  option  =  options.get(option);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
389	[BUG]  [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(option!=  null)  {  Option  option  =  options.get(0);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  if(option!=    null)    {    Option    option    =    options.get(option);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
390	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
391	[BUG]  [BUGGY]  return  options.keySet().iterator().next();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options.keySet().iterator().next();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return  options.keySet().iterator().next();	  return    options.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
392	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.iterator();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.reset();  }	  Option    option    =    options.iterator();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
393	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  Option  option  =  options.get(1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  Option  option  =  options.get(1);  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	  Option    option    =    options.get(0);    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
394	[BUG]  [BUGGY]  option  =  obuilder.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  option  =  obuilder.clone();  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	option  =  obuilder.clone();	  option    =    options.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
395	[BUG]  [BUGGY]  gbuilder.setOption(option,  options;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.setOption(option,  options;  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.setOption(option,  options;	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  ')'  expected	10	None	replace
396	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.	  if(option!=    null)    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
397	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.getOption(option);  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options.getOption(option);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
398	[BUG]  [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.getOption(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure    [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  return  options  ==  null?  null  :  option;  Option  option  =  options.getOption(i.next());  [BUGGY]      }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	return    options    ==    null?    null    :    option;    Option  option  =  options.getOption(i.next());	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
399	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(options!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  }	  gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    option    =    i.next();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
400	[BUG]  [BUGGY]  Option  option  =  options.get(i  +  1,  i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  Option  option  =  options.get(i  +  1,  i.next());  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	Option  option  =  options.get(i  +  1,  i.next());	  Option    option    =    options.get(i    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	replace
401	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(obuilder!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.create	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  ';'  expected	36	None	replace
402	[BUG]  [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  if(obuilder!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	if(obuilder!=  null)  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  option  =  obuilder.	  if(option!=    null)    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    option    =    obuilder.create    	non-compiled	[CE]  <identifier>  expected	36	None	replace
403	[BUG]  [BUGGY]  gbuilder.set();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();      [BUGGY]  gbuilder.set();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	89	89	1	replace	gbuilder.set();  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    gbuilder.set();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
