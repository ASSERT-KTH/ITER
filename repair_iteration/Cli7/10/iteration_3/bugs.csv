bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(1),  options.size());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(1),  options.size());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(1),  options.size());	  gbuilder.withOption((    Option)options.get(1));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
2	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(2));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(2));  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(2));	  gbuilder.withOption((    Option)options.get(1));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
3	[BUG]  [BUGGY]  option.addOption(gbuilder,  option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option.addOption(gbuilder,  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.addOption(gbuilder,  option);	  gbuilder.addOption(option,    option);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
4	[BUG]  [BUGGY]  gbuilder.addOption(option,  Option.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.addOption(option,  Option.class);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(option,  Option.class);	  gbuilder.addOption(option,    option);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
5	[BUG]  [BUGGY]  gbuilder.withOption(options,  options);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(options,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(options,  options);	  gbuilder.withOption(options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	34	None	replace
6	[BUG]  [BUGGY]  gbuilder.withOption(option,  options);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(option,  options);	  gbuilder.withOption(options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	34	None	replace
7	[BUG]  [BUGGY]  gbuilder.withOption(options,  option);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(options,  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(options,  option);	  gbuilder.withOption(options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	34	None	replace
8	[BUG]  [BUGGY]  option  =  options.clone();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option  =  options.clone();  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  =  options.clone();	  Option    option    =    options.clone();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
9	[BUG]  [BUGGY]  Options  option  =  options.clone();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Options  option  =  options.clone();  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Options  option  =  options.clone();	  Option    option    =    options.clone();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
10	[BUG]  [BUGGY]  options.clone();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  options.clone();  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	options.clone();	  Option    option    =    options.clone();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
11	[BUG]  [BUGGY]  Option  option  =  obuilder.addOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  obuilder.addOption(option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  obuilder.addOption(option);	  Option    option    =    gbuilder.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
12	[BUG]  [BUGGY]  Option  option  =  gbuilder.addOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  gbuilder.addOption(options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  gbuilder.addOption(options);	  Option    option    =    gbuilder.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
13	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.get(option  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  abuilder  =  options.get(option  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  abuilder  =  options.get(option  +  1);	  OptionBuilder    abuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
14	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.get(OptionBuilder.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  abuilder  =  options.get(OptionBuilder.class);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  abuilder  =  options.get(OptionBuilder.class);	  OptionBuilder    abuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
15	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  abuilder  =  option.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  abuilder  =  option.get(option);	  OptionBuilder    abuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
16	[BUG]  [BUGGY]  Option  option  =  obuilder.setOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  obuilder.setOption(option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  obuilder.setOption(option);	  Option    option    =    gbuilder.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	54	None	replace
17	[BUG]  [BUGGY]  Option  option  =  gbuilder.setOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  gbuilder.setOption(options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  gbuilder.setOption(options);	  Option    option    =    gbuilder.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	54	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.createOption(this.options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.createOption(this.options);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(this.options);	  Option    option    =    options.createOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	48	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.createOption(defaultOptions);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.createOption(defaultOptions);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(defaultOptions);	  Option    option    =    options.createOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	48	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.createOption(DefaultOptionBuilder.class);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.createOption(DefaultOptionBuilder.class);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(DefaultOptionBuilder.class);	  Option    option    =    options.createOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	48	None	replace
21	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption(options.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption(options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption(options.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
24	[BUG]  [BUGGY]  Option  options  =(Option)this.options.get(1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =(Option)this.options.get(1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =(Option)this.options.get(1);	  Option    options    =(Option)this.options.get(0);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
25	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.size()  -  1);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.size()  -  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.size()  -  1);	  gbuilder.withOption((    Option)option,    options.size());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	39	None	replace
26	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.size()  +  1);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.size()  +  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.size()  +  1);	  gbuilder.withOption((    Option)option,    options.size());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	39	None	replace
27	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.size()  -  2);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.size()  -  2);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.size()  -  2);	  gbuilder.withOption((    Option)option,    options.size());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	39	None	replace
28	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.keySet());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.keySet());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.keySet());	  gbuilder.withOption((    Option)option,    options.size());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
29	[BUG]  [BUGGY]  gbuilder.setOption(options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.setOption(options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(options);	  gbuilder.setOption(null);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
30	[BUG]  [BUGGY]  gbuilder.setOption(this);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.setOption(this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(this);	  gbuilder.setOption(null);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
31	[BUG]  [BUGGY]  Option  options  =  _options.get(option);  [CE]  cannot  find  symbol  _options  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  _options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  _options.get(option);	  Option    options    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol  _options	52	None	replace
32	[BUG]  [BUGGY]  Option  options  =  this.options.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  this.options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  this.options.get(option);	  Option    options    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
33	[BUG]  [BUGGY]  Option  options  =  gbuilder.get(option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  gbuilder.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  gbuilder.get(option);	  Option    options    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.addOption(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(defaultOption);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(defaultOption);	  Option    option    =    options.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	44	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.addOption(this.options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(this.options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(this.options);	  Option    option    =    options.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	44	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.addOption(DefaultOptionBuilder.class);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(DefaultOptionBuilder.class);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(DefaultOptionBuilder.class);	  Option    option    =    options.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	44	None	replace
37	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(options.size()  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  options.get(options.size()  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(options.size()  +  1);	  OptionBuilder    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
38	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(option  +  2);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  options.get(option  +  2);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(option  +  2);	  OptionBuilder    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
39	[BUG]  [BUGGY]  Option  obuilder  =  options.get(option)+  2;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  obuilder  =  options.get(option)+  2;  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(option)+  2;	  Option    obuilder    =    options.get(option)+    1;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.get(option)+  1;  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(option)+  1;  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(option)+  1;	  Option    obuilder    =    options.get(option)+    1;    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	21	None	replace
41	[BUG]  [BUGGY]  Option  obuilder  =  options.get(option)/  1;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  obuilder  =  options.get(option)/  1;  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(option)/  1;	  Option    obuilder    =    options.get(option)+    1;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.getOption(defaultOption);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(defaultOption);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	36	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.getOption(DefaultOptionBuilder.class);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(DefaultOptionBuilder.class);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	36	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.getOption(this.options);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(this.options);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	36	None	replace
45	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)this.options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	add	gbuilder.withOption((  Option)this.options);	  gbuilder.withOption((    Option)defaultOption);    	compilable	  [FE]  ClassCastException  	7	1	replace
46	[BUG]  [BUGGY]  gbuilder.withOption((  Option)this.options);  [FE]  ClassCastException  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)this.options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)this.options);	  gbuilder.withOption((    Option)defaultOption);    	compilable	  [FE]  ClassCastException  	7	1	replace
47	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.toArray(options));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.toArray(options));  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.toArray(options));	  gbuilder.withOption((    Option)options.get(0),    options.iterator());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
48	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.keySet());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.keySet());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.keySet());	  gbuilder.withOption((    Option)options.get(0),    options.iterator());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
49	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.values());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.values());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.values());	  gbuilder.withOption((    Option)options.get(0),    options.iterator());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
50	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
51	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
52	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)option);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)option);  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
53	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =(Option)i.next();	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
54	[BUG]  [BUGGY]  option  =  options.get(options.size());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option  =  options.get(options.size());  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  =  options.get(options.size());	  Option    option    =    options.get(options.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
55	[BUG]  [BUGGY]  option  option  =  options.get(options.size());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option  option  =  options.get(options.size());  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  option  =  options.get(options.size());	  Option    option    =    options.get(options.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
56	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.addOption(this.option);  }  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(this.option!=  null)  {  gbuilder.addOption(this.option);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(this.option!=  null)  {  gbuilder.addOption(this.option);  }	  gbuilder.addOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	9	None	replace
57	[BUG]  [BUGGY]  gbuilder.addOption(this.option,  options);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.addOption(this.option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(this.option,  options);	  gbuilder.addOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	9	None	replace
58	[BUG]  [BUGGY]  gbuilder.addOption(this.option,  option);  [CE]  cannot  find  symbol  option  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.addOption(this.option,  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(this.option,  option);	  gbuilder.addOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	9	None	replace
59	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  option);	  gbuilder.withOption((    Option)options.get(0),    options);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
60	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(1),  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(1),  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(1),  options);	  gbuilder.withOption((    Option)options.get(0),    options);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
61	[BUG]  [BUGGY]  OptionBuilder  optionBuilder  =  options.get(option  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  optionBuilder  =  options.get(option  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  optionBuilder  =  options.get(option  +  1);	  OptionBuilder    optionBuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
62	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.withOption(this.option);  }  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(this.option!=  null)  {  gbuilder.withOption(this.option);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(this.option!=  null)  {  gbuilder.withOption(this.option);  }	  gbuilder.withOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	32	None	replace
63	[BUG]  [BUGGY]  gbuilder.withOption(this.option,  options);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(this.option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(this.option,  options);	  gbuilder.withOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	32	None	replace
64	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  }  [CE]  variable  option  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	49	None	replace
65	[BUG]  [BUGGY]  option  =(Option)this.options.get(0);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option  =(Option)this.options.get(0);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  =(Option)this.options.get(0);	  option    =(Option)options.get(0);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
66	[BUG]  [BUGGY]  gbuilder.withOption(obuilder);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(obuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(obuilder);	  gbuilder.withOption(defaultOption);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	33	None	replace
67	[BUG]  [BUGGY]  gbuilder.withOption(this.options);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(this.options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(this.options);	  gbuilder.withOption(defaultOption);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	33	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.setOption(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(defaultOption);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(defaultOption);	  Option    option    =    options.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.setOption(this.options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(this.options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(this.options);	  Option    option    =    options.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.setOption(this.option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(this.option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(this.option);	  Option    option    =    options.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	replace
71	[BUG]  [BUGGY]  Option  options  =(Option)options.get(2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =(Option)options.get(2);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =(Option)options.get(2);	  Option    options    =(Option)options.get(1);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
72	[BUG]  [BUGGY]  option.setOption(abuilder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option.setOption(abuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.setOption(abuilder);	  option.setOption(gbuilder);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
73	[BUG]  [BUGGY]  option.setOption(obuilder);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option.setOption(obuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.setOption(obuilder);	  option.setOption(gbuilder);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
74	[BUG]  [BUGGY]  OptionOption  option  =  options.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionOption  option  =  options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionOption  option  =  options.get(option);	  OptionOption    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
75	[BUG]  [BUGGY]  OptionOption  obuilder  =  options.get(option  +  1);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionOption  obuilder  =  options.get(option  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionOption  obuilder  =  options.get(option  +  1);	  OptionOption    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
76	[BUG]  [BUGGY]  OptionOption  options  =  options.get(option);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionOption  options  =  options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionOption  options  =  options.get(option);	  OptionOption    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
77	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options,  null);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options,  null);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options,  null);	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	6	None	replace
78	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options,  true);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options,  true);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options,  true);	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	6	None	replace
79	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options,  DefaultOptionBuilder.class);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options,  DefaultOptionBuilder.class);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options,  DefaultOptionBuilder.class);	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	6	None	replace
80	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	add	if(options!=  null)  {  gbuilder.withOption((  Option)options);  }	  gbuilder.withOption((    Option)options);    	compilable	  [FE]  ClassCastException  	5	1	replace
81	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(options!=  null)  {  gbuilder.withOption((  Option)options);  }	  gbuilder.withOption((    Option)options);    	compilable	  [FE]  ClassCastException  	5	1	replace
82	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	add	if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gbuilder.withOption((    Option)options);    	compilable	  [FE]  ClassCastException  	5	1	replace
83	[BUG]  [BUGGY]  if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(options!=  null)  {  gbuilder.withOption((  Option)options);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gbuilder.withOption((    Option)options);    	compilable	  [FE]  ClassCastException  	5	1	replace
84	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.clone());  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.clone());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.clone());	  gbuilder.withOption((    Option)options);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
85	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.TYPE);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.TYPE);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(OptionBuilder.TYPE);	  OptionBuilder    obuilder    =    options.get(OptionBuilder.class);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
86	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.class,  options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.class,  options);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(OptionBuilder.class,  options);	  OptionBuilder    obuilder    =    options.get(OptionBuilder.class);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
87	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.TYPE_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.TYPE_OBJECT);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(OptionBuilder.TYPE_OBJECT);	  OptionBuilder    obuilder    =    options.get(OptionBuilder.class);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
88	[BUG]  [BUGGY]  gbuilder.setOption(option,  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.setOption(option,  null);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(option,  null);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.setOption(option,  gbuilder);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(option,  gbuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(option,  gbuilder);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	16	None	replace
90	[BUG]  [BUGGY]  option.setOption(gbuilder,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option.setOption(gbuilder,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.setOption(gbuilder,  options);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
91	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
92	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)options.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
93	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)options.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
94	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
95	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options);  gbuilder.withOption((  Option)options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	add	gbuilder.withOption((    Option)options);    gbuilder.withOption((  Option)options);	  	compilable	  [FE]  ClassCastException  	4	1	add
96	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options);  gbuilder.withOption((  Option)options);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options);  gbuilder.withOption((  Option)options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((    Option)options);    gbuilder.withOption((  Option)options);	  	compilable	  [FE]  ClassCastException  	4	1	add
97	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options);  gbuilder.WithOption((  Option)options);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options);  gbuilder.WithOption((  Option)options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((    Option)options);    gbuilder.WithOption((  Option)options);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
98	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(this.option!=  null)  {  gbuilder.setOption(this.option);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(this.option!=  null)  {  gbuilder.setOption(this.option);  }	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	17	None	replace
99	[BUG]  [BUGGY]  gbuilder.setOption(this.option,  options);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.setOption(this.option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(this.option,  options);	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol  option	17	None	replace
100	[BUG]  [BUGGY]  option  obuilder  =  options.get(option);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option  obuilder  =  options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  obuilder  =  options.get(option);	  Option    obuilder    =    option.get(option);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
101	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size()  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size()  -  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.size()  -  1);	  gbuilder.withOption((    Option)options.get(0),    options.size());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
102	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size()  +  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size()  +  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.size()  +  1);	  gbuilder.withOption((    Option)options.get(0),    options.size());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
103	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size()  -  2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size()  -  2);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.size()  -  2);	  gbuilder.withOption((    Option)options.get(0),    options.size());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.size());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.getOption(options.size());  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(options.size());	  Option    option    =    options.getOption(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	19	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.size()  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.getOption(options.size()  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(options.size()  +  1);	  Option    option    =    options.getOption(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	19	None	replace
106	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
107	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
108	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option  ==  null)  {  gbuilder.withOption((  Option)option.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
109	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  if(option!=  null)  {  gbuilder.withOption((  Option)option.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
110	[BUG]  [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	For(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption,  defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(defaultOption,  defaultOption);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(defaultOption,  defaultOption);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	22	None	replace
112	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(defaultOption  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(defaultOption  +  1);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	22	None	replace
113	[BUG]  [BUGGY]  Option  option  =  options.addOption(option,  gbuilder);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(option,  gbuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(option,  gbuilder);	  gbuilder.addOption(option,    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	8	None	replace
114	[BUG]  [BUGGY]  options.addOption(option,  gbuilder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  options.addOption(option,  gbuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	options.addOption(option,  gbuilder);	  gbuilder.addOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
115	[BUG]  [BUGGY]  option.addOption(gbuilder,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option.addOption(gbuilder,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.addOption(gbuilder,  options);	  gbuilder.addOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
116	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(2);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =(Option)this.options.get(2);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)this.options.get(2);	  Option    option    =(Option)options.get(2);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	31	None	replace
117	[BUG]  [BUGGY]  Option  obuilder  =  options.get(option  +  1L);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  obuilder  =  options.get(option  +  1L);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(option  +  1L);	  Option    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	20	None	replace
118	[BUG]  [BUGGY]  Option  obuilder  =  options.get(options.size()  +  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  obuilder  =  options.get(options.size()  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(options.size()  +  1);	  Option    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.get(option  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(option  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(option  +  1);	  Option    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	20	None	replace
120	[BUG]  [BUGGY]  gbuilder.withOption(this);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(this);	  gbuilder.withOption(this.option);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	32	None	replace
121	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)option.clone();	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	56	None	replace
122	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)option.next();	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	56	None	replace
123	[BUG]  [BUGGY]  parentBuilder.withOption((  Option)option);  [CE]  cannot  find  symbol  parentBuilder  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  parentBuilder.withOption((  Option)option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	parentBuilder.withOption((  Option)option);	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  cannot  find  symbol  parentBuilder	56	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.cloneOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.cloneOption(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.cloneOption(option);	  Option    option    =    options.clone();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	47	None	replace
125	[BUG]  [BUGGY]  gbuilder.addOption(this);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.addOption(this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(this);	  gbuilder.addOption(this.option);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
126	[BUG]  [BUGGY]  Option  option  =(Option)options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =(Option)options.get(option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)options.get(option);	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	55	None	replace
127	[BUG]  [BUGGY]  parentBuilder.withOption((  Parent)option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  parentBuilder.withOption((  Parent)option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	parentBuilder.withOption((  Parent)option);	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
128	[BUG]  [BUGGY]  gbuilder.withOption(option;  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption(option;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(option;	  gbuilder.withOption(opt);    	non-compiled	[CE]  ')'  expected	43	None	replace
129	[BUG]  [BUGGY]  OptionOption  obuilder  =  option.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionOption  obuilder  =  option.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionOption  obuilder  =  option.get(option);	  OptionOption    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
130	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)options);  }  [CE]  variable  option  might  not  have  been  initialized  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)options);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption((  Option)options);  }	  gbuilder.withOption((    Option)options);    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	5	None	replace
131	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.get(OptionBuilder.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  option.get(OptionBuilder.class);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  option.get(OptionBuilder.class);	  OptionBuilder    obuilder    =    options.get(OptionBuilder.class);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
132	[BUG]  [BUGGY]  OptionBuilder  optionBuilder  =  options.get(OptionBuilder.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  optionBuilder  =  options.get(OptionBuilder.class);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  optionBuilder  =  options.get(OptionBuilder.class);	  OptionBuilder    obuilder    =    options.get(OptionBuilder.class);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
133	[BUG]  [BUGGY]  OptionBuilder  option  =  options.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  option  =  options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  option  =  options.get(option);	  OptionBuilder    obuilder    =    option.get(option);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.addOption(option,  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(option,  options);	  gbuilder.addOption(option,    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	8	None	replace
135	[BUG]  [BUGGY]  Option  option  =  options.setOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(options);	  Option    option    =    options.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	replace
136	[BUG]  [BUGGY]  Option  option  =  options.setOption(true);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(true);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(true);	  Option    option    =    options.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	replace
137	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.clone());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.clone());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.clone());	  gbuilder.withOption((    Option)options.get(0),    options);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
138	[BUG]  [BUGGY]  option  =(Option)options.get(1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option  =(Option)options.get(1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  =(Option)options.get(1);	  option    =(Option)options.get(0);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
139	[BUG]  [BUGGY]  Option  options  =  obuilder.get(option);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  obuilder.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  obuilder.get(option);	  Option    options    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
140	[BUG]  [BUGGY]  Option  options  =  option.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  option.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  option.get(option);	  Option    options    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
141	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =(Option)options.next();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)options.next();	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	50	None	replace
142	[BUG]  [BUGGY]  Option  option  =  obuilder.create();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  obuilder.create();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  obuilder.create();	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	50	None	replace
143	[BUG]  [BUGGY]  Option  options  =  options.get(option)+  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  options.get(option)+  1;  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  options.get(option)+  1;	  Option    obuilder    =    options.get(option)+    1;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
144	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.get(option  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  option.get(option  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  option.get(option  +  1);	  OptionBuilder    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
145	[BUG]  [BUGGY]  option.setOption(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  option.setOption(option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.setOption(option);	  option.setOption(gbuilder);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
146	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(defaultOption  -  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(defaultOption  -  1);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	22	None	replace
147	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	36	None	replace
148	[BUG]  [BUGGY]  Option  option  =  options.addOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(options);	  Option    option    =    options.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	44	None	replace
149	[BUG]  [BUGGY]  Option  option  =  options.addOption(option,  option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.addOption(option,  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(option,  option);	  gbuilder.addOption(option,    option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	45	None	replace
150	[BUG]  [BUGGY]  Option  obuilder  =  options.get(optionName  +  1);  [CE]  cannot  find  symbol  optionName  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  obuilder  =  options.get(optionName  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(optionName  +  1);	  Option    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  cannot  find  symbol  optionName	20	None	replace
151	[BUG]  [BUGGY]  gbuilder.setOption(this,  option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.setOption(this,  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(this,  option);	  gbuilder.setOption(this.option);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
152	[BUG]  [BUGGY]  OptionsOptionBuilder  obuilder  =  options.setOption(option,  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionsOptionBuilder  obuilder  =  options.setOption(option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionsOptionBuilder  obuilder  =  options.setOption(option,  options);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.setOption(option,  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(option,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(option,  options);	  gbuilder.setOption(option,    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	16	None	replace
154	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option;	  gbuilder.withOption((    Option)defaultOption);    	non-compiled	[CE]  ')'  expected	7	None	replace
155	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options,  option);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options,  option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options,  option);	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	6	None	replace
156	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options,  obuilder);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options,  obuilder);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options,  obuilder);	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	6	None	replace
157	[BUG]  [BUGGY]  OptionBuilder  optionsBuilder  =  options.get(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  optionsBuilder  =  options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  optionsBuilder  =  options.get(option);	  OptionBuilder    optionBuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
158	[BUG]  [BUGGY]  Option  option  =  options.createOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.createOption(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(option);	  Option    option    =    options.createOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	48	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.createOption(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.createOption(defaultOption);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(defaultOption);	  Option    option    =    options.createOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	48	None	replace
160	[BUG]  [BUGGY]  Option  option  =  options.createOption(this);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.createOption(this);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(this);	  Option    option    =    options.createOption(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	48	None	replace
161	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
162	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  option  =  options.iterator();  option.hasNext();)  {  gbuilder.withOption(option.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  option  =  options.iterator();  option.hasNext();)  {  gbuilder.withOption(option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  option  =  options.iterator();  option.hasNext();)  {  gbuilder.withOption(option.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
163	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  Option  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  Option  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  Option  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
164	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.enter());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.enter());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.enter());	  gbuilder.withOption((    Option)options.get(0),    options.iterator());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
165	[BUG]  [BUGGY]  parentBuilder.withOption(option);  [CE]  cannot  find  symbol  parentBuilder  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  parentBuilder.withOption(option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	parentBuilder.withOption(option);	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol  parentBuilder	49	None	replace
166	[BUG]  [BUGGY]  gBuilder.withOption((  Option)options.get(0));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gBuilder.withOption((  Option)options.get(0));  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gBuilder.withOption((  Option)options.get(0));	  gbuilder.withOption((    Option)options.get(1));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
167	[BUG]  [BUGGY]  Option  obuilder  =  gbuilder.setOption(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  obuilder  =  gbuilder.setOption(option);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  gbuilder.setOption(option);	  option.setOption(gbuilder);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
168	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.cloneTree());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.cloneTree());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.cloneTree());	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
169	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.clone());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.clone());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.clone());	  gbuilder.withOption((    Option)option,    options);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.get(2);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(2);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(2);	  Option    option    =    options.get(1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	13	None	replace
171	[BUG]  [BUGGY]  gbuilder.addOption(option,  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.addOption(option,  null);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(option,  null);	  gbuilder.addOption(option,    options);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
172	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.remove(0));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.remove(0));  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.remove(0));	  gbuilder.withOption((    Option)options.get(0),    options.size());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
173	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
174	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  [CE]  variable  option  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption(options.next());    }    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	51	None	replace
175	[BUG]  [BUGGY]  Option  options  =  options.get(option  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  options  =  options.get(option  +  1);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  options.get(option  +  1);	  Option    obuilder    =    options.get(option    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	20	None	replace
176	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
177	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gBuilder.withOption((  Option)i.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
178	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
179	[BUG]  [BUGGY]  if(this.option!=  null)  {  gbuilder.withOption(this.option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(this.option!=  null)  {  gbuilder.withOption(this.option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(this.option!=  null)  {  gbuilder.withOption(this.option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  gbuilder.withOption(this.option);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
180	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
181	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
182	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  if(option!=    null)    {    gbuilder.withOption(option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
183	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	56	None	replace
184	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	56	None	replace
185	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	56	None	replace
186	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)option.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	56	None	replace
187	[BUG]  [BUGGY]  Option  option  =  options.setOption(opt);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.setOption(opt);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(opt);	  Option    option    =    options.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	40	None	replace
188	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	55	None	replace
189	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	55	None	replace
190	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	55	None	replace
191	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)it.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	55	None	replace
192	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options;  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options;	  gbuilder.withOption((    Option)options.get(0),    options);    	non-compiled	[CE]  ')'  expected	42	None	replace
193	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.get(option));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  gbuilder.withOption((  Option)option,  options.get(option));  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.get(option));	  gbuilder.withOption((    Option)option,    options.size());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
194	[BUG]  [BUGGY]  OptionBuilder  gbuilder  =  options.get(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  gbuilder  =  options.get(option);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  gbuilder  =  options.get(option);	  OptionBuilder    optionBuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
195	[BUG]  [BUGGY]  Option  option  =  options.clone()?  options.clone()  :  null;  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.clone()?  options.clone()  :  null;  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.clone()?  options.clone()  :  null;	  Option    option    =    options.clone();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	47	None	replace
196	[BUG]  [BUGGY]  Option  option  =  options.cloneTree();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.cloneTree();  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.cloneTree();	  Option    option    =    options.clone();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	47	None	replace
197	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.DEFAULT_LOAD_FACTOR);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(OptionBuilder.DEFAULT_LOAD_FACTOR);	  OptionBuilder    obuilder    =    options.get(OptionBuilder.class);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
198	[BUG]  [BUGGY]  Option  option  =  options.get(DefaultOptionBuilder.class);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  Option  option  =  options.get(DefaultOptionBuilder.class);  [BUGGY]      gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(DefaultOptionBuilder.class);	  Option    option    =    options.get(defaultOption);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	22	None	replace
199	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	57	None	replace
200	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	57	None	replace
201	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  <  Option>  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	57	None	replace
202	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]                          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {      [BUGGY]  try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	try  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  it  =  options.iterator();  it.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  if(option    ==    null)    {    gbuilder.withOption((    Option)option);    }    else    {    for(final    Iterator    options    =    options.iterator();    options.hasNext();)    {    gbuilder.withOption((    Option)options.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	57	None	replace
