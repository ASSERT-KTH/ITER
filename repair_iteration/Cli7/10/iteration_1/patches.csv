bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  options  =(Option)this.options.get(0);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  options  =(Option)this.options.get(0);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =(Option)this.options.get(0);	      Option    options    =(Option)options.get(0);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
2	[BUG]  [BUGGY]  Option  options  =(Option)options.get(1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  options  =(Option)options.get(1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =(Option)options.get(1);	      Option    options    =(Option)options.get(0);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
3	[BUG]  [BUGGY]  Option  options  =(Option)allOptions.get(0);  [CE]  cannot  find  symbol  allOptions  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  options  =(Option)allOptions.get(0);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =(Option)allOptions.get(0);	      Option    options    =(Option)options.get(0);    	non-compiled	[CE]  cannot  find  symbol  allOptions	2	None	replace
4	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	add	gbuilder.withOption((  Option)options);	  gbuilder.withOption((    Option)option);    	compilable	  [FE]  ClassCastException  	8	1	replace
5	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options);  [FE]  ClassCastException  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options);	  gbuilder.withOption((    Option)option);    	compilable	  [FE]  ClassCastException  	8	1	replace
6	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)option,  options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options);	  gbuilder.withOption((    Option)option);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	8	None	replace
7	[BUG]  [BUGGY]  gbuilder.withOption((  Option)defaultOption);  [CE]  cannot  find  symbol  defaultOption  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)defaultOption);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)defaultOption);	  gbuilder.withOption((    Option)option);    	non-compiled	[CE]  cannot  find  symbol  defaultOption	8	None	replace
8	[BUG]  [BUGGY]  gbuilder.addOption(option,  options);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.addOption(option,  options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(option,  options);	  gbuilder.addOption(option);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  gbuilder.addOption(this.option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.addOption(this.option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(this.option);	  gbuilder.addOption(option);    	non-compiled	[CE]  cannot  find  symbol  option	12	None	replace
10	[BUG]  [BUGGY]  Option  option  =  gbuilder.addOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  gbuilder.addOption(option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  gbuilder.addOption(option);	  gbuilder.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	12	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.get(options.size());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.get(options.size());  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(options.size());	      Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.get(options.size()  +  1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(options.size()  +  1);	      Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.get(1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.get(1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(1);	      Option    option    =    options.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	10	None	replace
14	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(0);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =(Option)this.options.get(0);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)this.options.get(0);	      Option    option    =(Option)options.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	1	None	replace
15	[BUG]  [BUGGY]  option  =(Option)options.get(0);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  option  =(Option)options.get(0);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option  =(Option)options.get(0);	      Option    option    =(Option)options.get(0);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
16	[BUG]  [BUGGY]  gbuilder.setOption(option,  options);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.setOption(option,  options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(option,  options);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
17	[BUG]  [BUGGY]  gbuilder.setOption(this.option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.setOption(this.option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(this.option);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol  option	7	None	replace
18	[BUG]  [BUGGY]  gbuilder.setOption(null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.setOption(null);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.setOption(null);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.size()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.getOption(options.size()  -  1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(options.size()  -  1);	      Option    option    =    options.create();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
20	[BUG]  [BUGGY]  Option  obuilder  =  options.get(option  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  obuilder  =  options.get(option  +  1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(option  +  1);	      Option    obuilder    =    options.get(option);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
21	[BUG]  [BUGGY]  Option  obuilder  =  options.get(option)+  1;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  obuilder  =  options.get(option)+  1;  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  options.get(option)+  1;	      Option    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.get(defaultOption);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.get(defaultOption);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(defaultOption);	      Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	4	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.get(i);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(i);	      Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	4	None	replace
24	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(option  +  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  OptionBuilder  obuilder  =  options.get(option  +  1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(option  +  1);	      OptionBuilder    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
25	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.class);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  OptionBuilder  obuilder  =  options.get(OptionBuilder.class);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  options.get(OptionBuilder.class);	      OptionBuilder    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
26	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.get(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  OptionBuilder  obuilder  =  option.get(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  obuilder  =  option.get(option);	      OptionBuilder    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
27	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.size());  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.size());	  gbuilder.withOption((    Option)options.get(0));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
28	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(1));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)options.get(1));  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(1));	  gbuilder.withOption((    Option)options.get(0));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
29	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.iterator());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options.iterator());  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options.iterator());	  gbuilder.withOption((    Option)options.get(0));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =(Option)this.options.get(1);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)this.options.get(1);	      Option    option    =(Option)options.get(1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	5	None	replace
31	[BUG]  [BUGGY]  Option  option  =(Option)options.get(2);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =(Option)options.get(2);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =(Option)options.get(2);	      Option    option    =(Option)options.get(1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	5	None	replace
32	[BUG]  [BUGGY]  gbuilder.withOption(this.option);  [CE]  cannot  find  symbol  option  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption(this.option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(this.option);	  gbuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol  option	11	None	replace
33	[BUG]  [BUGGY]  gbuilder.withOption(defaultOption);  [CE]  cannot  find  symbol  defaultOption  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption(defaultOption);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(defaultOption);	  gbuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol  defaultOption	11	None	replace
34	[BUG]  [BUGGY]  gbuilder.withOption(options);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption(options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(options);	  gbuilder.withOption(option);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	11	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.get(options.size()  -  2);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.get(options.size()  -  2);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.get(options.size()  -  2);	      Option    option    =    options.get(options.size()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.getOption(option);	      Option    option    =    options.create();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
37	[BUG]  [BUGGY]  Option  obuilder  =  option.get(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  obuilder  =  option.get(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  obuilder  =  option.get(option);	      Option    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
38	[BUG]  [BUGGY]  OptionBuilder  optionBuilder  =  options.get(option);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  OptionBuilder  optionBuilder  =  options.get(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  optionBuilder  =  options.get(option);	      OptionBuilder    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
39	[BUG]  [BUGGY]  gbuilder.withOption((  Option)option,  options.size());  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)option,  options.size());  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)option,  options.size());	  gbuilder.withOption((    Option)option);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	8	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.setOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.setOption(option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.setOption(option);	  gbuilder.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	7	None	replace
41	[BUG]  [BUGGY]  option.setOption(gbuilder);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  option.setOption(gbuilder);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	option.setOption(gbuilder);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption((  Option)options.get(0),  options);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption((  Option)options.get(0),  options);	  gbuilder.withOption((    Option)options.get(0));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
43	[BUG]  [BUGGY]  gbuilder.withOption(opt);  [CE]  cannot  find  symbol  opt  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.withOption(opt);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.withOption(opt);	  gbuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol  opt	11	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.addOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.addOption(option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.addOption(option);	  gbuilder.addOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	12	None	replace
45	[BUG]  [BUGGY]  gbuilder.addOption(option,  option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  gbuilder.addOption(option,  option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	gbuilder.addOption(option,  option);	  gbuilder.addOption(option);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
46	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.get(option);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  OptionBuilder  abuilder  =  options.get(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionBuilder  abuilder  =  options.get(option);	      OptionBuilder    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
47	[BUG]  [BUGGY]  Option  option  =  options.clone();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.clone();  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.clone();	      Option    option    =    options.create();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.createOption(options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  options.createOption(options);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  options.createOption(options);	      Option    option    =    options.create();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	9	None	replace
49	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  gbuilder.withOption(option);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  gbuilder.withOption(option);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option!=  null)  {  gbuilder.withOption(option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption(options.next());  }	  gbuilder.withOption(option);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  Option  options  =  options.get(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  options  =  options.get(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  options  =  options.get(option);	      Option    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
53	[BUG]  [BUGGY]  OptionOption  obuilder  =  options.get(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  OptionOption  obuilder  =  options.get(option);  [BUGGY]    gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	OptionOption  obuilder  =  options.get(option);	      Option    obuilder    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
54	[BUG]  [BUGGY]  Option  option  =  gbuilder.setOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  Option  option  =  gbuilder.setOption(option);  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	Option  option  =  gbuilder.setOption(option);	  gbuilder.setOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	7	None	replace
55	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((  Option)i.next());  }	  gbuilder.withOption((    Option)option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)option.next());  }	  gbuilder.withOption((    Option)option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {    [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }  [BUGGY]    for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	80	80	1	replace	if(option  ==  null)  {  gbuilder.withOption((  Option)option);  }  else  {  for(final  Iterator  options  =  options.iterator();  options.hasNext();)  {  gbuilder.withOption((  Option)options.next());  }	  gbuilder.withOption((    Option)option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
