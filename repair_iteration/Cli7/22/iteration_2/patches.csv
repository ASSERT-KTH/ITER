bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        abuilder.reset();    abuilder.reset();  abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	16	1	add
2	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  abuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.reset();  abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	16	1	add
3	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  Abuilder.reset();  abuilder.reset();  [CE]  cannot  find  symbol  Abuilder  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  Abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    Abuilder.reset();  abuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	16	None	add
4	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.set();  abuilder.reset();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.set();  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.set();  abuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        abuilder.reset();    abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	16	1	add
6	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	16	1	add
7	[BUG]  [BUGGY]  abuilder.withOptionalValue(opt);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptionalValue(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptionalValue(opt);	  abuilder.withOptionalValue(1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
8	[BUG]  [BUGGY]  abuilder.withOptionalValue(2);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptionalValue(2);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptionalValue(2);	  abuilder.withOptionalValue(1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
10	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMinimum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
12	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMinimum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
14	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
16	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
18	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(opt);	  abuilder.withMinimum(0);    abuilder.withMinimum(   "   ");    	compilable	  [FE]  IllegalArgumentException  	65	1	replace
20	[BUG]  [BUGGY]  abuilder.withMinimum(opt);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(opt);	  abuilder.withMinimum(0);    abuilder.withMinimum(   "   ");    	compilable	  [FE]  IllegalArgumentException  	65	1	replace
21	[BUG]  [BUGGY]  abuilder.withMinimum(opt, "   ");  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(opt, "   ");  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(opt, "   ");	  abuilder.withMinimum(0);    abuilder.withMinimum(   "   ");    	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	65	None	replace
22	[BUG]  [BUGGY]  abuilder.withOptional(required);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptional(required);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptional(required);	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
23	[BUG]  [BUGGY]  abuilder.withString(1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withString(1);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withString(1);	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
25	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
27	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
28	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(options);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(options);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(options);	  	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	25	None	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
30	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
31	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt);	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
32	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create();  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create();	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
33	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
34	[BUG]  [BUGGY]  abuilder.setOption(optimized);  [CE]  cannot  find  symbol  optimized  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setOption(optimized);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setOption(optimized);	  abuilder.setOption(required);    	non-compiled	[CE]  cannot  find  symbol  optimized	2	None	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
36	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
38	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
40	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
41	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  '.'  ||  opt  ==  'n')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  '.'  ||  opt  ==  'n')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt!=  '.'  ||  opt  ==  'n')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
43	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt  ==  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
45	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(3);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(3);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
47	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(3);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(3);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(3);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
49	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(2);  abuilder.withMinimum(4);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
51	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(3);    abuilder.withMinimum(2);  abuilder.withMinimum(4);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
52	[BUG]  [BUGGY]  abuilder.withMaximum(options);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(options);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(options);	  abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	10	None	replace
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(opt);	  abuilder.withMaximum(1);    abuilder.withMaximum(options);    	compilable	  [FE]  ComparisonFailure  	10	1	replace
54	[BUG]  [BUGGY]  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(opt);	  abuilder.withMaximum(1);    abuilder.withMaximum(options);    	compilable	  [FE]  ComparisonFailure  	10	1	replace
55	[BUG]  [BUGGY]  abuilder.withMaximum(opt,  options);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(opt,  options);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(opt,  options);	  abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	10	None	replace
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
57	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
59	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
61	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
63	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
65	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
66	[BUG]  [BUGGY]  abuilder.setMaximum(1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setMaximum(1);	  abuilder.setMaximum(0);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
67	[BUG]  [BUGGY]  abuilder.setMaximum(2);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setMaximum(2);	  abuilder.setMaximum(0);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(2);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
69	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(2);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(2);    abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
71	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(2);    abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(2);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
73	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(2);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(2);    abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
75	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(2);    abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
77	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
79	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
81	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
82	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(;  abuilder.withMinimum(1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(;  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(;  abuilder.withMinimum(1);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '.')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
84	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMinimum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
86	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMinimum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
88	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
90	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
92	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
93	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
94	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(0);    abuilder.withMinimum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
95	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(3);	  abuilder.withMinimum(2);    abuilder.withMinimum(3);    	compilable	  [FE]  IllegalArgumentException  	37	1	replace
96	[BUG]  [BUGGY]  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(3);	  abuilder.withMinimum(2);    abuilder.withMinimum(3);    	compilable	  [FE]  IllegalArgumentException  	37	1	replace
97	[BUG]  [BUGGY]  abuilder.withOption(opt,  type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(opt,  type);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(opt,  type);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
98	[BUG]  [BUGGY]  abuilder.withOption(type,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(type,  required);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(type,  required);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
100	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
102	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
104	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
106	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
108	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	45	1	add
109	[BUG]  [BUGGY]  abuilder.setMaximum(required);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setMaximum(required);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setMaximum(required);	  abuilder.setMaximum(opt);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
110	[BUG]  [BUGGY]  abuilder.setMaximum(type);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setMaximum(type);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setMaximum(type);	  abuilder.setMaximum(opt);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
112	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
114	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
115	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.WithMaximum(1);  abuilder.withMinimum(1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.WithMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.WithMaximum(1);  abuilder.withMinimum(1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
116	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  Abuilder.withMaximum(1);  abuilder.withMinimum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  Abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMinimum(1);    Abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	8	None	add
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
118	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
119	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    if(abuilder!=  null)  {  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
121	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
122	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder  >=  null)  {  abuilder.reset();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder  >=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder  >=  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	58	None	add
123	[BUG]  [BUGGY]  abuilder.addValidator(validator(type));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.addValidator(validator(type));  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.addValidator(validator(type));	          abuilder.addValidator(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
124	[BUG]  [BUGGY]  abuilder.addValidator(validator(opt),  required);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.addValidator(validator(opt),  required);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.addValidator(validator(opt),  required);	          abuilder.addValidator(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
125	[BUG]  [BUGGY]  abuilder.addValidator(validator(opt,  required));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.addValidator(validator(opt,  required));  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.addValidator(validator(opt,  required));	          abuilder.addValidator(validator(opt));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	11	None	replace
126	[BUG]  [BUGGY]  abuilder.withOption(optimized);  [CE]  cannot  find  symbol  optimized  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(optimized);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(optimized);	  abuilder.withOption(type);    	non-compiled	[CE]  cannot  find  symbol  optimized	14	None	replace
127	[BUG]  [BUGGY]  abuilder.withOption(options,  opt,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(options,  opt,  required);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(options,  opt,  required);	  abuilder.withOption(options,    opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
128	[BUG]  [BUGGY]  abuilder.withOption(options,  opt,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(options,  opt,  type);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(options,  opt,  type);	  abuilder.withOption(options,    opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
130	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
131	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
132	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMinimum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
134	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMinimum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(0);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
136	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(0);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
138	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
140	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(0);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
142	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(0);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
143	[BUG]  [BUGGY]  abuilder.setOption(type;  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setOption(type;  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setOption(type;	  abuilder.setOption(opt;    	non-compiled	[CE]  ')'  expected	64	None	replace
144	[BUG]  [BUGGY]  abuilder.setOption(option;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setOption(option;  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setOption(option;	  abuilder.setOption(opt;    	non-compiled	[CE]  ')'  expected	64	None	replace
145	[BUG]  [BUGGY]  abuilder.setOption(required;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setOption(required;  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setOption(required;	  abuilder.setOption(opt;    	non-compiled	[CE]  ')'  expected	64	None	replace
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
147	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
149	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
150	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
151	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
153	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(3);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
155	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(3);  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(3);  abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(3);  abuilder.withMinimum(2);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
156	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withOption(opt);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.reset();  abuilder.withOption(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.reset();  abuilder.withOption(opt);	          abuilder.reset();    if(abuilder!=    null)    {    abuilder.reset();    }    else    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
157	[BUG]  [BUGGY]  abuilder.withOptionalMaximum(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptionalMaximum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptionalMaximum(opt);	  abuilder.withOptionalMaximum(1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
158	[BUG]  [BUGGY]  abuilder.withOption(options,  type,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(options,  type,  required);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(options,  type,  required);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
160	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
161	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  '.')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
163	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '.')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  '.')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  '.')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
165	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  '.')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  '.')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
166	[BUG]  [BUGGY]  abuilder.withRequired(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withRequired(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withRequired(opt);	  abuilder.withRequired(required);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
167	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
168	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
169	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
170	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
172	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
173	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.WithMaximum(1);  abuilder.withMaximum(1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.WithMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.WithMaximum(1);  abuilder.withMaximum(1);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
174	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
175	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
176	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
177	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
179	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
181	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
182	[BUG]  [BUGGY]  abuilder.withOption(options,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(options,  options);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(options,  options);	  abuilder.withOption(options,    option);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
183	[BUG]  [BUGGY]  abuilder.withOptional(type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptional(type);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptional(type);	  abuilder.withOptional(opt);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
184	[BUG]  [BUGGY]  abuilder.withOptional(opt,  required);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptional(opt,  required);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptional(opt,  required);	  abuilder.withOptional(opt);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
185	[BUG]  [BUGGY]  abuilder.withOption(options,  options,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(options,  options,  required);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(options,  options,  required);	  abuilder.withOption(options,    required);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
186	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(4);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
187	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(4);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
188	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(5);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(5);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
189	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(5);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(5);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(5);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
190	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(3);  abuilder.withMinimum(4);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(3);  abuilder.withMinimum(4);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
191	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(3);  abuilder.withMinimum(4);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(3);  abuilder.withMinimum(4);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(3);  abuilder.withMinimum(4);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
193	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(6);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(6);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
195	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(6);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(6);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(6);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
197	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
199	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt  ==  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
200	[BUG]  [BUGGY]  abuilder.setOption(options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setOption(options);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setOption(options);	  abuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	48	1	replace
202	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	48	1	replace
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	48	1	replace
204	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt  ==  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	48	1	replace
205	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
206	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
207	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  Abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [CE]  cannot  find  symbol  Abuilder  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  Abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    Abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	58	None	add
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(9);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(9);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
209	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(9);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum(9);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum(9);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '.')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
211	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt  ==  '.')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
213	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt  ==  '.')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
214	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.reset();  abuilder.reset();  }  [CE]  incomparable  types:  char  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  null)  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  null)  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMaximum(1);    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	20	None	replace
215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMaximum(1);    }    	compilable	  [FE]  ComparisonFailure  	20	1	replace
216	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMaximum(1);    }    	compilable	  [FE]  ComparisonFailure  	20	1	replace
217	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [CE]  incomparable  types:  char  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  null)  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  null)  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMaximum(1);    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	20	None	replace
218	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.reset();  }  [CE]  incomparable  types:  char  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  null)  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	18	None	replace
219	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    else    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
221	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
222	[BUG]  [BUGGY]  abuilder.withRequired(options);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withRequired(options);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withRequired(options);	  abuilder.withRequired(required);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
223	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  Abuilder.withMaximum(1);  abuilder.withMaximum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(2);  Abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(2);    Abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	6	None	add
224	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  null)  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  null)  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
225	[BUG]  [BUGGY]  if(opt  ==  null)  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  null)  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt  ==  null)  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
226	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
227	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '[')  {  abuilder.reset();  if(opt!=  null)  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
228	[BUG]  [BUGGY]  abuilder.withOption(opt,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(opt,  preferred);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(opt,  preferred);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	53	None	replace
229	[BUG]  [BUGGY]  abuilder.withOption(opt,  argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(opt,  argument);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(opt,  argument);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
231	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
232	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  Abuilder  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	49	None	add
233	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
234	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	50	1	replace
236	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	50	1	replace
237	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
238	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
239	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  ':')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  ':')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  ':')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
241	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
243	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
244	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(;  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(;  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(;	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
245	[BUG]  [BUGGY]  abuilder.withOptional(option);  [CE]  cannot  find  symbol  option  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOptional(option);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOptional(option);	  abuilder.withOptional(opt);    	non-compiled	[CE]  cannot  find  symbol  option	62	None	replace
246	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  Abuilder.withMaximum(1);  abuilder.withMaximum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  Abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(1);    Abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	4	None	add
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
248	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
249	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
250	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'h')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'h')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'h')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
251	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
252	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'h')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'h')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'h')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
253	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
254	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMinimum(1);    }    	compilable	  [FE]  ComparisonFailure  	19	1	replace
255	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMinimum(1);    }    	compilable	  [FE]  ComparisonFailure  	19	1	replace
256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMinimum(1);    }    	compilable	  [FE]  ComparisonFailure  	19	1	replace
257	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMinimum(1);    }    	compilable	  [FE]  ComparisonFailure  	19	1	replace
258	[BUG]  [BUGGY]  abuilder.setOption(opt  +  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setOption(opt  +  1);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setOption(opt  +  1);	  abuilder.setOption(opt;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
259	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(9);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(9);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
260	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(9);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(9);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(9);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
262	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    	compilable	  [FE]  ComparisonFailure  	17	1	replace
264	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    	compilable	  [FE]  ComparisonFailure  	17	1	replace
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.reset();    abuilder.reset();    	compilable	  [FE]  ComparisonFailure  	17	1	replace
266	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.reset();    abuilder.reset();    	compilable	  [FE]  ComparisonFailure  	17	1	replace
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
268	[BUG]  [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
269	[BUG]  [BUGGY]  abuilder.withMaximum(2);  Abuilder.withMaximum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(2);  Abuilder.withMaximum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(2);    Abuilder.withMaximum(2);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	23	None	add
270	[BUG]  [BUGGY]  abuilder.setMaximum(option);  [CE]  cannot  find  symbol  option  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setMaximum(option);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setMaximum(option);	  abuilder.setMaximum(opt);    	non-compiled	[CE]  cannot  find  symbol  option	66	None	replace
271	[BUG]  [BUGGY]  abuilder.setMaximum(opt  +  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.setMaximum(opt  +  1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.setMaximum(opt  +  1);	  abuilder.setMaximum(opt);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
273	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt  ==  '.')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
275	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt  ==  '.')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	52	1	replace
276	[BUG]  [BUGGY]  abuilder.withMinimum( " ");  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum( " ");  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum( " ");	  abuilder.withMinimum(0);    abuilder.withMinimum(   "   ");    	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	65	None	replace
277	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    abuilder.set();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
278	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  Abuilder  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	45	None	add
279	[BUG]  [BUGGY]  Abuilder.withMinimum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  Abuilder.withMinimum(2);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	Abuilder.withMinimum(2);	  abuilder.withMinimum(2);    Abuilder.withMinimum(2);    	non-compiled	[CE]  cannot  find  symbol  Abuilder	44	None	replace
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(2);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
281	[BUG]  [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(2);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(2);  abuilder.withMaximum(0);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(1);        abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
282	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
283	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    abuilder.set();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
284	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  Abuilder  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    Abuilder.reset();  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	47	None	add
285	[BUG]  [BUGGY]  abuilder.set(opt);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.set(opt);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.set(opt);	          abuilder.reset();    abuilder.reset();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
286	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.set();  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.set();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  'n'  ||  opt  ==  't')  {  abuilder.set();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    't')    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
287	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    abuilder.set();  if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
288	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  'N'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt!=  'N'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
289	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  'N'  ||  opt  ==  'n')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  'n'  ||  opt  ==  'n')  {  abuilder.reset();  }  if(opt!=  'N'  ||  opt  ==  'n')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    'n'    ||    opt    ==    'n')    {    abuilder.reset();    }    if(opt!=  'N'  ||  opt  ==  'n')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	49	1	add
290	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.set();  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.set();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  'n'  ||  opt  ==  'r')  {  abuilder.set();  }	          abuilder.reset();    if(opt!=    'n'    ||    opt    ==    'r')    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
291	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.set();  if(abuilder!=  null)  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  abuilder.set();  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    abuilder.set();  if(abuilder!=  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
292	[BUG]  [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  }  if(abuilder!=  null)  {  abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(abuilder!=    null)    {    abuilder.reset();    }    if(abuilder!=  null)  {  abuilder.reset();  if(abuilder  ==  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
293	[BUG]  [BUGGY]  abuilder.withOption(opt,  null);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(opt,  null);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(opt,  null);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
294	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum((4));  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum((4));	  	compilable	  [FE]  ComparisonFailure  	40	1	add
295	[BUG]  [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum((4));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMinimum(2);    abuilder.withMinimum(4);  abuilder.withMinimum(2);  abuilder.withMinimum((4));  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMinimum(2);        abuilder.withMinimum(4);    abuilder.withMinimum(2);  abuilder.withMinimum((4));	  	compilable	  [FE]  ComparisonFailure  	40	1	add
296	[BUG]  [BUGGY]  if(opt  ==  null)  {  abuilder.reset();  }  [CE]  incomparable  types:  char  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt  ==  null)  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt  ==  null)  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    null)    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	21	None	replace
297	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '[')  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder!=    null)    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
298	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '[')  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder!=    null)    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
299	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  '[')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(abuilder!=    null)    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
300	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '[')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(abuilder!=    null)    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
301	[BUG]  [BUGGY]  if(opt!=  '.')  {  opt  =  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  '.')  {  opt  =  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  '.')  {  opt  =  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }	          abuilder.reset();    if(opt!=    '.')    {    abuilder.reset();    }    else    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  incompatible  types	61	None	replace
302	[BUG]  [BUGGY]  abuilder.withOption(options,  options,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withOption(options,  options,  type);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withOption(options,  options,  type);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
304	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
305	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	                abuilder.reset();        abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
306	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
307	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        abuilder.reset();    if(abuilder!=  null)  {  abuilder.reset();  abuilder.reset();  }  else  {  abuilder.withOption(opt);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
308	[BUG]  [BUGGY]  abuilder.set();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.set();  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.set();	          abuilder.reset();    if(abuilder!=    null)    {    abuilder.reset();    }    else    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
309	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  if(opt!=  ':')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  if(opt!=  ':')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    if(opt!=  ':')  {  abuilder.reset();  if(opt!=  '.')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
310	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  '.')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    abuilder.set();  if(opt!=  '.')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
311	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]          abuilder.reset();    if(opt!=  '.')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	                abuilder.reset();        if(opt!=    '.')    {    abuilder.reset();    }    if(opt!=  '.')  {  abuilder.reset();  if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
312	[BUG]  [BUGGY]  abuilder.withMaximum(options,  opt);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withMaximum(options,  opt);  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withMaximum(options,  opt);	  abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	10	None	replace
313	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	add	if(opt!=  'n')  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMaximum(1);    }    	compilable	  [FE]  ComparisonFailure  	20	1	replace
314	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	if(opt!=  'n')  {  abuilder.reset();  abuilder.reset();  }	          abuilder.reset();    abuilder.reset();    }    else    if(type!=    '*')    {    abuilder.withMaximum(1);    }    	compilable	  [FE]  ComparisonFailure  	20	1	replace
315	[BUG]  [BUGGY]  abuilder.addValidator(validator(opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.addValidator(validator(opt,  type));  [BUGGY]      }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.addValidator(validator(opt,  type));	          abuilder.addValidator(validator(opt));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	11	None	replace
316	[BUG]  [BUGGY]  abuilder.withRequired(option);  [CE]  cannot  find  symbol  option  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {      [BUGGY]  abuilder.withRequired(option);  [BUGGY]      abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	109	109	1	replace	abuilder.withRequired(option);	  abuilder.withRequired(required);    	non-compiled	[CE]  cannot  find  symbol  option	22	None	replace
