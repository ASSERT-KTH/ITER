bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  opt  =  type.toCharArray();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.toCharArray();	  final    String    opt    =    opt.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
2	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.withString(1);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '[')  {  abuilder.withString(1);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '[')  {  abuilder.withString(1);  }	  if(opt!=    '[')    {    abuilder.withString(1);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
3	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withString(1);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '[')  {  abuilder.withString(1);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '[')  {  abuilder.withString(1);  }	  if(opt!=    '[')    {    abuilder.withString(1);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
4	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withString(1);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withString(1);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withString(1);  }	  if(opt!=    '[')    {    abuilder.withString(1);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  IllegalArgumentException  	105	1	replace
6	[BUG]  [BUGGY]  if(type!=  '-')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  IllegalArgumentException  	105	1	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '-'  ||  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  IllegalArgumentException  	105	1	replace
8	[BUG]  [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '-'  ||  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  IllegalArgumentException  	105	1	replace
9	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
10	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
11	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
12	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'l'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'l'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type!=  'n'  ||  opt  ==  'l'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
13	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
14	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  StringBuilder(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  StringBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  StringBuilder(opt);	  ArgumentBuilder    abuilder    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
15	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  StringBuilder();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  StringBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  StringBuilder();	  ArgumentBuilder    abuilder    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
16	[BUG]  [BUGGY]  abuilder  =  new  StringBuilder(opt);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  abuilder  =  new  StringBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	abuilder  =  new  StringBuilder(opt);	  ArgumentBuilder    abuilder    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
17	[BUG]  [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
18	[BUG]  [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ".);  }	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
19	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.')  {  if(opt  ==  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
20	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.')  {  if(opt!=  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
21	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.')  {  if(opt  >=  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
22	[BUG]  [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '.')    {    If(opt  ==  '.')  {	  	non-compiled	[CE]  ';'  expected	48	None	add
23	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
24	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
25	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    if(opt!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
26	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  If(opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  If(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    If(opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  ';'  expected	57	None	add
27	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type!=  'n'  ||  type  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type!=  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    if(type!=  'n'  ||  type  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
28	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type  ==  'n'  ||  type  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type  ==  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    if(type  ==  'n'  ||  type  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
29	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type  >=  'n'  ||  type  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type  >=  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    if(type  >=  'n'  ||  type  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
30	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type  >>  'n'  ||  type  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type  >>  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    if(type  >>  'n'  ||  type  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
31	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  If(type!=  'n'  ||  type  ==  'r')  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  If(type!=  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    If(type!=  'n'  ||  type  ==  'r')  {	  	non-compiled	[CE]  ';'  expected	61	None	add
32	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
33	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
34	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
35	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
36	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '*')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  '*')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
38	[BUG]  [BUGGY]  if(type  ==  '*')  {  [FE]  ComparisonFailure  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '*')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  '*')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
40	[BUG]  [BUGGY]  if(type  ==  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [FE]  ComparisonFailure  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
41	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '*')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	6	1	replace
42	[BUG]  [BUGGY]  if(type!=  '*')  {  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '*')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	6	1	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
44	[BUG]  [BUGGY]  if(type  ==  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [FE]  ComparisonFailure  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
46	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
48	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
49	[BUG]  [BUGGY]  final  String  opt  =  option.toString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  option.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  option.toString();	  final    char    opt    =    option.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
50	[BUG]  [BUGGY]  final  String  opt  =  options.toCharArray();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  options.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  options.toCharArray();	  final    char    opt    =    option.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
51	[BUG]  [BUGGY]  final  String  opt  =  option.toStringArray();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  option.toStringArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  option.toStringArray();	  final    char    opt    =    option.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
52	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  if(opt  ==  null)  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  null)  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  null)  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
54	[BUG]  [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type!=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r')    {    if(type!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
56	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r')    {    if(type  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
57	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type  >=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type  >=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r')    {    if(type  >=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
58	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type  >>  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type  >>  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r')    {    if(type  >>  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
59	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  If(type!=  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  If(type!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r')    {    If(type!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  ';'  expected	142	None	add
60	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
61	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
62	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
63	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
64	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  >=  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
65	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt    ==    '[')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
66	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
67	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
68	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
69	[BUG]  [BUGGY]  if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
70	[BUG]  [BUGGY]  final  Argument  argument  =  abuilder.create();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  Argument  argument  =  abuilder.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  Argument  argument  =  abuilder.create();	  Argument    argument    =    abuilder.create();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
71	[BUG]  [BUGGY]  Argument  argument  =  opt.toCharArray();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  Argument  argument  =  opt.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	Argument  argument  =  opt.toCharArray();	  Argument    argument    =    abuilder.create();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
72	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
73	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
74	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
75	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	88	None	add
76	[BUG]  [BUGGY]  final  char  type  =  option.toLowerCase();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  option.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  option.toLowerCase();	  final    String    type    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
77	[BUG]  [BUGGY]  final  String  type  =  options.toLowerCase();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  options.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  options.toLowerCase();	  final    String    type    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	37	1	replace
79	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	37	1	replace
80	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  IllegalArgumentException  	37	1	replace
81	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  IllegalArgumentException  	37	1	replace
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'a')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'a')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	37	1	replace
83	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'a')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'a')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'a')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  ComparisonFailure  	37	1	replace
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
85	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
87	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
88	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.re  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.re  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.re	  	non-compiled	[CE]  not  a  statement	24	None	add
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
90	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
92	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
93	[BUG]  [BUGGY]  final  char[]  type  =  opt.toCharArray();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char[]  type  =  opt.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char[]  type  =  opt.toCharArray();	  if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
94	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
95	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
96	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type  >=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type  >=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    if(type  >=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
97	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  If(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  If(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    If(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  ';'  expected	90	None	add
98	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
99	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  required);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  required);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  required);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
100	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt  +  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt  +  1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(opt  +  1);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
101	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  new  OptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  new  OptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  new  OptionBuilder(opt);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
103	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
104	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '.')  {  abuilder.reset();  }	  if(opt!=    '.')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
105	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.'  ||  opt  ==  ':')  {  abuilder.reset();  }	  if(opt!=    '.')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
106	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '.')  {  abuilder.reset();  }	  if(opt!=    '.')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
107	[BUG]  [BUGGY]  final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
108	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
109	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
110	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
111	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
112	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
113	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
114	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'N'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'N'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'N'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
115	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
116	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	35	1	replace
118	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	35	1	replace
119	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
120	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
122	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
124	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
126	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
127	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.re  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.re  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.re	  	non-compiled	[CE]  not  a  statement	26	None	add
128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
129	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
130	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
131	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    if(opt  ==  'n'  ||  opt!=  'r'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
132	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  >=  't')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  >=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  >=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
133	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
134	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {	  	non-compiled	[CE]  ';'  expected	122	None	add
135	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if  (opt!=  ':')  {	  if    (type!=    '.')    {    if    (type!=    ':')    {    	compilable	  [FE]  IllegalArgumentException  	115	1	replace
136	[BUG]  [BUGGY]  if  (opt!=  ':')  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if  (opt!=  ':')  {	  if    (type!=    '.')    {    if    (type!=    ':')    {    	compilable	  [FE]  IllegalArgumentException  	115	1	replace
137	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	117	1	replace
138	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	117	1	replace
139	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	117	1	replace
140	[BUG]  [BUGGY]  if(type!=  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '*'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	117	1	replace
141	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	117	1	replace
142	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	117	1	replace
143	[BUG]  [BUGGY]  final  String  opt  =  option.charAt(0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  option.charAt(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  option.charAt(0);	  final    char    opt    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
144	[BUG]  [BUGGY]  final  String  opt  =  option.charAt(1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  option.charAt(1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  option.charAt(1);	  final    char    opt    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
145	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt!=  'r')  {	  if(opt    ==    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  IllegalArgumentException  	119	1	replace
146	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt!=  'r')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt!=  'r')  {	  if(opt    ==    'n'    ||    opt!=    'r')    {    	compilable	  [FE]  IllegalArgumentException  	119	1	replace
147	[BUG]  [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  throw  new  IllegalArgumentException( "] ");  }	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
148	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  >=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  >=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r')    {    if(opt  >=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
149	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r')    {    if(opt!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
150	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
151	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  >>  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  >>  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r')    {    if(opt  >>  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
152	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  >=  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  if(opt  >=  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r')    {    if(opt  >=  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
153	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    'n'    ||    opt    ==    't')    {    if(opt!=  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
154	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
155	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    'n'    ||    opt    ==    't')    {    if(opt  >=  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
156	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  If(opt!=  'n'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  't')  {  If(opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    'n'    ||    opt    ==    't')    {    If(opt!=  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  ';'  expected	126	None	add
157	[BUG]  [BUGGY]  final  String  type  =  opt.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  opt.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  opt.trim().toLowerCase(Locale.ENGLISH);	  final    String    type    =    opt.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
158	[BUG]  [BUGGY]  final  char  type  =  opt.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  opt.trim().toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  opt.trim().toLowerCase();	  final    String    type    =    opt.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
159	[BUG]  [BUGGY]  final  String  type  =  opt.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  opt.trim().toLowerCase()  +  1;  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  opt.trim().toLowerCase()  +  1;	  final    String    type    =    opt.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
160	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r'  ||  opt!=  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    	compilable	  [FE]  IllegalArgumentException  	123	1	replace
161	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt!=  't')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r'  ||  opt!=  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    	compilable	  [FE]  IllegalArgumentException  	123	1	replace
162	[BUG]  [BUGGY]  final  String  opt  =  options.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  options.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  options.toLowerCase();	  final    char    opt    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
163	[BUG]  [BUGGY]  static  final  String  opt  =  option.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  opt  =  option.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  opt  =  option.toLowerCase();	  final    char    opt    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
164	[BUG]  [BUGGY]  if(opt  ==  '-')  {  if(opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  if(opt  ==  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    if(opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
165	[BUG]  [BUGGY]  if(opt  ==  '-')  {  final  char  opt  =  opt.charAt(0);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  final  char  opt  =  opt.charAt(0);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    final  char  opt  =  opt.charAt(0);	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
166	[BUG]  [BUGGY]  if(opt  ==  '-')  {  if(opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  if(opt!=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    if(opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
167	[BUG]  [BUGGY]  if(opt  ==  '-')  {  final  char  opt  =  opt  ==  '-';  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  final  char  opt  =  opt  ==  '-';  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    final  char  opt  =  opt  ==  '-';	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
168	[BUG]  [BUGGY]  if(opt  ==  '-')  {  final  char  opt  =  opt  ==  '-')  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  final  char  opt  =  opt  ==  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    final  char  opt  =  opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	102	None	add
169	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.getArgumentBuilder();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  opt.getArgumentBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  opt.getArgumentBuilder();	  ArgumentBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
170	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  opt.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  opt.getOptionBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  opt.getOptionBuilder();	  ArgumentBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
171	[BUG]  [BUGGY]  final  String  opt  =  option.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  option.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  option.toLowerCase(Locale.ENGLISH);	  final    String    opt    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
172	[BUG]  [BUGGY]  final  String  type  =  opt  ==  null?  null  :  opt.trim();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  opt  ==  null?  null  :  opt.trim();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  opt  ==  null?  null  :  opt.trim();	  final    String    type    =    opt!=    null?    null    :    opt.trim();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	66	1	replace
174	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	66	1	replace
175	[BUG]  [BUGGY]  if  (opt!=  '.')  {  if  (opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '.')  {  if  (opt!=  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if    (opt!=    '.')    {    if  (opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
176	[BUG]  [BUGGY]  if  (opt!=  '.')  {  if  (opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '.')  {  if  (opt  ==  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if    (opt!=    '.')    {    if  (opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
177	[BUG]  [BUGGY]  if  (opt!=  '.')  {  if  (opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '.')  {  if  (opt  >=  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if    (opt!=    '.')    {    if  (opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
178	[BUG]  [BUGGY]  if  (opt!=  '.')  {  final  char  opt  =  opt.charAt(0);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '.')  {  final  char  opt  =  opt.charAt(0);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if    (opt!=    '.')    {    final  char  opt  =  opt.charAt(0);	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
179	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
180	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
181	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
182	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  'n')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt!=  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
183	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
184	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  gbuilder.create(opt);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
185	[BUG]  [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  }	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
186	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(type);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(type);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
187	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	130	1	add
188	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	130	1	add
189	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException(  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
190	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	130	None	add
191	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".  [CE]  unclosed  string  literal  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".	  	non-compiled	[CE]  unclosed  string  literal	130	None	add
192	[BUG]  [BUGGY]  final  char  type  =  opt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  opt.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  opt.toLowerCase(Locale.ENGLISH);	  final    String    type    =    opt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
193	[BUG]  [BUGGY]  final  String  type  =  locale.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  locale.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  locale.toLowerCase(Locale.ENGLISH);	  final    String    type    =    opt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {	  if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	64	1	replace
195	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  opt  ==  't')  {	  if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	64	1	replace
196	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.get();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  opt.get();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  opt.get();	  ArgumentBuilder    abuilder    =    gbuilder.get();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
197	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.get();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.get();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  gbuilder.get();	  ArgumentBuilder    abuilder    =    gbuilder.get();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	134	1	replace
199	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	134	1	replace
200	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	39	1	replace
201	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	39	1	replace
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
203	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
204	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	39	1	replace
205	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	39	1	replace
206	[BUG]  [BUGGY]  final  char  type  =  opt.toUpperCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  opt.toUpperCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  opt.toUpperCase();	  final    String    type    =    opt.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
207	[BUG]  [BUGGY]  final  String  type  =  opt!=  null?  null  :  opt.toUpperCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  opt!=  null?  null  :  opt.toUpperCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  opt!=  null?  null  :  opt.toUpperCase();	  final    String    type    =    opt.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
208	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	82	1	add
209	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	82	1	add
210	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	82	None	add
211	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	82	1	add
212	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	82	1	add
213	[BUG]  [BUGGY]  If(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  If(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	If(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    If(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	non-compiled	[CE]  ';'  expected	4	None	replace
214	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
215	[BUG]  [BUGGY]  if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '*'  ||  type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
216	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  '-'  ||  opt  ==  '+')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
217	[BUG]  [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '-'  ||  opt  ==  '+')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
218	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  '-')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
219	[BUG]  [BUGGY]  if(type  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  '-')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
220	[BUG]  [BUGGY]  final  String  opt  =  opt.trim();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  opt.trim();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  opt.trim();	  final    String    opt    =    opt.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
222	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [FE]  ComparisonFailure  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
223	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  If(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  If(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  type  ==  'r')  {  If(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    If(opt!=    'n'    ||    opt    ==    'r')    {    	non-compiled	[CE]  ';'  expected	78	None	replace
224	[BUG]  [BUGGY]  if(type!=  ';')  {  If(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  ';')  {  If(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  ';')  {  If(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    If(opt!=    'n'    ||    opt    ==    'r')    {    	non-compiled	[CE]  ';'  expected	78	None	replace
225	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }	  	compilable	  [FE]  ArrayStoreException  	30	1	add
226	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }	  	compilable	  [FE]  ArrayStoreException  	30	1	add
227	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }	  	compilable	  [FE]  ArrayStoreException  	30	1	add
228	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }	  	compilable	  [FE]  ArrayStoreException  	30	1	add
229	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  [CE]  illegal  start  of  expression  [FE]        ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
230	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuild  [CE]  ')'  expected  [FE]          ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuild  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuild	  	non-compiled	[CE]  ')'  expected	30	None	add
231	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
232	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
233	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
234	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
235	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
236	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
237	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
238	[BUG]  [BUGGY]  final  char  type  =  option.charAt(0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  option.charAt(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  option.charAt(0);	  final    String    type    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
239	[BUG]  [BUGGY]  char  type  =  option.charAt(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  char  type  =  option.charAt(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	char  type  =  option.charAt(0);	  final    String    type    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
240	[BUG]  [BUGGY]  gbuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  gbuilder.setOption(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	gbuilder.setOption(type);	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
241	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  gbuilder.setOption(opt);  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  gbuilder.setOption(opt);  }	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
242	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  gbuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  gbuilder.setOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
243	[BUG]  [BUGGY]  final  char  opt!=  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt!=  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt!=  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
244	[BUG]  [BUGGY]  parent!=  null  &&  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  parent!=  null  &&  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	parent!=  null  &&  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
245	[BUG]  [BUGGY]  final  String  opt  =  type.charAt(1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.charAt(1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.charAt(1);	  final    char    opt    =    type.charAt(1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
246	[BUG]  [BUGGY]  final  char  opt  =  type.charAt(options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  type.charAt(options);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  type.charAt(options);	  final    char    opt    =    type.charAt(1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
247	[BUG]  [BUGGY]  static  final  String  type  =  opt.toLowerCase();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  type  =  opt.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  type  =  opt.toLowerCase();	  final    char    type    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
248	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(opt);	  OptionBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
249	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(0);	  OptionBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
250	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(options);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(options);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(options);	  OptionBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
251	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  type.getOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  type.getOptionBuilder(opt);	  ArgumentBuilder    abuilder    =    type.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
252	[BUG]  [BUGGY]  Argument  argument  =  abuilder.create(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  Argument  argument  =  abuilder.create(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	Argument  argument  =  abuilder.create(opt);	  Argument    argument    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
253	[BUG]  [BUGGY]  final  Argument  argument  =  gbuilder.create(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  Argument  argument  =  gbuilder.create(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  Argument  argument  =  gbuilder.create(opt);	  Argument    argument    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
254	[BUG]  [BUGGY]  Argument  argument  =  obuilder.create(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  Argument  argument  =  obuilder.create(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	Argument  argument  =  obuilder.create(opt);	  Argument    argument    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
255	[BUG]  [BUGGY]  Argument  argument  =  gbuilder.create(type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  Argument  argument  =  gbuilder.create(type);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	Argument  argument  =  gbuilder.create(type);	  Argument    argument    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
256	[BUG]  [BUGGY]  argument  =  abuilder.create();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  argument  =  abuilder.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	argument  =  abuilder.create();	  argument    =    gbuilder.create();    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
257	[BUG]  [BUGGY]  if(opt!=  null)  {  argument  =  gbuilder.create();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  argument  =  gbuilder.create();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  argument  =  gbuilder.create();  }	  argument    =    gbuilder.create();    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
258	[BUG]  [BUGGY]  argument  =  opt.create();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  argument  =  opt.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	argument  =  opt.create();	  argument    =    gbuilder.create();    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
259	[BUG]  [BUGGY]  Argument  argument  =  opt.getValue();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  Argument  argument  =  opt.getValue();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	Argument  argument  =  opt.getValue();	  Argument    argument    =    opt.create();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
260	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt!=  '[')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  if(opt!=  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '[')    {    if(opt!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
261	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  if(opt  ==  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '[')    {    if(opt  ==  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
262	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  >=  '[')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  if(opt  >=  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '[')    {    if(opt  >=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
263	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  If(opt!=  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '[')    {    If(opt!=  '[')  {	  	non-compiled	[CE]  ';'  expected	111	None	add
264	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt);	  ArgumentBuilder    abuilder    =    gbuilder.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
265	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(type);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(type);	  ArgumentBuilder    abuilder    =    gbuilder.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
266	[BUG]  [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt);  }	  ArgumentBuilder    abuilder    =    gbuilder.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
267	[BUG]  [BUGGY]  parent  ==  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  parent  ==  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	parent  ==  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
268	[BUG]  [BUGGY]  final  String  opt  =  type.toString();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.toString();	  final    char    opt    =    type.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
269	[BUG]  [BUGGY]  final  String  opt  =  type.toStringArray();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.toStringArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.toStringArray();	  final    char    opt    =    type.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
270	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
271	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
272	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
273	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
274	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  >=  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  >=  'n'  ||  opt!=  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
275	[BUG]  [BUGGY]  final  char  opt  =  opt.toString();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  opt.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  opt.toString();	  final    String    opt    =    opt.toString();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
276	[BUG]  [BUGGY]  final  String  opt  =  null;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  null;  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  null;	  final    String    opt    =    opt.toString();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
277	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(0);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(0);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
278	[BUG]  [BUGGY]  final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder();	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
279	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
280	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
281	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
282	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
283	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'N'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'N'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'N'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
284	[BUG]  [BUGGY]  final  static  String  opt  =  opt.toLowerCase();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  static  String  opt  =  opt.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  static  String  opt  =  opt.toLowerCase();	  static    final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
285	[BUG]  [BUGGY]  static  final  String  opt  =  type.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  opt  =  type.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  opt  =  type.toLowerCase();	  static    final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
286	[BUG]  [BUGGY]  static  final  String  opt  =  opt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  opt  =  opt.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  opt  =  opt.toLowerCase(Locale.ENGLISH);	  static    final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
287	[BUG]  [BUGGY]  static  final  char  opt  =  opt.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  char  opt  =  opt.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  char  opt  =  opt.toLowerCase();	  static    final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
288	[BUG]  [BUGGY]  final  tryRequired(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  tryRequired(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  tryRequired(opt)  {  throw  new  IllegalArgumentException( " ");  }	  tryRequired(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
289	[BUG]  [BUGGY]  if(required)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(required)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(required)  {  throw  new  IllegalArgumentException( " ");  }	  tryRequired(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
290	[BUG]  [BUGGY]  if(opt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  tryRequired(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
291	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt!=    'r')    {    if(opt  ==  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
292	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt  >=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt!=    'r')    {    if(opt  ==  'n'  ||  opt  >=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
293	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt!=  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt!=    'r')    {    if(opt!=  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
294	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  If(opt  ==  'n'  ||  opt!=  'r')  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  If(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt!=    'r')    {    If(opt  ==  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  ';'  expected	118	None	add
295	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt  >>  'r')  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  if(opt  ==  'n'  ||  opt  >>  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt!=    'r')    {    if(opt  ==  'n'  ||  opt  >>  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
296	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  options.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  options.getOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  options.getOptionBuilder(opt);	  ArgumentBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
297	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  options.getOptionBuilder(0);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  options.getOptionBuilder(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  options.getOptionBuilder(0);	  ArgumentBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
298	[BUG]  [BUGGY]  final  Argument  argument  =  opt.create();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  Argument  argument  =  opt.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  Argument  argument  =  opt.create();	  final    Argument    argument    =    gbuilder.create();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
299	[BUG]  [BUGGY]  final  Argument  argument  =  obuilder.create();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  Argument  argument  =  obuilder.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  Argument  argument  =  obuilder.create();	  final    Argument    argument    =    gbuilder.create();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
300	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.toString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  opt.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  opt.toString();	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
301	[BUG]  [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.toString();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.toString();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  ArgumentBuilder  abuilder  =  gbuilder.toString();  }	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
302	[BUG]  [BUGGY]  if(opt  ==  null)  {  ArgumentBuilder  abuilder  =  gbuilder.toString();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  null)  {  ArgumentBuilder  abuilder  =  gbuilder.toString();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  null)  {  ArgumentBuilder  abuilder  =  gbuilder.toString();  }	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
303	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.toString();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  gbuilder.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  gbuilder.toString();	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
304	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
305	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
307	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
309	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
310	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
311	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
312	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
313	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
314	[BUG]  [BUGGY]  final  char  opt  =  opt.toStringArray();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  opt.toStringArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  opt.toStringArray();	  final    String    opt    =    opt.toStringArray();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
315	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
316	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(type  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
317	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(type  >=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
318	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(type  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
319	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
320	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
321	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  '.')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
322	[BUG]  [BUGGY]  if(type  ==  '.')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  '.')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
323	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '[')  {  abuilder.withValidator(opt);  }	  if(opt!=    '[')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
324	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '[')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '[')  {  abuilder.withValidator(opt);  }	  if(opt!=    '[')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
325	[BUG]  [BUGGY]  final  String  opt  =  type.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.toLowerCase();	  final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
326	[BUG]  [BUGGY]  final  String  opt  =  gbuilder.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  gbuilder.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  gbuilder.toLowerCase();	  final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
327	[BUG]  [BUGGY]  abuilder  =  new  GroupBuilder(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  abuilder  =  new  GroupBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	abuilder  =  new  GroupBuilder(opt);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(0);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
328	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  GroupBuilder(0);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(0);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
329	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
330	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  IllegalArgumentException  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
331	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  ArrayStoreException  	31	1	replace
332	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  ArrayStoreException  	31	1	replace
333	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]        ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
334	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  ';')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    If(opt!=    '[')    {    abuilder.reset();    }    	compilable	  [FE]  IllegalArgumentException  	136	1	replace
335	[BUG]  [BUGGY]  if(opt!=  ';')  {  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  IllegalArgumentException  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ';')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    If(opt!=    '[')    {    abuilder.reset();    }    	compilable	  [FE]  IllegalArgumentException  	136	1	replace
336	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  if(type!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  ';')  {  if(type!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    If(opt!=    '[')    {    abuilder.reset();    }    	compilable	  [FE]  IllegalArgumentException  	136	1	replace
337	[BUG]  [BUGGY]  if(opt!=  ';')  {  if(type!=  '[')  {  abuilder.reset();  }  [FE]  IllegalArgumentException  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  if(type!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ';')  {  if(type!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    If(opt!=    '[')    {    abuilder.reset();    }    	compilable	  [FE]  IllegalArgumentException  	136	1	replace
338	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  gbuilder);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  gbuilder);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  gbuilder);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
339	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  gbuilder);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  gbuilder);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  gbuilder);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
340	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
341	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  type);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  type);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(opt,  type);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
342	[BUG]  [BUGGY]  final  String  opt  =  type.charAt(0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.charAt(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.charAt(0);	  final    char    opt    =    type.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
343	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  type.create();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  type.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  type.create();	  ArgumentBuilder    abuilder    =    type.create();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
344	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	127	1	replace
345	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	127	1	replace
346	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	127	1	replace
347	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  't')  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	127	1	replace
348	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  >=  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	127	1	replace
349	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  >=  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	127	1	replace
350	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
351	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
352	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	84	None	add
353	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
354	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
355	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
356	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '['  ||  opt!=  ']')  {  abuilder.reset();  }	  if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
357	[BUG]  [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
358	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  new  OptionBuilder(options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  new  OptionBuilder(options);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  new  OptionBuilder(options);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(options);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
359	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  new  GroupBuilder(options);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  new  GroupBuilder(options);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(options);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
360	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(options,  options);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(options,  options);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(options,  options);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(options);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
361	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(options,  opt);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(options,  opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(options,  opt);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(options);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
362	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
363	[BUG]  [BUGGY]  if(type!=  '[')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
364	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
365	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	112	1	replace
367	[BUG]  [BUGGY]  if(opt  ==  '[')  {  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '[')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	112	1	replace
368	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
369	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt);	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
370	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption();	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
371	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  obuilder.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  obuilder.getOptionBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  obuilder.getOptionBuilder();	  ArgumentBuilder    abuilder    =    obuilder.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
372	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-')  {  if(opt!=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '-')    {    if(opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
373	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '-')    {    if(opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
374	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '-')    {    if(opt  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
375	[BUG]  [BUGGY]  if(opt!=  '-')  {  If(opt!=  '-')  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-')  {  If(opt!=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '-')    {    If(opt!=  '-')  {	  	non-compiled	[CE]  ';'  expected	104	None	add
376	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
377	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
378	[BUG]  [BUGGY]  if(opt  ==  ']')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  ']')  {  abuilder.reset();  }	  if(opt!=    ']')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
379	[BUG]  [BUGGY]  if(type!=  ']')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  ']')  {  abuilder.reset();  }	  if(opt!=    ']')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
380	[BUG]  [BUGGY]  final  char  opt  =  opt.charAt(1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  opt.charAt(1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  opt.charAt(1);	  final    String    opt    =    opt.charAt(1);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
381	[BUG]  [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  opt.create();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  ArgumentBuilder  abuilder  =  opt.create();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  ArgumentBuilder  abuilder  =  opt.create();  }	  ArgumentBuilder    abuilder    =    opt.create();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
382	[BUG]  [BUGGY]  final  ArgumentBuilder  abuilder  =  opt.create();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  ArgumentBuilder  abuilder  =  opt.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  ArgumentBuilder  abuilder  =  opt.create();	  ArgumentBuilder    abuilder    =    opt.create();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
383	[BUG]  [BUGGY]  final  String  type  =  option.trim();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  option.trim();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  option.trim();	  final    char    type    =    opt.trim();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
384	[BUG]  [BUGGY]  static  final  String  type  =  opt.trim();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  type  =  opt.trim();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  type  =  opt.trim();	  final    char    type    =    opt.trim();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
385	[BUG]  [BUGGY]  final  parent!=  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  parent!=  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  parent!=  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    parent    ==    opt.parent)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
386	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  parent  ==  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	parent  ==  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    parent    ==    opt.parent)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
387	[BUG]  [BUGGY]  if(opt!=  '[')  {  OptionBuilder  abuilder  =  options.getOptionBuilder();  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  OptionBuilder  abuilder  =  options.getOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '[')    {    OptionBuilder  abuilder  =  options.getOptionBuilder();	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
388	[BUG]  [BUGGY]  if(opt!=  '[')  {  OptionBuilder  abuilder  =  options.createOption(opt);  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  OptionBuilder  abuilder  =  options.createOption(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '[')    {    OptionBuilder  abuilder  =  options.createOption(opt);	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
389	[BUG]  [BUGGY]  final  char  type  =  opt!=  null?  null  :  opt.trim();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  opt!=  null?  null  :  opt.trim();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  opt!=  null?  null  :  opt.trim();	  final    String    type    =    opt!=    null?    null    :    opt.trim();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
390	[BUG]  [BUGGY]  final  char  type  =  opt!=  null?  opt.trim()  :  opt.toLowerCase();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  opt!=  null?  opt.trim()  :  opt.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  opt!=  null?  opt.trim()  :  opt.toLowerCase();	  final    char    type    =    opt.trim();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
391	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.get(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.get(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.get(opt);	  ArgumentBuilder    abuilder    =    gbuilder.get();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
392	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.get(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.get(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.get(0);	  ArgumentBuilder    abuilder    =    gbuilder.get();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
393	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
394	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
395	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
396	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
397	[BUG]  [BUGGY]  final  char  opt  =  tryRequired(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  tryRequired(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  tryRequired(opt)  {  throw  new  IllegalArgumentException( " ");  }	  tryRequired(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
398	[BUG]  [BUGGY]  final  char  opt  =  tryRequired(opt);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  tryRequired(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  tryRequired(opt);	  tryRequired(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
399	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
400	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [FE]  ComparisonFailure  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r'  ||  type  ==  'n'  ||  type  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt!=    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
401	[BUG]  [BUGGY]  final  char  opt  =  getOption(opt);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  getOption(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  getOption(opt);	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
402	[BUG]  [BUGGY]  final  char  opt  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  options.get(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  options.get(opt);	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
403	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
404	[BUG]  [BUGGY]  final  String  type  =  option.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  option.trim().toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  option.trim().toLowerCase();	  final    String    type    =    opt.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
405	[BUG]  [BUGGY]  gbuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  gbuilder.setOption(option);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	gbuilder.setOption(option);	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
406	[BUG]  [BUGGY]  gbuilder.setOption(opt  +  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  gbuilder.setOption(opt  +  1);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	gbuilder.setOption(opt  +  1);	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
407	[BUG]  [BUGGY]  final  String  opt  =  opt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  opt.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  opt.toLowerCase(Locale.ENGLISH);	  final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
408	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  <  'n'  ||  opt  >  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  <  'n'  ||  opt  >  'r')  {	  if(opt    >=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	60	1	replace
409	[BUG]  [BUGGY]  if(opt  <  'n'  ||  opt  >  'r')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  <  'n'  ||  opt  >  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  <  'n'  ||  opt  >  'r')  {	  if(opt    >=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	60	1	replace
410	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt)+  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt)+  1;  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.getOptionBuilder(opt)+  1;	  ArgumentBuilder    abuilder    =    gbuilder.getOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
411	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder	  	non-compiled	[CE]  not  a  statement	24	None	add
412	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.  [CE]  <identifier>  expected  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.	  	non-compiled	[CE]  <identifier>  expected	24	None	add
413	[BUG]  [BUGGY]  abuilder  =  new  GroupBuilder(opt,  gbuilder);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  abuilder  =  new  GroupBuilder(opt,  gbuilder);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	abuilder  =  new  GroupBuilder(opt,  gbuilder);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
414	[BUG]  [BUGGY]  final  char  opt  =  option.charAt(1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  option.charAt(1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  option.charAt(1);	  final    char    opt    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
415	[BUG]  [BUGGY]  final  char  opt  =  options.charAt(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  options.charAt(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  options.charAt(0);	  final    char    opt    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
416	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt!=  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	127	1	replace
417	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  't')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt!=  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	127	1	replace
418	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  ']')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  ']')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
419	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  ']')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  ']')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  ']')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
420	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
421	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
422	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
423	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
424	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '.')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
425	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  ==  '[')  {  abuilder.reset();  }  if(opt!=  '.')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    ==    '[')    {    abuilder.reset();    }    if(opt!=  '.')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
426	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  >>  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  >>  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  >>  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
427	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOption(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  options.createOption(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  options.createOption(opt);	  ArgumentBuilder    abuilder    =    opt.create();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
428	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  >=  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  >=  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    if(type!=  'n'  ||  opt  >=  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
429	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.toCharArray();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  opt.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  opt.toCharArray();	  ArgumentBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
430	[BUG]  [BUGGY]  final  String  type  =  gbuilder.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  gbuilder.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  gbuilder.toLowerCase(Locale.ENGLISH);	  final    String    type    =    opt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
431	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuild  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuild  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuild	  	non-compiled	[CE]  not  a  statement	30	None	add
432	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ArrayStoreException  	30	1	add
433	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ArrayStoreException  	30	1	add
434	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder	  	non-compiled	[CE]  not  a  statement	30	None	add
435	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '  [CE]  illegal  line  end  in  character  literal  [FE]          ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	30	None	add
436	[BUG]  [BUGGY]  abuilder  =  opt.toString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  abuilder  =  opt.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	abuilder  =  opt.toString();	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
437	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  argument.toString();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  argument.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  argument.toString();	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
438	[BUG]  [BUGGY]  final  String  type  =  option.charAt(1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  option.charAt(1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  option.charAt(1);	  final    String    type    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
439	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(option  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.')  {  if(option  ==  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '.')    {    if(option  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
440	[BUG]  [BUGGY]  if  (opt!=  '.')  {  OptionBuilder  abuilder  =  OptionBuilder.create();  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '.')  {  OptionBuilder  abuilder  =  OptionBuilder.create();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if    (opt!=    '.')    {    OptionBuilder  abuilder  =  OptionBuilder.create();	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
441	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	86	None	add
442	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	86	None	add
443	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
444	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
445	[BUG]  [BUGGY]  static  final  String  opt  =  gbuilder.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  opt  =  gbuilder.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  opt  =  gbuilder.toLowerCase();	  static    final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
446	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  '-'  ||  opt  ==  ':')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
447	[BUG]  [BUGGY]  if(opt  ==  '-'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '-'  ||  opt  ==  ':')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
448	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '-'  ||  opt  ==  ':')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  IllegalArgumentException  	103	1	replace
449	[BUG]  [BUGGY]  if(opt!=  '-'  ||  opt  ==  ':')  {  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '-'  ||  opt  ==  ':')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  IllegalArgumentException  	103	1	replace
450	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ';')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    If(opt!=    '[')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
451	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ';')  {  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    }    If(opt!=    '[')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
452	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-')  {  if(opt!=  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '-')    {    if(opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
453	[BUG]  [BUGGY]  final  String  opt  =  option.toLowerCase(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  option.toLowerCase(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  option.toLowerCase(opt);	  final    String    opt    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
454	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    if(opt    >=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
455	[BUG]  [BUGGY]  if(type!=  'n')  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    if(opt    >=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
456	[BUG]  [BUGGY]  if(opt!=  ']')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ']')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ']')  {  abuilder.withValidator(opt);  }	  if(opt!=    '[')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
457	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(0);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(0);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  abuilder.withValidator(0);  }	  if(opt!=    '[')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
458	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt  +  1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(opt  +  1);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
459	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	64	1	replace
460	[BUG]  [BUGGY]  if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	64	1	replace
461	[BUG]  [BUGGY]  if  (opt!=  '[')  {  if  (type  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '[')  {  if  (type  ==  ']')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if  (opt!=  '[')  {  if  (type  ==  ']')  {	  if    (type!=    '.')    {    if    (type    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
462	[BUG]  [BUGGY]  if(opt!=  ':')  {  if  (type  ==  '>')  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ':')  {  if  (type  ==  '>')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ':')  {  if  (type  ==  '>')  {	  if    (type!=    '.')    {    if    (type    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
463	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    	compilable	  [FE]  IllegalArgumentException  	123	1	replace
464	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt!=  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    	compilable	  [FE]  IllegalArgumentException  	123	1	replace
465	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.')  {  abuilder.withValidator(opt);  }	  if(opt!=    '.')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
466	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.')  {  abuilder.withOption(opt);  }	  if(opt!=    '.')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
467	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withString(2);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  abuilder.withString(2);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  abuilder.withString(2);  }	  if(opt!=    '[')    {    abuilder.withString(1);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
468	[BUG]  [BUGGY]  if(opt!=  ']')  {  abuilder.withString(1);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ']')  {  abuilder.withString(1);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ']')  {  abuilder.withString(1);  }	  if(opt!=    '[')    {    abuilder.withString(1);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
469	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
470	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'n')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt!=  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
471	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
472	[BUG]  [BUGGY]  final  char  type  =  opt.charAt(2);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  type  =  opt.charAt(2);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  type  =  opt.charAt(2);	  final    char    type    =    opt.charAt(1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
473	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  type  >=  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type!=  'n'  ||  type  >=  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    if(type!=  'n'  ||  type  >=  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
474	[BUG]  [BUGGY]  final  String  type  =  opt.toCharArray();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  opt.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  opt.toCharArray();	  final    String    type    =    opt.charAt(1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
475	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.append(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  type.append(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  type.append(opt);	  ArgumentBuilder    abuilder    =    type.create();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
476	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	84	None	add
477	[BUG]  [BUGGY]  argument  =  obuilder.create();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  argument  =  obuilder.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	argument  =  obuilder.create();	  argument    =    gbuilder.create();    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
478	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
479	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
480	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  null);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  null);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  null);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
481	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type!=  'n'  ||  opt  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r')  {  if(type!=  'n'  ||  opt  >=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r')    {    if(type!=  'n'  ||  opt  >=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	142	None	add
482	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
483	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
484	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
485	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  ==  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
486	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'f'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'f'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'f'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
487	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
488	[BUG]  [BUGGY]  if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  >  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
489	[BUG]  [BUGGY]  final  char  opt  =  options.toCharArray();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  options.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  options.toCharArray();	  final    char    opt    =    option.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
490	[BUG]  [BUGGY]  if(opt!=  ':')  {  if(type!=  '+'  ||  type!=  '+')  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ':')  {  if(type!=  '+'  ||  type!=  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ':')  {  if(type!=  '+'  ||  type!=  '+')  {	  if    (type!=    '.')    {    if    (type!=    '.'    ||    type!=    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
491	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
492	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt!=  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
493	[BUG]  [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  options.getOptionBuilder();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  options.getOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    OptionBuilder  abuilder  =  options.getOptionBuilder();	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
494	[BUG]  [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.create();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.create();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    OptionBuilder  abuilder  =  OptionBuilder.create();	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
495	[BUG]  [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.create(opt);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.create(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    OptionBuilder  abuilder  =  OptionBuilder.create(opt);	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
496	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  obuilder.getOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  obuilder.getOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  obuilder.getOptionBuilder(opt);	  ArgumentBuilder    abuilder    =    obuilder.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
497	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
498	[BUG]  [BUGGY]  final  char  opt  =  type.charAt(2);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  type.charAt(2);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  type.charAt(2);	  final    char    opt    =    type.charAt(1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
499	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type!=  'n'  ||  type  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  if(type!=  'n'  ||  type  >=  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    if(type!=  'n'  ||  type  >=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
500	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  final  char  type  =  opt.charAt(0);  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  final  char  type  =  opt.charAt(0);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r')    {    final  char  type  =  opt.charAt(0);	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
501	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  IllegalArgumentException  	37	1	replace
502	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt!=  'n'  ||  opt  ==  'n')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    	compilable	  [FE]  IllegalArgumentException  	37	1	replace
503	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  If(opt  >=  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'r')  {  If(opt  >=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    >=    'n'    ||    opt    ==    'r')    {    If(opt  >=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  ';'  expected	59	None	add
504	[BUG]  [BUGGY]  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '[')  {  throw  new  IllegalArgumentException( ". ");  }	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
505	[BUG]  [BUGGY]  final  char  opt  =  option.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  option.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  option.toLowerCase(Locale.ENGLISH);	  final    char    opt    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
506	[BUG]  [BUGGY]  final  char  opt  =  options.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  options.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  options.toLowerCase();	  final    char    opt    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
507	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type  >>  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
508	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  >=  't')  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  >=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  >=  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
509	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  ';'  expected	88	None	add
510	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  OptionBuilder  abuilder  =  options.getOptionBuilder();  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  OptionBuilder  abuilder  =  options.getOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt!=    'r')    {    OptionBuilder  abuilder  =  options.getOptionBuilder();	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
511	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	130	1	add
512	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	130	1	add
513	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	130	1	add
514	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException(   ".     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '[')    {    throw    new    IllegalArgumentException(   ".       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ". ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	130	1	add
515	[BUG]  [BUGGY]  if(opt!=  '[')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
516	[BUG]  [BUGGY]  final  String  type  =  option.toLowerCase(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  option.toLowerCase(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  option.toLowerCase(opt);	  final    String    type    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
517	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.toCharArray();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  type.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  type.toCharArray();	  ArgumentBuilder    abuilder    =    type.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
518	[BUG]  [BUGGY]  if(opt!=  '.')  {  if  (type!=  ':')  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.')  {  if  (type!=  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.')  {  if  (type!=  ':')  {	  if    (type!=    '.')    {    if    (type!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
519	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  IllegalArgumentException  	49	1	replace
520	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.'  ||  opt  ==  ':')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  IllegalArgumentException  	49	1	replace
521	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  '.'  ||  opt  ==  '+')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
522	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '.'  ||  opt  ==  '+')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
523	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  '.'  ||  opt  ==  '@')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
524	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '.'  ||  opt  ==  '@')  {	  if(opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	49	1	replace
525	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  new  OptionBuilder();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  new  OptionBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  new  OptionBuilder();	  ArgumentBuilder    abuilder    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
526	[BUG]  [BUGGY]  parent!=  null  &&  opt  ==  parent.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  parent!=  null  &&  opt  ==  parent.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	parent!=  null  &&  opt  ==  parent.parent)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    parent    ==    opt.parent)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
527	[BUG]  [BUGGY]  if(opt!=  null)  {  parent!=  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  null)  {  parent!=  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  null)  {  parent!=  null  &&  parent  ==  opt.parent)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    parent    ==    opt.parent)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
528	[BUG]  [BUGGY]  If(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  If(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	If(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    If(opt!=    'n'    ||    opt    ==    'r')    {    	non-compiled	[CE]  ';'  expected	78	None	replace
529	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  ';')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    If(opt!=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	78	1	replace
530	[BUG]  [BUGGY]  if(opt!=  ';')  {  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ';')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    If(opt!=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	78	1	replace
531	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt    >=    '[')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
532	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  parent  ==  null  ||  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	parent  ==  null  ||  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
533	[BUG]  [BUGGY]  final  parent  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  parent  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  parent  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
534	[BUG]  [BUGGY]  final  char  opt  =  type.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  type.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  type.toLowerCase(Locale.ENGLISH);	  final    char    opt    =    type.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
535	[BUG]  [BUGGY]  final  char  opt  =  type.toUpperCase();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  type.toUpperCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  type.toUpperCase();	  final    char    opt    =    type.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
536	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(opt);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(opt);	  OptionBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
537	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(option!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-')  {  if(option!=  '-')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=    '-')    {    if(option!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
538	[BUG]  [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
539	[BUG]  [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '-')  {  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    '-')    {    OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
540	[BUG]  [BUGGY]  final  char  opt  =  getValue();  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  =  getValue();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  =  getValue();	          if(opt!=    '[')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
541	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	127	1	replace
542	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	127	1	replace
543	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.toString();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  type.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  type.toString();	  ArgumentBuilder    abuilder    =    type.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
544	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  'n'  ||  type  ==  'r')  {	  if(type!=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	143	1	replace
545	[BUG]  [BUGGY]  if(opt!=  'n'  ||  type  ==  'r')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  type  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n'  ||  type  ==  'r')  {	  if(type!=    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  IllegalArgumentException  	143	1	replace
546	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt!=  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    	compilable	  [FE]  IllegalArgumentException  	123	1	replace
547	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt!=  't')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt!=  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt!=  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt!=    't')    {    	compilable	  [FE]  IllegalArgumentException  	123	1	replace
548	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
549	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
550	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
551	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	58	1	replace
552	[BUG]  [BUGGY]  static  final  String  opt  =  option.toCharArray();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  opt  =  option.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  opt  =  option.toCharArray();	  final    char    opt    =    option.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
553	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	33	1	replace
554	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	33	1	replace
555	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(1);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(1);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(0);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
556	[BUG]  [BUGGY]  final  String  opt  =  opt.toUpperCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  opt.toUpperCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  opt.toUpperCase();	  final    String    opt    =    opt.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
557	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  If(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  If(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    If(type!=  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  ';'  expected	133	None	add
558	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '['  &&  opt!=  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
559	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '['  &&  opt!=  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
560	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  options.createOptionBuilder();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  options.createOptionBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  options.createOptionBuilder();	  ArgumentBuilder    abuilder    =    options.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
561	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '.')  {  if(abuilder!=  null)  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
562	[BUG]  [BUGGY]  if(type!=  '.')  {  if(abuilder!=  null)  {  abuilder.reset();  }  [FE]  IllegalArgumentException  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '.')  {  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '.')  {  if(abuilder!=  null)  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
563	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*')  {  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type!=  '*')  {  if(abuilder!=  null)  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
564	[BUG]  [BUGGY]  if(type!=  '*')  {  if(abuilder!=  null)  {  abuilder.reset();  }  [FE]  IllegalArgumentException  [FE]      ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  '*')  {  if(abuilder!=  null)  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=  '*')  {  if(abuilder!=  null)  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
565	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	91	1	replace
566	[BUG]  [BUGGY]  if(opt!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  IllegalArgumentException  	91	1	replace
567	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.')  {  gbuilder.setOption(opt);  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.')  {  gbuilder.setOption(opt);  }	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
568	[BUG]  [BUGGY]  if(opt!=  'n')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n')  {  gbuilder.setOption(opt);  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n')  {  gbuilder.setOption(opt);  }	  gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
569	[BUG]  [BUGGY]  if(opt!=  ':')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  ':')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  ':')  {  abuilder.reset();  }	  if(opt!=    ']')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
570	[BUG]  [BUGGY]  final  String  type  =  gbuilder.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  gbuilder.trim().toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  gbuilder.trim().toLowerCase();	  final    String    type    =    opt.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
571	[BUG]  [BUGGY]  final  String  opt  =  type.toUpperCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  type.toUpperCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  type.toUpperCase();	  final    char    opt    =    type.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
572	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
573	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  abuilder.withValidator(opt);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  abuilder.withValidator(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '['  ||  opt!=  ']')  {  abuilder.withValidator(opt);  }	  if(opt!=    '[')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
574	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.withValidator(opt);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
575	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	35	1	replace
576	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	35	1	replace
577	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	35	1	replace
578	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  >=  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	35	1	replace
579	[BUG]  [BUGGY]  if  (opt!=  '.')  {  If  (opt!=  '.')  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if  (opt!=  '.')  {  If  (opt!=  '.')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if    (opt!=    '.')    {    If  (opt!=  '.')  {	  	non-compiled	[CE]  ';'  expected	46	None	add
580	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt,  required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt,  required);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt,  required);	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
581	[BUG]  [BUGGY]  if(opt!=  'n')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder,  opt);  }	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
582	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
583	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
584	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  If(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  If(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    If(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  ';'  expected	38	None	add
585	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    }    if(opt    >=    '[')    {    abuilder.reset();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
586	[BUG]  [BUGGY]  final  String  opt  =  options.charAt(0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  opt  =  options.charAt(0);  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  opt  =  options.charAt(0);	  final    char    opt    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
587	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
588	[BUG]  [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  type  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt!=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt    >=    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
589	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
590	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  ArgumentBuilder();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  new  ArgumentBuilder();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  new  ArgumentBuilder();	  ArgumentBuilder    abuilder    =    new    StringBuilder();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
591	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type  >>  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type!=  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  if(type  >>  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type!=    'n'    ||    type    ==    'r'    ||    opt    ==    't')    {    if(type  >>  'n'  ||  type  ==  'r'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
592	[BUG]  [BUGGY]  final  String  type  =  option.toString();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  option.toString();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  option.toString();	  final    String    type    =    option.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
593	[BUG]  [BUGGY]  Argument  argument  =  opt.toLowerCase();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  Argument  argument  =  opt.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	Argument  argument  =  opt.toLowerCase();	  Argument    argument    =    opt.create();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
594	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  If(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  If(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    't')    {    If(opt  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  ';'  expected	34	None	add
595	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.'  &&  opt!=  '@')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '.'  &&  opt!=  '@')  {	  if    (opt!=    '.')    {    	compilable	  [FE]  IllegalArgumentException  	47	1	replace
596	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '@')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.'  &&  opt!=  '@')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.'  &&  opt!=  '@')  {	  if    (opt!=    '.')    {    	compilable	  [FE]  IllegalArgumentException  	47	1	replace
597	[BUG]  [BUGGY]  static  final  String  opt  =  type.toCharArray();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  static  final  String  opt  =  type.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	static  final  String  opt  =  type.toCharArray();	  final    char    opt    =    type.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
598	[BUG]  [BUGGY]  if(opt!=  '.')  {  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '.')  {  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '.')  {  ArgumentBuilder  abuilder  =  gbuilder.create(opt);  }	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
599	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt!=  '-'  &&  opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  IllegalArgumentException  	105	1	replace
600	[BUG]  [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  '-'  &&  opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  IllegalArgumentException  	105	1	replace
601	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.re  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  System.arraycopy(opt,  0,  abuilder,  0,  opt);  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.re  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt!=    '[')    {    abuilder.reset();    System.arraycopy(opt,    0,    abuilder,    0,    opt);    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.re	  	non-compiled	[CE]  not  a  statement	30	None	add
602	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'N'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  if(opt  ==  'N'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    if(opt  ==  'N'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
603	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    't')    {    If(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  	non-compiled	[CE]  ';'  expected	32	None	add
604	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
605	[BUG]  [BUGGY]  if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(type  ==  'n'  ||  opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
606	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
607	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  't'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
608	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'a'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	if(opt  ==  'n'  ||  opt  ==  'a'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
609	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'a'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'a'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt  ==  'n'  ||  opt  ==  'a'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    't')    {    	compilable	  [FE]  ComparisonFailure  	89	1	replace
610	[BUG]  [BUGGY]  abuilder  =  gbuilder.create();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  abuilder  =  gbuilder.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	abuilder  =  gbuilder.create();	  ArgumentBuilder    abuilder    =    opt.create();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
611	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >>  '[')  {  abuilder.reset();  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >>  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  if(opt  >>  '[')  {  abuilder.reset();  }	  	non-compiled	[CE]  incompatible  types	28	None	add
612	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
613	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        abuilder.reset();        }        if(opt    >=    '[')    {    abuilder.reset();    }    if(opt  >=  '[')  {  abuilder.reset();  }  if(opt  >=  '[')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
614	[BUG]  [BUGGY]  if(opt!=  'n')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt!=  'n')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt!=  'n')  {  ArgumentBuilder  abuilder  =  new  GroupBuilder(gbuilder);  }	  ArgumentBuilder    abuilder    =    new    GroupBuilder(gbuilder);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
615	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.toCharArray();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.toCharArray();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.toCharArray();	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
616	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  gbuilder.toLowerCase();	  ArgumentBuilder    abuilder    =    gbuilder.toString();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
617	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'N'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt  ==  'N'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt  ==  'N'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
618	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	if(opt    ==    'n'    ||    opt    ==    'r'    ||    opt    ==    'n'    ||    opt    ==    'n')    {    if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
619	[BUG]  [BUGGY]  final  String  type  =  opt!=  null?  opt.toLowerCase()  :  opt.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  String  type  =  opt!=  null?  opt.toLowerCase()  :  opt.toLowerCase();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  String  type  =  opt!=  null?  opt.toLowerCase()  :  opt.toLowerCase();	  final    String    type    =    opt.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
620	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create();	  OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
621	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	add	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
622	[BUG]  [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]          if(opt!=    '[')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '[')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	                if(opt!=        '[')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '[')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  if(opt  >=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	86	1	add
623	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  obuilder.create();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  ArgumentBuilder  abuilder  =  obuilder.create();  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	ArgumentBuilder  abuilder  =  obuilder.create();	  ArgumentBuilder    abuilder    =    obuilder.getOptionBuilder();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
624	[BUG]  [BUGGY]  final  char  opt  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  final  char  opt  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	final  char  opt  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	40	None	replace
625	[BUG]  [BUGGY]  If(opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;      [BUGGY]  If(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	105	105	1	replace	If(opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt!=    'n'    ||    opt    ==    'r')    {    If(opt!=    'n'    ||    opt    ==    'r')    {    	non-compiled	[CE]  ';'  expected	78	None	replace
