bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  ||  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	106	1	replace
2	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	106	1	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  &&  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	106	1	replace
4	[BUG]  [BUGGY]  if(opt  ==  '['  &&  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  &&  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	106	1	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  ||  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	106	1	replace
6	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  ||  opt!=  ']')  {	  if(opt!=    '['    &&    opt!=    ']')    {    	compilable	  [FE]  ComparisonFailure  	106	1	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	77	1	replace
8	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(required)  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	77	1	replace
9	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
10	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.addValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.addValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(options!=  null)  {  if(type!=  '[')  {  abuilder.addValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
11	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  if(opt!=  '.'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  if(opt!=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '+')    {    if(opt!=  '.'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
12	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  if(opt  ==  '.'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '+')    {    if(opt  ==  '.'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
13	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  if(opt  >=  '.'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  if(opt  >=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '+')    {    if(opt  >=  '.'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
14	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  If(opt!=  '.'  ||  opt  ==  '+')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  If(opt!=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '+')    {    If(opt!=  '.'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  ';'  expected	58	None	add
15	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  type);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  type);	  gbuilder.addArgument(abuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
16	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  type);	  gbuilder.addArgument(abuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
17	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt,  required);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt,  required);	  gbuilder.addArgument(abuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
18	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  required);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  required);	  gbuilder.addArgument(abuilder,    opt);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type!=  '.')  {	  if(opt!=    '*')    {    if(opt    >=    '*')    {    	compilable	  [FE]  ComparisonFailure  	63	1	replace
20	[BUG]  [BUGGY]  if(type!=  '.')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '.')  {	  if(opt!=    '*')    {    if(opt    >=    '*')    {    	compilable	  [FE]  ComparisonFailure  	63	1	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	50	1	replace
22	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	50	1	replace
23	[BUG]  [BUGGY]  if(type!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }	  if(opt!=    '[')    {    obuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
24	[BUG]  [BUGGY]  if(obuilder!=  null)  {  if(opt!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(obuilder!=  null)  {  if(opt!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(obuilder!=  null)  {  if(opt!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }	  if(opt!=    '[')    {    obuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  ||  opt  ==  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
26	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  ||  opt  ==  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '/'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '/'  ||  opt  ==  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
28	[BUG]  [BUGGY]  if(opt  ==  '/'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '/'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '/'  ||  opt  ==  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '*'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '*'  ||  opt!=  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
30	[BUG]  [BUGGY]  if(opt  ==  '*'  ||  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '*'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '*'  ||  opt!=  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
31	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt.toString());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt.toString());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt.toString());	  gbuilder.addArgument(abuilder,    opt.create());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
32	[BUG]  [BUGGY]  obuilder.withOption(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.withOption(option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.withOption(option);	  obuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
33	[BUG]  [BUGGY]  if(opt!=  '.')  {  obuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  obuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  obuilder.withOption(opt);  }	  obuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
34	[BUG]  [BUGGY]  obuilder.withOption(type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.withOption(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.withOption(type);	  obuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
35	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt!=  '+'  ||  opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt!=  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '.')    {    if(opt!=  '+'  ||  opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
36	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt  ==  '+'  ||  opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt  ==  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '.')    {    if(opt  ==  '+'  ||  opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
37	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt  >=  '+'  ||  opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt  >=  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '.')    {    if(opt  >=  '+'  ||  opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
38	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt  >>  '+'  ||  opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  if(opt  >>  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '.')    {    if(opt  >>  '+'  ||  opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
39	[BUG]  [BUGGY]  if(opt  ==  '-')  {  if(opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-')  {  if(opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '-')    {    if(opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
40	[BUG]  [BUGGY]  if(opt  ==  '-')  {  if(opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-')  {  if(opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '-')    {    if(opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
41	[BUG]  [BUGGY]  if(opt  ==  '-')  {  if(opt  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-')  {  if(opt  >=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '-')    {    if(opt  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
42	[BUG]  [BUGGY]  if(opt  ==  '-')  {  If(opt  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-')  {  If(opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '-')    {    If(opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	70	None	add
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '+'  ||  opt  ==  '-')  {	  if(opt!=    '+'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	5	1	replace
44	[BUG]  [BUGGY]  if(opt  >=  '+'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '+'  ||  opt  ==  '-')  {	  if(opt!=    '+'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	5	1	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '+'  ||  opt!=  '-')  {	  if(opt!=    '+'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	5	1	replace
46	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+'  ||  opt!=  '-')  {	  if(opt!=    '+'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	5	1	replace
47	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
48	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
49	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	47	None	add
50	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
51	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
52	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	47	None	add
53	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
54	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
55	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
56	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
57	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(option);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
58	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt!=  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
59	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  >=  '['  &&  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  >=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt  >=  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
60	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  ==  '['  &&  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt  ==  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt  ==  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
61	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  >=  ']')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  >=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt!=  '['  &&  opt  >=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
62	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    if(opt!=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
63	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.setOption(type);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.setOption(type);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.setOption(type);  }	  gbuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  ||  opt  ==  '-')  {	  if(opt    >=    '.')    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
65	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  ||  opt  ==  '-')  {	  if(opt    >=    '.')    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
66	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt,  opt.getValue());  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt,  opt.getValue());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(opt,  opt.getValue());  }	  gbuilder.addArgument(abuilder,    opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
67	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt.getValue()  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt.getValue()  +  1);	  gbuilder.addArgument(abuilder,    opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
68	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!='')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
69	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!='')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
70	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  if(opt  ==  '+'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  if(opt  ==  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+'    ||    opt    ==    '-')    {    if(opt  ==  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
71	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  if(opt  ==  '+'  ||  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  if(opt  ==  '+'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+'    ||    opt    ==    '-')    {    if(opt  ==  '+'  ||  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
72	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  if(opt!=  '+'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  if(opt!=  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+'    ||    opt    ==    '-')    {    if(opt!=  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
73	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  If(opt  ==  '+'  ||  opt  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  If(opt  ==  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+'    ||    opt    ==    '-')    {    If(opt  ==  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	6	None	add
74	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
76	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( " ");  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( " ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	aughtExceptionHandler.throwAsUncheckedException( " ");	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
77	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	aughtExceptionHandler.throwInternal();	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
78	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
79	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
80	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
81	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
82	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
83	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
84	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
85	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
86	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
87	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
88	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
89	[BUG]  [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(required)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
90	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
91	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
92	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt!=  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt!=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
93	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  >=  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  >=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt  >=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
94	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  ==  '['  &&  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  if(opt  ==  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    if(opt  ==  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
95	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  If(opt!=  '['  &&  opt  ==  ']')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  If(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt    ==    ']')    {    If(opt!=  '['  &&  opt  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	107	None	add
96	[BUG]  [BUGGY]  abuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.setOption(option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setOption(option);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
97	[BUG]  [BUGGY]  if(opt!=  '.')  {  gbuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  gbuilder.withOption(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  gbuilder.withOption(opt);  }	  gbuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
98	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.withOption(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.withOption(opt);  }	  gbuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
99	[BUG]  [BUGGY]  gbuilder.withOption(type);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.withOption(type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.withOption(type);	  gbuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
100	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.')  {  if(opt  >=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    >=    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
101	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.')  {  if(opt!=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    >=    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
102	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.')  {  if(opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    >=    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
103	[BUG]  [BUGGY]  if(opt  >=  '.')  {  if(opt  >>  '.')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.')  {  if(opt  >>  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    >=    '.')    {    if(opt  >>  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  ';')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	85	1	replace
105	[BUG]  [BUGGY]  if(opt!=  ';')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ';')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	85	1	replace
106	[BUG]  [BUGGY]  If(opt  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  If(opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	If(opt  ==  '.')  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ';'  expected	85	None	replace
107	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt!=  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt!=  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
108	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  ==  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  ==  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt  ==  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
109	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  >=  '['  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  if(opt  >=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    if(opt  >=  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
110	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  If(opt!=  '['  ||  opt  ==  ':')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  If(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ':')    {    If(opt!=  '['  ||  opt  ==  ':')  {	  	non-compiled	[CE]  ';'  expected	103	None	add
111	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
112	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
113	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
114	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
115	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
116	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	51	None	add
117	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
118	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
119	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
120	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
121	[BUG]  [BUGGY]  abuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.setOption(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setOption(type);	  abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
122	[BUG]  [BUGGY]  abuilder.setOption(required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.setOption(required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setOption(required);	  abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '-'  ||  opt  ==  '+')  {	  if(opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
124	[BUG]  [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '-'  ||  opt  ==  '+')  {	  if(opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  &&  opt  ==  '+')  {	  if(opt!=    '.'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	59	1	replace
126	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  &&  opt  ==  '+')  {	  if(opt!=    '.'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	59	1	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  ||  opt!=  '+')  {	  if(opt!=    '.'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	59	1	replace
128	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  ||  opt!=  '+')  {	  if(opt!=    '.'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	59	1	replace
129	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  if(opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
130	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  if(opt!=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
131	[BUG]  [BUGGY]  if(opt  ==  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  if(opt  >=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
132	[BUG]  [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '.')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.')    {    If(opt  ==  '.')  {	  	non-compiled	[CE]  ';'  expected	54	None	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	104	1	replace
134	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	104	1	replace
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  &&  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	104	1	replace
136	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  &&  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	104	1	replace
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	104	1	replace
138	[BUG]  [BUGGY]  if(opt  >=  '['  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '['  ||  opt  ==  ':')  {	  if(opt!=    '['    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	104	1	replace
139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  '*')  {	  if(opt!=    'n'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	124	1	replace
140	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  '*')  {	  if(opt!=    'n'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	124	1	replace
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  'n'  ||  opt  ==  '*')  {	  if(opt!=    'n'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	124	1	replace
142	[BUG]  [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  'n'  ||  opt  ==  '*')  {	  if(opt!=    'n'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	124	1	replace
143	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt!=  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt!=  '*')  {	  if(opt!=    'n'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	124	1	replace
144	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  '*')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt!=  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt!=  '*')  {	  if(opt!=    'n'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	124	1	replace
145	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  if(opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '-')    {    if(opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
146	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  if(opt  >=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '-')    {    if(opt  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
147	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  if(opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '-')    {    if(opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
148	[BUG]  [BUGGY]  if(opt!=  '-')  {  if(opt  >>  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  if(opt  >>  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '-')    {    if(opt  >>  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  &&  opt  ==  ']')  {	  if(opt    ==    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	28	1	replace
150	[BUG]  [BUGGY]  if(opt  ==  '['  &&  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  &&  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  &&  opt  ==  ']')  {	  if(opt    ==    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	28	1	replace
151	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  type.create());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  type.create());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  type.create());	  gbuilder.addArgument(abuilder,    type.create());    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
152	[BUG]  [BUGGY]  gbuilder.addArgument(type,  abuilder.create());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(type,  abuilder.create());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(type,  abuilder.create());	  gbuilder.addArgument(abuilder,    type.create());    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
153	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  type.toString());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  type.toString());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  type.toString());	  gbuilder.addArgument(abuilder,    type.create());    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
154	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  if(opt!=  '.'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    ':')    {    if(opt!=  '.'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
155	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  if(opt  ==  '.'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    ':')    {    if(opt  ==  '.'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
156	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  if(opt  >=  '.'  ||  opt  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  if(opt  >=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    ':')    {    if(opt  >=  '.'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
157	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  If(opt!=  '.'  ||  opt  ==  ':')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  If(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    ':')    {    If(opt!=  '.'  ||  opt  ==  ':')  {	  	non-compiled	[CE]  ';'  expected	110	None	add
158	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	76	1	add
159	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	76	1	add
160	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	76	None	add
161	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
162	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	76	None	add
163	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.with  [CE]  not  a  statement  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.with  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.with	  	non-compiled	[CE]  not  a  statement	76	None	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  ||  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
165	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  ||  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  &&  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
167	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  &&  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  &&  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
169	[BUG]  [BUGGY]  if(opt  ==  '.'  &&  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  &&  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  &&  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
170	[BUG]  [BUGGY]  abuilder.withMaximum(1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withMaximum(1);	  if(opt!='')    {    abuilder.withMaximum(1);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
171	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withMaximum(1);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.withMaximum(1);  }	  if(opt!='')    {    abuilder.withMaximum(1);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
172	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.withMinimum(1);  }	  if(opt!='')    {    abuilder.withMaximum(1);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '+'  ||  opt  ==  '.')  {	  if(opt!=    '+'    ||    opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	98	1	replace
174	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '.')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+'  ||  opt  ==  '.')  {	  if(opt!=    '+'    ||    opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	98	1	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '+'  ||  opt  ==  '.')  {	  if(opt!=    '+'    ||    opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	98	1	replace
176	[BUG]  [BUGGY]  if(opt  >=  '+'  ||  opt  ==  '.')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '+'  ||  opt  ==  '.')  {	  if(opt!=    '+'    ||    opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	98	1	replace
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt!=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '+'  ||  opt!=  '.')  {	  if(opt!=    '+'    ||    opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	98	1	replace
178	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt!=  '.')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt!=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+'  ||  opt!=  '.')  {	  if(opt!=    '+'    ||    opt    ==    '.')    {    	compilable	  [FE]  ComparisonFailure  	98	1	replace
179	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt!=  '+'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt!=  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '-')    {    if(opt!=  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
180	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt  ==  '+'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt  ==  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '-')    {    if(opt  ==  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
181	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt  >=  '+'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt  >=  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '-')    {    if(opt  >=  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
182	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt  >>  '+'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  if(opt  >>  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '-')    {    if(opt  >>  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '-'  ||  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
184	[BUG]  [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-'  ||  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
185	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.create(),  type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.create(),  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.create(),  type);	  gbuilder.addArgument(abuilder.create(),    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
186	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.create(),  opt,  required);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.create(),  opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.create(),  opt,  required);	  gbuilder.addArgument(abuilder.create(),    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
187	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.create(),  option);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.create(),  option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.create(),  option);	  gbuilder.addArgument(abuilder.create(),    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
188	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.create(),  opt  +  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.create(),  opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.create(),  opt  +  1);	  gbuilder.addArgument(abuilder.create(),    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
189	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
190	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withValidator(validator(opt));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withValidator(validator(opt));	  if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
191	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
193	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n'  ||  opt  ==  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt!=  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
195	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt!=  'r')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
196	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '['    ||    opt    ==    ']')    {    if(opt  ==  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
197	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt!=  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '['    ||    opt    ==    ']')    {    if(opt  ==  '['  ||  opt!=  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
198	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt!=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '['    ||    opt    ==    ']')    {    if(opt!=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
199	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt  >=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '['    ||    opt    ==    ']')    {    if(opt  >=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
200	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
201	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
202	[BUG]  [BUGGY]  abuilder.set();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.set();  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.set();	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
203	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt.create());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt.create());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(opt.create());  }	  gbuilder.addArgument(opt.create());    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
204	[BUG]  [BUGGY]  gbuilder.addArgument(opt.toCharArray());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt.toCharArray());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.toCharArray());	  gbuilder.addArgument(opt.create());    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  &&  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
206	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  &&  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
207	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
208	[BUG]  [BUGGY]  if(opt  >=  '.'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
209	[BUG]  [BUGGY]  if(opt  ==  '+')  {  if(opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+')  {  if(opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+')    {    if(opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
210	[BUG]  [BUGGY]  if(opt  ==  '+')  {  if(opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+')  {  if(opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+')    {    if(opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
211	[BUG]  [BUGGY]  if(opt  ==  '+')  {  if(opt  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+')  {  if(opt  >=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+')    {    if(opt  >=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
212	[BUG]  [BUGGY]  if(opt  ==  '+')  {  If(opt  ==  '+')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+')  {  If(opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '+')    {    If(opt  ==  '+')  {	  	non-compiled	[CE]  ';'  expected	8	None	add
213	[BUG]  [BUGGY]  obuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.setOption(option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.setOption(option);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
214	[BUG]  [BUGGY]  obuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.setOption(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.setOption(type);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type!=  '[')  {	  if(opt!=    '[')    {    if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
216	[BUG]  [BUGGY]  if(type!=  '[')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {	  if(opt!=    '[')    {    if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
217	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type  ==  '-')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	71	1	replace
218	[BUG]  [BUGGY]  if(type  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type  ==  '-')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	71	1	replace
219	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt!=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt!=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
220	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt  ==  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
221	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt  >=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
222	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >>  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  if(opt  >>  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    if(opt  >>  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
223	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt!=  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt!=  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
224	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  ==  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  ==  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt  ==  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
225	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  >=  '.'  ||  opt  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  if(opt  >=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    if(opt  >=  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
226	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  If(opt!=  '.'  ||  opt  ==  '-')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  If(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    ||    opt    ==    '-')    {    If(opt!=  '.'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	56	None	add
227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '-'  ||  opt  ==  '-')  {	  if(opt    ==    '+'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
228	[BUG]  [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '-'  ||  opt  ==  '-')  {	  if(opt    ==    '+'    ||    opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
229	[BUG]  [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  if(opt  ==  '*'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  if(opt  ==  '*'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*'    ||    opt    ==    '+')    {    if(opt  ==  '*'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
230	[BUG]  [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  if(opt  ==  '*'  ||  opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  if(opt  ==  '*'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*'    ||    opt    ==    '+')    {    if(opt  ==  '*'  ||  opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
231	[BUG]  [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  if(opt!=  '*'  ||  opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  if(opt!=  '*'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*'    ||    opt    ==    '+')    {    if(opt!=  '*'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
232	[BUG]  [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  If(opt  ==  '*'  ||  opt  ==  '+')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  If(opt  ==  '*'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*'    ||    opt    ==    '+')    {    If(opt  ==  '*'  ||  opt  ==  '+')  {	  	non-compiled	[CE]  ';'  expected	72	None	add
233	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt!=  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
234	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  >=  '.'  &&  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  >=  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt  >=  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
235	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  ==  '.'  &&  opt!=  '-')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt  ==  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt  ==  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
236	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  if(opt!=  '.'  &&  opt  >=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    if(opt!=  '.'  &&  opt  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
237	[BUG]  [BUGGY]  if(opt!=  '.')  {  If(opt  ==  '+')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  If(opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  If(opt  ==  '+')  {	  if(opt!=    '+')    {    If(opt!=    '+')    {    	non-compiled	[CE]  ';'  expected	93	None	replace
238	[BUG]  [BUGGY]  if(opt!=  '+')  {  If(opt  ==  '+')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+')  {  If(opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '+')  {  If(opt  ==  '+')  {	  if(opt!=    '+')    {    If(opt!=    '+')    {    	non-compiled	[CE]  ';'  expected	93	None	replace
239	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  type.getValue());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  type.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  type.getValue());	  gbuilder.addArgument(abuilder,    type.getValue());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
240	[BUG]  [BUGGY]  gbuilder.addArgument(type,  abuilder.getValue());  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(type,  abuilder.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(type,  abuilder.getValue());	  gbuilder.addArgument(abuilder,    type.getValue());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
241	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  type.toCharArray());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  type.toCharArray());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  type.toCharArray());	  gbuilder.addArgument(abuilder,    type.getValue());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
242	[BUG]  [BUGGY]  abuilder.withOption(opt,  type);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(opt,  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(opt,  type);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
243	[BUG]  [BUGGY]  abuilder.withOption(type,  required);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(type,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(type,  required);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
244	[BUG]  [BUGGY]  abuilder.withOption(option,  required);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(option,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(option,  required);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
245	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt,  abuilder.create());  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt,  abuilder.create());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(opt,  abuilder.create());  }	  gbuilder.addArgument(opt,    abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
246	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
247	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
248	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(option);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
249	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.addValidator(validator(type));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  abuilder.addValidator(validator(type));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  abuilder.addValidator(validator(type));  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
250	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  abuilder.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  abuilder.getValue()  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  abuilder.getValue()  +  1);	  gbuilder.addArgument(opt,    abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
251	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  abuilder.getValue(),  required);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  abuilder.getValue(),  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  abuilder.getValue(),  required);	  gbuilder.addArgument(opt,    abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  ||  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	113	1	replace
253	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  ||  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	113	1	replace
254	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  &&  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	113	1	replace
255	[BUG]  [BUGGY]  if(opt  ==  '.'  &&  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  &&  opt!=  '-')  {	  if(opt!=    '.'    &&    opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	113	1	replace
256	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.addValidator(validator(opt),  type);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  abuilder.addValidator(validator(opt),  type);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.addValidator(validator(opt),  type);  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(opt),    type);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
257	[BUG]  [BUGGY]  abuilder.addValidator(validator(opt),  type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.addValidator(validator(opt),  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addValidator(validator(opt),  type);	  if(opt!=    '[')    {    abuilder.addValidator(validator(opt),    type);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
258	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  type,  required);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  type,  required);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  type,  required);  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(opt),    type);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
259	[BUG]  [BUGGY]  abuilder.addArgument(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.addArgument(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addArgument(opt);	  abuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
260	[BUG]  [BUGGY]  abuilder.addValidator(opt);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.addValidator(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addValidator(opt);	  abuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
261	[BUG]  [BUGGY]  abuilder.addValue(opt);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.addValue(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addValue(opt);	  abuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
262	[BUG]  [BUGGY]  abuilder.withArgument(opt);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withArgument(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withArgument(opt);	  abuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  ';')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  ';')  {	  if(opt    ==    '*')    {    If(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	33	1	replace
264	[BUG]  [BUGGY]  if(opt  ==  ';')  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  ';')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  ';')  {	  if(opt    ==    '*')    {    If(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	33	1	replace
265	[BUG]  [BUGGY]  If(opt  ==  ';')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  If(opt  ==  ';')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	If(opt  ==  ';')  {	  if(opt    ==    '*')    {    If(opt    ==    '*')    {    	non-compiled	[CE]  ';'  expected	33	None	replace
266	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  argument);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  argument);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  argument);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
267	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  opt);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(argument,  opt);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
268	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  type);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(argument,  type);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '['  ||  opt  ==  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	26	1	replace
270	[BUG]  [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '['  ||  opt  ==  ']')  {	  if(opt!=    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	26	1	replace
271	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
272	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt  ==  'n'  ||  opt!=  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    if(opt  ==  'n'  ||  opt!=  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
273	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  if(opt!=  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    if(opt!=  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
274	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  If(opt  ==  'n'  ||  opt  ==  'r')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  If(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    'n'    ||    opt    ==    'r')    {    If(opt  ==  'n'  ||  opt  ==  'r')  {	  	non-compiled	[CE]  ';'  expected	78	None	add
275	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  &&  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  &&  opt  ==  '*')  {	  if(opt    ==    '.'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
276	[BUG]  [BUGGY]  if(opt  ==  '.'  &&  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  &&  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  &&  opt  ==  '*')  {	  if(opt    ==    '.'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
277	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  ||  opt  ==  '*')  {	  if(opt    ==    '.'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
278	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  ||  opt  ==  '*')  {	  if(opt    ==    '.'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
279	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  if(opt  ==  '.'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  if(opt  ==  '.'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.'    ||    opt    ==    '*')    {    if(opt  ==  '.'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
280	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  if(opt  ==  '.'  ||  opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  if(opt  ==  '.'  ||  opt!=  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.'    ||    opt    ==    '*')    {    if(opt  ==  '.'  ||  opt!=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
281	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  if(opt!=  '.'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  if(opt!=  '.'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.'    ||    opt    ==    '*')    {    if(opt!=  '.'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
282	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  If(opt  ==  '.'  ||  opt  ==  '*')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  If(opt  ==  '.'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '.'    ||    opt    ==    '*')    {    If(opt  ==  '.'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  ';'  expected	116	None	add
283	[BUG]  [BUGGY]  abuilder.withOption(type)  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(type)  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(type)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	118	None	replace
284	[BUG]  [BUGGY]  abuilder.withOption(option)  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(option)  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(option)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	118	None	replace
285	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt)  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt)  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ';')  {  abuilder.withOption(opt)  }	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	118	None	replace
286	[BUG]  [BUGGY]  if(opt  ==  '[')  {  if(opt  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  if(opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '[')    {    if(opt  ==  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
287	[BUG]  [BUGGY]  if(opt  ==  '[')  {  if(opt!=  '[')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  if(opt!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '[')    {    if(opt!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
288	[BUG]  [BUGGY]  if(opt  ==  '[')  {  if(opt  >=  '[')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  if(opt  >=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '[')    {    if(opt  >=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
289	[BUG]  [BUGGY]  if(opt  ==  '[')  {  If(opt  ==  '[')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  If(opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '[')    {    If(opt  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	23	None	add
290	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
291	[BUG]  [BUGGY]  if(opt!=  '[')  {  opt.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  opt.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  opt.reset();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
292	[BUG]  [BUGGY]  if(opt  ==  '[')  {  opt.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  opt.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  opt.reset();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
293	[BUG]  [BUGGY]  abuilder.reset();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.reset();  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.reset();	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
294	[BUG]  [BUGGY]  if(opt!=  '[')  {  opt.reset();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  opt.reset();  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  opt.reset();  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
295	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
296	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(type);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
297	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt  +  1);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
298	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.withOption(type);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  abuilder.withOption(type);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  abuilder.withOption(type);  }	  abuilder.withOption(type);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
299	[BUG]  [BUGGY]  abuilder.withOption(options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(options);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(options);	  abuilder.withOption(type);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type  ==  '.')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
301	[BUG]  [BUGGY]  if(type  ==  '.')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type  ==  '.')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
302	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.withOption(opt);  }	  if(opt!='')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
303	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '.')  {  abuilder.withOption(opt);  }	  if(opt!='')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
304	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  if(opt!=  'n'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  if(opt!=  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    'n'    ||    opt    ==    '*')    {    if(opt!=  'n'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
305	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  if(opt  ==  'n'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  if(opt  ==  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    'n'    ||    opt    ==    '*')    {    if(opt  ==  'n'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
306	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  if(opt  >=  'n'  ||  opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  if(opt  >=  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    'n'    ||    opt    ==    '*')    {    if(opt  >=  'n'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
307	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  If(opt!=  'n'  ||  opt  ==  '*')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  If(opt!=  'n'  ||  opt  ==  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    'n'    ||    opt    ==    '*')    {    If(opt!=  'n'  ||  opt  ==  '*')  {	  	non-compiled	[CE]  ';'  expected	123	None	add
308	[BUG]  [BUGGY]  if(type!=  '[')  {  obuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  obuilder.addValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  obuilder.addValidator(validator(opt));  }	  if(opt!=    '[')    {    obuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
309	[BUG]  [BUGGY]  if(opt  ==  '[')  {  obuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  obuilder.addValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  obuilder.addValidator(validator(opt));  }	  if(opt!=    '[')    {    obuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
310	[BUG]  [BUGGY]  gbuilder.addArgument(type);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(type);	  gbuilder.addArgument(opt);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
311	[BUG]  [BUGGY]  gbuilder.addValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addValidator(validator(opt));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addValidator(validator(opt));	  gbuilder.addArgument(opt);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
312	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  type);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.getValue(),  type);	  gbuilder.addArgument(abuilder.getValue(),    opt);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
313	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  opt,  required);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  opt,  required);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.getValue(),  opt,  required);	  gbuilder.addArgument(abuilder.getValue(),    opt);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
314	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(abuilder.getValue(),  opt);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(abuilder.getValue(),  opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(abuilder.getValue(),  opt);  }	  gbuilder.addArgument(abuilder.getValue(),    opt);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
315	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  preferred);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  preferred);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.getValue(),  preferred);	  gbuilder.addArgument(abuilder.getValue(),    opt);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
316	[BUG]  [BUGGY]  if(opt!=  null)  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  abuilder.reset();  abuilder.withOption(opt);  }	  abuilder.reset();    abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
317	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.withOption(opt);  }	  abuilder.reset();    abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
318	[BUG]  [BUGGY]  if(opt!=  opt)  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  opt)  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  opt)  {  abuilder.reset();  abuilder.withOption(opt);  }	  abuilder.reset();    abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
319	[BUG]  [BUGGY]  if(opt!=  '')  {  If(opt  ==  '')  {  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '')  {  If(opt  ==  '')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '')  {  If(opt  ==  '')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  empty  character  literal	99	None	replace
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  ||  opt  ==  '+')  {	  if(opt    ==    '[')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
321	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  ||  opt  ==  '+')  {	  if(opt    ==    '[')    {    	compilable	  [FE]  ComparisonFailure  	24	1	replace
322	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
323	[BUG]  [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(options!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
324	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt.getValue());  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt.getValue());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(opt.getValue());  }	  gbuilder.addArgument(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
325	[BUG]  [BUGGY]  gbuilder.addArgument(type.getValue());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(type.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(type.getValue());	  gbuilder.addArgument(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
326	[BUG]  [BUGGY]  gbuilder.addArgument(opt.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt.getValue()  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.getValue()  +  1);	  gbuilder.addArgument(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
327	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.toString());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.toString());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.toString());	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
328	[BUG]  [BUGGY]  gbuilder.addValue(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addValue(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addValue(opt);	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
329	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt  ==  '[')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  If(opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  If(opt  ==  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	96	None	replace
330	[BUG]  [BUGGY]  if(type!=  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '[')  {  If(opt!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  If(opt!=  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	96	None	replace
331	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt  ==  ']')  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  If(opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  If(opt  ==  ']')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	96	None	replace
332	[BUG]  [BUGGY]  abuilder.addValidator(validator(type));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.addValidator(validator(type));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addValidator(validator(type));	  abuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
333	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.setValidator(validator(opt));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setValidator(validator(opt));	  abuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
334	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
335	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
336	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
337	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '.')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
338	[BUG]  [BUGGY]  obuilder.setOption(options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.setOption(options);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.setOption(options);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
339	[BUG]  [BUGGY]  obuilder.setOption(opt  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.setOption(opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.setOption(opt  +  1);	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
340	[BUG]  [BUGGY]  if(opt!=  ']')  {  opt.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ']')  {  opt.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ']')  {  opt.reset();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
341	[BUG]  [BUGGY]  if(opt!=  '[')  {  opt  =  null;  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  opt  =  null;  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  opt  =  null;  abuilder.reset();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
342	[BUG]  [BUGGY]  if(opt!=  '[')  {  option.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  option.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  option.reset();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
343	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	50	1	replace
344	[BUG]  [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '*')  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	50	1	replace
345	[BUG]  [BUGGY]  gbuilder.addArgument(opt.charValue());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt.charValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.charValue());	  gbuilder.addArgument(opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
346	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
347	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt  +  1);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
348	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '+'  ||  opt  ==  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
349	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+'  ||  opt  ==  '+')  {	  if(opt    ==    '*'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	73	1	replace
350	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  ||  opt  ==  '@')  {	  if(opt    ==    '.'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
351	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '@')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  ||  opt  ==  '@')  {	  if(opt    ==    '.'    ||    opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	117	1	replace
352	[BUG]  [BUGGY]  if(opt  ==  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  If(opt!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  If(opt!=  '[')  {	  if(opt!=    '[')    {    If(opt!=    '[')    {    	non-compiled	[CE]  ';'  expected	96	None	replace
353	[BUG]  [BUGGY]  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
354	[BUG]  [BUGGY]  gbuilder.addArgument(opt  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt  +  1);	  gbuilder.addArgument(opt);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
355	[BUG]  [BUGGY]  obuilder.withOption(opt)  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.withOption(opt)  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.withOption(opt)	  obuilder.withOption(opt);    	non-compiled	[CE]  ';'  expected	88	None	replace
356	[BUG]  [BUGGY]  obuilder.withOption(options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.withOption(options);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.withOption(options);	  obuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
357	[BUG]  [BUGGY]  abuilder.setOption(options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.setOption(options);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setOption(options);	  abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
358	[BUG]  [BUGGY]  abuilder.setOption(opt  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.setOption(opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setOption(opt  +  1);	  abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
359	[BUG]  [BUGGY]  if(opt!=  ']')  {  obuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ']')  {  obuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ']')  {  obuilder.reset();  abuilder.withOption(opt);  }	  if(opt!=    '[')    {    obuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
360	[BUG]  [BUGGY]  abuilder.addOption(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.addOption(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addOption(opt);	  abuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
361	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
362	[BUG]  [BUGGY]  if(opt  ==  '')  {  abuilder.withMaximum(1);  }  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '')  {  abuilder.withMaximum(1);  }	  if(opt!='')    {    abuilder.withMaximum(1);    }    	non-compiled	[CE]  empty  character  literal	92	None	replace
363	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
364	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	47	1	add
365	[BUG]  [BUGGY]  if(opt!='')  {  abuilder.withOption(option);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!='')  {  abuilder.withOption(option);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  abuilder.withOption(option);  }	  abuilder.withOption(option);    	non-compiled	[CE]  empty  character  literal	29	None	replace
366	[BUG]  [BUGGY]  if(opt!='')  {  abuilder.withOption(option);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!='')  {  abuilder.withOption(option);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  abuilder.withOption(option);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOption(option);    	non-compiled	[CE]  empty  character  literal	29	None	replace
367	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  If(opt!=  '+'  ||  opt  ==  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  If(opt!=  '+'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '-')    {    If(opt!=  '+'  ||  opt  ==  '-')  {	  	non-compiled	[CE]  ';'  expected	4	None	add
368	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  abuilder.addValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-')  {  abuilder.addValidator(validator(opt));  }	  abuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
369	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {  abuilder.reset();  abuilder.withOption(opt);  }	  abuilder.reset();    abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
370	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '[')  {	  if(opt!=    '[')    {    if(opt    >=    '[')    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
371	[BUG]  [BUGGY]  if(opt  >=  '[')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '[')  {	  if(opt!=    '[')    {    if(opt    >=    '[')    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
372	[BUG]  [BUGGY]  if(opt!=  opt)  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  opt)  {  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  opt)  {  abuilder.withOption(opt);  }	  abuilder.withOption(type);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
373	[BUG]  [BUGGY]  if(opt  ==  opt)  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  opt)  {  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  opt)  {  abuilder.withOption(opt);  }	  abuilder.withOption(type);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
374	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  ']')  {	  if(opt!=    '[')    {    if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
375	[BUG]  [BUGGY]  if(opt!=  ']')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ']')  {	  if(opt!=    '[')    {    if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	10	1	replace
376	[BUG]  [BUGGY]  if(opt!='')  {  gbuilder.withOption(opt);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!='')  {  gbuilder.withOption(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  gbuilder.withOption(opt);  }	  gbuilder.withOption(opt);    	non-compiled	[CE]  empty  character  literal	90	None	replace
377	[BUG]  [BUGGY]  gbuilder.withOption(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.withOption(option);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.withOption(option);	  gbuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
378	[BUG]  [BUGGY]  abuilder.withOption(opt,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(opt,  null);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(opt,  null);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
379	[BUG]  [BUGGY]  abuilder.withOption(opt,  argument);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  abuilder.withOption(opt,  argument);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(opt,  argument);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
380	[BUG]  [BUGGY]  if(opt!=  ']')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ']')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ']')  {  abuilder.reset();  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
381	[BUG]  [BUGGY]  if(opt!='{  ')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  unclosed  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!='{  ')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='{  ')  {  abuilder.reset();  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  unclosed  character  literal	75	None	replace
382	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.create(),  preferred);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.create(),  preferred);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.create(),  preferred);	  gbuilder.addArgument(abuilder.create(),    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
383	[BUG]  [BUGGY]  if(opt!=  '-')  {  If(opt!=  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  If(opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '-')    {    If(opt!=  '-')  {	  	non-compiled	[CE]  ';'  expected	114	None	add
384	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-')  {  abuilder.withOption(opt);  }	  if(opt!='')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
385	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder();	  if(opt    ==    '*')    {    If(opt    ==    '*')    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']'  ||  opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  ||  opt  ==  ']'  ||  opt  ==  '[')  {	  if(opt    ==    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	28	1	replace
387	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']'  ||  opt  ==  '[')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']'  ||  opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  ||  opt  ==  ']'  ||  opt  ==  '[')  {	  if(opt    ==    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	28	1	replace
388	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  If(opt  ==  '['  ||  opt  ==  ']')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  If(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '['    ||    opt    ==    ']')    {    If(opt  ==  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	27	None	add
389	[BUG]  [BUGGY]  if(opt  ==  '+')  {  If(opt!=  '+')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+')  {  If(opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+')  {  If(opt!=  '+')  {	  if(opt!=    '+')    {    If(opt!=    '+')    {    	non-compiled	[CE]  ';'  expected	93	None	replace
390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
391	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
392	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
393	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '+')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
394	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  If(opt!=  '+'  ||  opt  ==  '.')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  If(opt!=  '+'  ||  opt  ==  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+'    ||    opt    ==    '.')    {    If(opt!=  '+'  ||  opt  ==  '.')  {	  	non-compiled	[CE]  ';'  expected	97	None	add
395	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  abuilder.reset();    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
396	[BUG]  [BUGGY]  if(opt!=  opt)  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  opt)  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  opt)  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  abuilder.reset();    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
397	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  argument.getValue());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  argument.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  argument.getValue());	  gbuilder.addArgument(abuilder,    opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
398	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(abuilder,  opt.getValue());  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(abuilder,  opt.getValue());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(abuilder,  opt.getValue());  }	  gbuilder.addArgument(abuilder,    opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
399	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt,  opt.create());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(opt,  opt.create());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(opt,  opt.create());  }	  gbuilder.addArgument(abuilder,    opt.create());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
400	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  argument.create());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  argument.create());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  argument.create());	  gbuilder.addArgument(abuilder,    opt.create());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
401	[BUG]  [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(abuilder,  opt.create());  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  null)  {  gbuilder.addArgument(abuilder,  opt.create());  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  null)  {  gbuilder.addArgument(abuilder,  opt.create());  }	  gbuilder.addArgument(abuilder,    opt.create());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
402	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt)+  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt)+  1;  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt)+  1;	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
403	[BUG]  [BUGGY]  if(opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
404	[BUG]  [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
405	[BUG]  [BUGGY]  if(opt  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  empty  character  literal	122	None	replace
406	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator	  	non-compiled	[CE]  ')'  expected	49	None	add
407	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
408	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '*')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
409	[BUG]  [BUGGY]  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
410	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  opt  +  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  opt  +  1);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.getValue(),  opt  +  1);	  gbuilder.addArgument(abuilder.getValue(),    opt);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
411	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
412	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
413	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '-'  ||  opt!=  '+')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	71	1	replace
414	[BUG]  [BUGGY]  if(opt  ==  '-'  ||  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '-'  ||  opt!=  '+')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	71	1	replace
415	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
416	[BUG]  [BUGGY]  if(opt  >=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '-')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
417	[BUG]  [BUGGY]  gbuilder.addOption(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addOption(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addOption(opt);	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
418	[BUG]  [BUGGY]  gbuilder.addValidator(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addValidator(opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addValidator(opt);	  gbuilder.addArgument(abuilder);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
419	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '.'  ||  opt  ==  '+')  {	  if(opt!=    '.'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	59	1	replace
420	[BUG]  [BUGGY]  if(opt  >=  '.'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.'  ||  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '.'  ||  opt  ==  '+')  {	  if(opt!=    '.'    ||    opt    ==    '+')    {    	compilable	  [FE]  ComparisonFailure  	59	1	replace
421	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '.'  ||  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
422	[BUG]  [BUGGY]  if(opt  >=  '.'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '.'  ||  opt  ==  ':')  {	  if(opt!=    '.'    ||    opt    ==    ':')    {    	compilable	  [FE]  ComparisonFailure  	111	1	replace
423	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
424	[BUG]  [BUGGY]  gbuilder.addValue(opt,  type.getValue());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addValue(opt,  type.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addValue(opt,  type.getValue());	  gbuilder.addArgument(abuilder,    type.getValue());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
425	[BUG]  [BUGGY]  gbuilder.addOption(opt,  type.getValue());  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addOption(opt,  type.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addOption(opt,  type.getValue());	  gbuilder.addArgument(abuilder,    type.getValue());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
426	[BUG]  [BUGGY]  gbuilder.addOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addOption(option);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addOption(option);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
427	[BUG]  [BUGGY]  gbuilder.setOption(option  ||  opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.setOption(option  ||  opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.setOption(option  ||  opt);	  gbuilder.setOption(option);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
428	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(valid  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(valid  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(valid	  	non-compiled	[CE]  ')'  expected	76	None	add
429	[BUG]  [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'r')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'r')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {  If(opt  ==  'r')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	99	None	replace
430	[BUG]  [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'n')  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  If(opt  ==  'n')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {  If(opt  ==  'n')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	99	None	replace
431	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  If(opt!=  '['  ||  opt  ==  ']')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  If(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    ||    opt    ==    ']')    {    If(opt!=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	25	None	add
432	[BUG]  [BUGGY]  obuilder.addValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  obuilder.addValidator(validator(opt));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.addValidator(validator(opt));	  if(opt!=    '[')    {    obuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
433	[BUG]  [BUGGY]  if(opt!=  '[')  {  obuilder.setValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  obuilder.setValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  obuilder.setValidator(validator(opt));  }	  if(opt!=    '[')    {    obuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
434	[BUG]  [BUGGY]  gbuilder.addOption(opt,  argument);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addOption(opt,  argument);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addOption(opt,  argument);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  'n')  {	  if(opt!=    '*')    {    if(opt    >>    '*')    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
436	[BUG]  [BUGGY]  if(opt!=  'n')  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {	  if(opt!=    '*')    {    if(opt    >>    '*')    {    	compilable	  [FE]  ComparisonFailure  	65	1	replace
437	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(type));    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
438	[BUG]  [BUGGY]  if(opt!='')  {  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!='')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {	  if(opt!=    '+')    {    if(opt!=    '+')    {    	non-compiled	[CE]  empty  character  literal	14	None	replace
439	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  null);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  null);  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(opt),    type);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
440	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  false);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  false);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  false);  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(opt),    type);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
441	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  If(opt!=  '['  &&  opt!=  ']')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  If(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '['    &&    opt!=    ']')    {    If(opt!=  '['  &&  opt!=  ']')  {	  	non-compiled	[CE]  ';'  expected	105	None	add
442	[BUG]  [BUGGY]  if(opt  >>  '.')  {  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >>  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >>  '.')  {	  if(opt    >=    '.')    {    	non-compiled	[CE]  incompatible  types	101	None	replace
443	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  If(opt!=  '.'  &&  opt!=  '-')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  If(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.'    &&    opt!=    '-')    {    If(opt!=  '.'  &&  opt!=  '-')  {	  	non-compiled	[CE]  ';'  expected	112	None	add
444	[BUG]  [BUGGY]  if(opt!=  ')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  unclosed  character  literal  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
445	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  aughtException( " ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	aughtException( " ");	  if(opt!='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
446	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(option);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(option);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.withOption(option);  }	  abuilder.withOption(option);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
447	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt.toCharArray());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt.toCharArray());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt.toCharArray());	  gbuilder.addArgument(abuilder,    type.create());    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
448	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt,  type.create());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt,  type.create());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt,  type.create());	  gbuilder.addArgument(abuilder,    type.create());    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
449	[BUG]  [BUGGY]  if(opt  >=  '.')  {  If(opt  >=  '.')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  >=  '.')  {  If(opt  >=  '.')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    >=    '.')    {    If(opt  >=  '.')  {	  	non-compiled	[CE]  ';'  expected	100	None	add
450	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt!=    ']')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt	  	non-compiled	[CE]  ')'  expected	76	None	add
451	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.set();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
452	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt.charAt(0));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt.charAt(0));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt.charAt(0));	  gbuilder.addArgument(abuilder,    opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
453	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  opt.getValue());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  opt.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(argument,  opt.getValue());	  gbuilder.addArgument(abuilder,    opt.getValue());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
454	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '-'  &&  opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
455	[BUG]  [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-'  &&  opt!=  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-'  &&  opt!=  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
456	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '-'  &&  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
457	[BUG]  [BUGGY]  if(opt!=  '-'  &&  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-'  &&  opt  ==  '+')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-'  &&  opt  ==  '+')  {	  if(opt!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	115	1	replace
458	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.getKey(),  opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder.getKey(),  opt);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.getKey(),  opt);	  gbuilder.addArgument(abuilder.getValue(),    opt);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
459	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
460	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.addValidator(validator(opt),  type);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '[')  {  abuilder.addValidator(validator(opt),  type);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  abuilder.addValidator(validator(opt),  type);  }	  if(opt!=    '[')    {    abuilder.addValidator(validator(opt),    type);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
461	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(type!=  '*')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '*')  {  abuilder.withMinimum(1);  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
462	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
463	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
464	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
465	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
466	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '%')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '-'  ||  opt  ==  '%')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	71	1	replace
467	[BUG]  [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '%')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '-'  ||  opt  ==  '%')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '-'  ||  opt  ==  '%')  {	  if(opt    ==    '-')    {    	compilable	  [FE]  ComparisonFailure  	71	1	replace
468	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  type.getValue());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  type.getValue());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(argument,  type.getValue());	  gbuilder.addArgument(abuilder,    type.getValue());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
469	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.addOption(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.addOption(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.addOption(validator(opt));  }	  if(type!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
470	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.setValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.setValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.setValidator(validator(opt));  }	  if(type!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
471	[BUG]  [BUGGY]  if(opt  ==  '.')  {  If(opt!=  ';'  expected)  {  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  If(opt!=  ';'  expected)  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.')  {  If(opt!=  ';'  expected)  {	  if(opt!=    '.')    {    If(opt!=    '.')    {    	non-compiled	[CE]  ')'  expected	85	None	replace
472	[BUG]  [BUGGY]  gbuilder.addArgument(opt.charAt(0));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt.charAt(0));  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.charAt(0));	  gbuilder.addArgument(opt.create());    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
473	[BUG]  [BUGGY]  gbuilder.addArgument(opt.toString());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt.toString());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.toString());	  gbuilder.addArgument(opt.create());    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
474	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  gbuilder.setOption(opt);  }	  gbuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
475	[BUG]  [BUGGY]  if(opt!=  '[')required)  {  gbuilder.setOption(type);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')required)  {  gbuilder.setOption(type);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')required)  {  gbuilder.setOption(type);  }	  gbuilder.setOption(type);    	non-compiled	[CE]  not  a  statement	18	None	replace
476	[BUG]  [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(type);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  gbuilder.setOption(type);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  gbuilder.setOption(type);  }	  gbuilder.setOption(type);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
477	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.addValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.addValidator(validator(opt));  }	  abuilder.addValidator(validator(opt));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
478	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.set();  abuilder.withOption(opt);  }	  if(type!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
479	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ';')  {  abuilder.withOption(opt);  }	  abuilder.withOption(opt)    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
480	[BUG]  [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOption(opt)    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
481	[BUG]  [BUGGY]  if(opt  ==  ':')  {  If(opt  ==  '>')  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  ':')  {  If(opt  ==  '>')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  ':')  {  If(opt  ==  '>')  {	  if(opt    ==    '*')    {    If(opt    ==    '*')    {    	non-compiled	[CE]  ';'  expected	33	None	replace
482	[BUG]  [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '>')  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '.')  {  If(opt  ==  '>')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.')  {  If(opt  ==  '>')  {	  if(opt    ==    '*')    {    If(opt    ==    '*')    {    	non-compiled	[CE]  ';'  expected	33	None	replace
483	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.withOption(opt);  }	  abuilder.withOption(type);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
484	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  abuilder.withOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.withOption(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOption(type);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
485	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >>    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	53	1	replace
486	[BUG]  [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(abuilder!=  null)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt    >>    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	53	1	replace
487	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
488	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n'  ||  opt  ==  'r'  ||  opt  ==  'n'  ||  opt  ==  't')  {	  if(opt    ==    '*')    {    if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
489	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
490	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  'a')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
491	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  '-')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
492	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  '-')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
493	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
494	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  'r'  ||  opt  ==  ':')  {	  if(opt    ==    'n'    ||    opt    ==    'r')    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
495	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']'  ||  opt!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  ||  opt  ==  ']'  ||  opt!=  '[')  {	  if(opt    ==    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	28	1	replace
496	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']'  ||  opt!=  '[')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']'  ||  opt!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  ||  opt  ==  ']'  ||  opt!=  '[')  {	  if(opt    ==    '['    ||    opt    ==    ']')    {    	compilable	  [FE]  ComparisonFailure  	28	1	replace
497	[BUG]  [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]          if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	                if(opt!=        '[')        {        abuilder.reset();        abuilder.withValidator(validator(opt));        }        if(opt    ==    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt)	  	non-compiled	[CE]  ')'  expected	51	None	add
498	[BUG]  [BUGGY]  if(opt  ==  '+')  {  If(opt!=  '-')  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '+')  {  If(opt!=  '-')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+')  {  If(opt!=  '-')  {	  if(opt!=    '*')    {    If(opt!=    '*')    {    	non-compiled	[CE]  ';'  expected	99	None	replace
499	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
500	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  obuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  obuilder.addValidator(validator(opt));  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  obuilder.addValidator(validator(opt));  }	  if(opt!=    '[')    {    obuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
501	[BUG]  [BUGGY]  gbuilder.addValue(opt,  argument);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addValue(opt,  argument);  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addValue(opt,  argument);	  gbuilder.addArgument(abuilder,    argument);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
502	[BUG]  [BUGGY]  if(opt!=  '[')  {  opt  =  gbuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  opt  =  gbuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  opt  =  gbuilder.reset();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
503	[BUG]  [BUGGY]  if(opt!=  '[')  {  opt.set();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '[')  {  opt.set();  abuilder.withOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  opt.set();  abuilder.withOption(opt);  }	  if(abuilder!=    '[')    {    opt.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
504	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  abuilder.setOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.setOption(opt);  }	  abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
505	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '-')  {  abuilder.setOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-')  {  abuilder.setOption(opt);  }	  abuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
506	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  abuilder.toString());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(opt,  abuilder.toString());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  abuilder.toString());	  gbuilder.addArgument(opt,    abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  ||  opt  ==  '[')  {	  if(opt!=    '[')    {    if(opt    ==    '[')    {    	compilable	  [FE]  ComparisonFailure  	12	1	replace
508	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  '[')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '['  ||  opt  ==  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt  ==  '[')  {	  if(opt!=    '[')    {    if(opt    ==    '[')    {    	compilable	  [FE]  ComparisonFailure  	12	1	replace
509	[BUG]  [BUGGY]  if(opt!=  '.')  {  obuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  '.')  {  obuilder.setOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  obuilder.setOption(opt);  }	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
510	[BUG]  [BUGGY]  if(opt!=  'n')  {  obuilder.setOption(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt!=  'n')  {  obuilder.setOption(opt);  }  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n')  {  obuilder.setOption(opt);  }	  obuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
511	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '/')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '/')  {	  if(opt!=    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	64	1	replace
512	[BUG]  [BUGGY]  if(opt  ==  '/')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  if(opt  ==  '/')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '/')  {	  if(opt!=    '*')    {    if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	64	1	replace
513	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt,  abuilder.create());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(abuilder,  opt,  abuilder.create());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt,  abuilder.create());	  gbuilder.addArgument(opt,    abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
514	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  abuilder.create());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }      [BUGGY]  gbuilder.addArgument(argument,  abuilder.create());  [BUGGY]      if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(argument,  abuilder.create());	  gbuilder.addArgument(opt,    abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
