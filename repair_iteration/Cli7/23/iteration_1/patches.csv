bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.reset();  abuilder.withValidator(validator(opt));  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.reset();  abuilder.withValidator(validator(opt));	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '+'  ||  opt  ==  '-')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
5	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '+'  ||  opt  ==  '-')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '+'  ||  opt  ==  '-')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
7	[BUG]  [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '+'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+'  ||  opt  ==  '-')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '+')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
9	[BUG]  [BUGGY]  if(opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '+')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
10	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt!=  '[')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  if(opt!=  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '[')    {    if(opt!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
11	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  >=  '[')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  if(opt  >=  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '[')    {    if(opt  >=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
12	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  ==  '[')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  if(opt  ==  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '[')    {    if(opt  ==  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
13	[BUG]  [BUGGY]  if(opt!=  '[')  {  if(opt  >>  '[')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  if(opt  >>  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '[')    {    if(opt  >>  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
14	[BUG]  [BUGGY]  if(opt!=  '+')  {  if(opt!=  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+')  {  if(opt!=  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+')    {    if(opt!=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
15	[BUG]  [BUGGY]  if(opt!=  '+')  {  if(opt  >=  '+')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+')  {  if(opt  >=  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+')    {    if(opt  >=  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
16	[BUG]  [BUGGY]  if(opt!=  '+')  {  if(opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+')  {  if(opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+')    {    if(opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
17	[BUG]  [BUGGY]  if(opt!=  '+')  {  if(opt  >>  '+')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+')  {  if(opt  >>  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+')    {    if(opt  >>  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
18	[BUG]  [BUGGY]  gbuilder.setOption(type);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.setOption(type);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.setOption(type);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  abuilder.setOption(opt);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.setOption(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.setOption(opt);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  gbuilder.setOption(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.setOption(option);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.setOption(option);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt.create());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  opt.create());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt.create());	      gbuilder.addArgument(abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.create(),  opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder.create(),  opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.create(),  opt);	      gbuilder.addArgument(abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
24	[BUG]  [BUGGY]  if(opt  ==  '[')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '[')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
26	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
28	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
29	[BUG]  [BUGGY]  abuilder.withOption(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.withOption(option);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(option);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*')  {  if(opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*')    {    if(opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
31	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*')  {  if(opt!=  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*')    {    if(opt!=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
32	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt  >=  '*')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*')  {  if(opt  >=  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*')    {    if(opt  >=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
33	[BUG]  [BUGGY]  if(opt  ==  '*')  {  If(opt  ==  '*')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*')  {  If(opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*')    {    If(opt  ==  '*')  {	  	non-compiled	[CE]  ';'  expected	5	None	add
34	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.addValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.addValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
35	[BUG]  [BUGGY]  abuilder.addValidator(validator(opt));  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.addValidator(validator(opt));  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addValidator(validator(opt));	      if(opt!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
36	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(type));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(type));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.addValidator(validator(type));  }	      if(opt!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
37	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder.getValue(),  opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder.getValue(),  opt);	      gbuilder.addArgument(abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt.getValue());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  opt.getValue());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt.getValue());	      gbuilder.addArgument(abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  type.getValue());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  type.getValue());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  type.getValue());	      gbuilder.addArgument(abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  gbuilder.addArgument(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  abuilder.addArgument(argument);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.addArgument(argument);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.addArgument(argument);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  argument);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  argument);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  argument);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt);	      OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);	      OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt);	      OptionBuilder    obuilder    =    OptionBuilder.create();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
48	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
50	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
51	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
52	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
53	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incompatible  types	16	None	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
55	[BUG]  [BUGGY]  if(opt  ==  '.')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
57	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  ||  opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  ||  opt  ==  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  ||  opt  ==  '+')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
59	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  ||  opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  ||  opt  ==  '+')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
60	[BUG]  [BUGGY]  abuilder.withOption(type);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.withOption(type);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(type);	      abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
61	[BUG]  [BUGGY]  abuilder.withOption(opt,  required);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.withOption(opt,  required);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(opt,  required);	      abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '*')  {  if(opt!=  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '*')    {    if(opt!=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
63	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt  >=  '*')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '*')  {  if(opt  >=  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '*')    {    if(opt  >=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
64	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt  ==  '*')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '*')  {  if(opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '*')    {    if(opt  ==  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
65	[BUG]  [BUGGY]  if(opt!=  '*')  {  if(opt  >>  '*')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '*')  {  if(opt  >>  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '*')    {    if(opt  >>  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
66	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt!=  '.')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.')  {  if(opt!=  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.')    {    if(opt!=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
67	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.')  {  if(opt  ==  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.')    {    if(opt  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
68	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt  >=  '.')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.')  {  if(opt  >=  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.')    {    if(opt  >=  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
69	[BUG]  [BUGGY]  if(opt!=  '.')  {  if(opt  >>  '.')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.')  {  if(opt  >>  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.')    {    if(opt  >>  '.')  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '-')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
71	[BUG]  [BUGGY]  if(opt  ==  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '-')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '*'  ||  opt  ==  '+')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
73	[BUG]  [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*'  ||  opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '*'  ||  opt  ==  '+')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
74	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withOption(opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.reset();  abuilder.withOption(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.reset();  abuilder.withOption(opt);	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
75	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withOption(opt);  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
77	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
79	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  'n'  ||  opt  ==  'r')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
80	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  if(opt!=  '[')  {  obuilder.addValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  obuilder.addValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  obuilder.addValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
82	[BUG]  [BUGGY]  obuilder.setOption(opt);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  obuilder.setOption(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.setOption(opt);	      gbuilder.setOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  gbuilder.addArgument(opt.create());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(opt.create());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.create());	      gbuilder.addArgument(abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  abuilder.create());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(opt,  abuilder.create());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  abuilder.create());	      gbuilder.addArgument(abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  if(opt!=  '.')  {  If(opt!=  '.')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.')  {  If(opt!=  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '.')    {    If(opt!=  '.')  {	  	non-compiled	[CE]  ';'  expected	3	None	add
86	[BUG]  [BUGGY]  gbuilder.addArgument(opt.getValue());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(opt.getValue());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt.getValue());	      gbuilder.addArgument(abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  gbuilder.addArgument(opt,  abuilder.getValue());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(opt,  abuilder.getValue());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(opt,  abuilder.getValue());	      gbuilder.addArgument(abuilder.getValue());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  obuilder.withOption(opt);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  obuilder.withOption(opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	obuilder.withOption(opt);	      abuilder.withOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  if(opt  ==  '*')  {  if(opt  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '*')  {  if(opt  ==  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt    ==    '*')    {    if(opt  ==  '+')  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
90	[BUG]  [BUGGY]  gbuilder.withOption(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.withOption(opt);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.withOption(opt);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
91	[BUG]  [BUGGY]  if(opt!='')  {  abuilder.withOption(opt);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!='')  {  abuilder.withOption(opt);  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  abuilder.withOption(opt);  }	      	non-compiled	[CE]  empty  character  literal	7	None	replace
92	[BUG]  [BUGGY]  if(opt!='')  {  abuilder.withMaximum(1);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!='')  {  abuilder.withMaximum(1);  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  abuilder.withMaximum(1);  }	      	non-compiled	[CE]  empty  character  literal	7	None	replace
93	[BUG]  [BUGGY]  if(opt!=  '+')  {  If(opt!=  '+')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+')  {  If(opt!=  '+')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '+')    {    If(opt!=  '+')  {	  	non-compiled	[CE]  ';'  expected	13	None	add
94	[BUG]  [BUGGY]  if(opt!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  obuilder.reset();  abuilder.withOption(opt);  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
95	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
96	[BUG]  [BUGGY]  if(opt!=  '[')  {  If(opt!=  '[')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  If(opt!=  '[')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '[')    {    If(opt!=  '[')  {	  	non-compiled	[CE]  ';'  expected	20	None	add
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '+'  ||  opt  ==  '.')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
98	[BUG]  [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '+'  ||  opt  ==  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '+'  ||  opt  ==  '.')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
99	[BUG]  [BUGGY]  if(opt!=  '*')  {  If(opt!=  '*')  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '*')  {  If(opt!=  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=    '*')    {    If(opt!=  '*')  {	  	non-compiled	[CE]  ';'  expected	1	None	add
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  >=  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  >=  '.')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
101	[BUG]  [BUGGY]  if(opt  >=  '.')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  >=  '.')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  >=  '.')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
102	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  opt);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  opt);  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  opt);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  ||  opt  ==  ':')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
104	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  ||  opt  ==  ':')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  &&  opt!=  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
106	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  &&  opt!=  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  &&  opt!=  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '['  &&  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
108	[BUG]  [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '['  &&  opt  ==  ']')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '['  &&  opt  ==  ']')  {	  if(opt!=    '[')    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
109	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  ||  opt  ==  ':')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
111	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  ||  opt  ==  ':')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  ||  opt  ==  ':')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '.'  &&  opt!=  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
113	[BUG]  [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '.'  &&  opt!=  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '.'  &&  opt!=  '-')  {	  if(opt!=    '.')    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  '-')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
115	[BUG]  [BUGGY]  if(opt!=  '-')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '-')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '-')  {	  if(opt!=    '+')    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt  ==  '.'  ||  opt  ==  '*')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
117	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt  ==  '.'  ||  opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt  ==  '.'  ||  opt  ==  '*')  {	  if(opt    ==    '*')    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
118	[BUG]  [BUGGY]  abuilder.withOption(opt)  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  abuilder.withOption(opt)  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	abuilder.withOption(opt)	      abuilder.withOption(opt);    	non-compiled	[CE]  ';'  expected	9	None	replace
119	[BUG]  [BUGGY]  if(abuilder!=  '[')  {  opt.reset();  abuilder.withOption(opt);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(abuilder!=  '[')  {  opt.reset();  abuilder.withOption(opt);  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(abuilder!=  '[')  {  opt.reset();  abuilder.withOption(opt);  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
120	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  type.create());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  type.create());  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	gbuilder.addArgument(abuilder,  type.create());	      gbuilder.addArgument(abuilder.create());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
121	[BUG]  [BUGGY]  if(opt!='')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!='')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      	non-compiled	[CE]  empty  character  literal	7	None	replace
122	[BUG]  [BUGGY]  if(opt!='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  empty  character  literal	7	None	replace
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	add	if(opt!=  'n'  ||  opt  ==  '*')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
124	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  'n'  ||  opt  ==  '*')  {  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  'n'  ||  opt  ==  '*')  {	  if(opt!=    '*')    {    	compilable	  [FE]  ComparisonFailure  	2	1	replace
125	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  type);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  type);  }  [BUGGY]    if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	111	111	1	replace	if(opt!=  '[')  {  abuilder.addValidator(validator(opt),  type);  }	      if(opt!=    '[')    {    abuilder.addValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
