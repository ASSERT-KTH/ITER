bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)options.get(i.next(),  options);  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options);	      Option    option    =(Option)options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)options.get(i.next()  -  1);  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next()  -  1);	      Option    option    =(Option)options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options.size());	      Option    option    =(Option)options.get(i.next());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	14	None	replace
4	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  options.next());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.addOption((  Option)i,  options.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  options.next());	  gbuilder.addOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
5	[BUG]  [BUGGY]  gbuilder.addOption((  Option)options.next());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.addOption((  Option)options.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)options.next());	  gbuilder.addOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
6	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  option.next());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.addOption((  Option)i,  option.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  option.next());	  gbuilder.addOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
7	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.next();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.next();	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
8	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	compilable	  [FE]  ClassCastException  	2	1	replace
9	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	compilable	  [FE]  ClassCastException  	2	1	replace
10	[BUG]  [BUGGY]  option  obuilder  =(Option)i.next();  [CE]  cannot  find  symbol  [FE]    NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  option  obuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	option  obuilder  =(Option)i.next();	      Option    obuilder    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
11	[BUG]  [BUGGY]  Option  obuilder  =(Option)options.next();  [CE]  cannot  find  symbol  [FE]      NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  obuilder  =(Option)options.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  obuilder  =(Option)options.next();	      Option    obuilder    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
12	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  options.next());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.setOption((  Option)i,  options.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  options.next());	  gbuilder.setOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]  gbuilder.setOption((  Option)options.next());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.setOption((  Option)options.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)options.next());	  gbuilder.setOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
14	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  option.next());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.setOption((  Option)i,  option.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  option.next());	  gbuilder.setOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
15	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)this.options.get(i);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)this.options.get(i);  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)this.options.get(i);	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)options.get(i);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
16	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.get(options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.get(options);  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.get(options);	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)options.get(i);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
17	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	3	None	add
18	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	        Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();	  	compilable	  [FE]  NoSuchElementException  	3	1	add
19	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();	  	compilable	  [FE]  NoSuchElementException  	3	1	add
20	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]        NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	        Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();	  	compilable	  [FE]  NoSuchElementException  	3	1	add
21	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]        NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();	  	compilable	  [FE]  NoSuchElementException  	3	1	add
22	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next());  [CE]  ';'  expected  [FE]          NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next());	  	non-compiled	[CE]  ';'  expected	3	None	add
23	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  [CE]  unexpected  type  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }	      gbuilder.withOption((    Option)i.next());    	non-compiled	[CE]  unexpected  type	7	None	replace
24	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	        gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	6	1	add
25	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	6	1	add
26	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  incompatible  types	6	None	add
27	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  inconvertible  types	6	None	add
28	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  incompatible  types	6	None	add
29	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  inconvertible  types	6	None	add
30	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  NoSuchElementException  	12	1	add
31	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  NoSuchElementException  	12	1	add
32	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	12	None	add
33	[BUG]  [BUGGY]  if(i.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }	      Option    option    =(Option)i.next();    gbuilder.withOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	18	None	replace
34	[BUG]  [BUGGY]  gbuilder.withOption(i.next());  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.withOption(i.next());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption(i.next());	      Option    option    =(Option)i.next();    gbuilder.withOption(option);    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	18	None	replace
35	[BUG]  [BUGGY]  Option  i  =(Option)i.next();  [CE]  variable  i  is  already  defined  in  method  create()  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  i  =(Option)i.next();  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  i  =(Option)i.next();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  create()	13	None	replace
36	[BUG]  [BUGGY]  parentBuilder.withOption((  Parent)i.next());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  parentBuilder.withOption((  Parent)i.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Parent)i.next());	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
37	[BUG]  [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	1	None	add
38	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	        DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	compilable	  [FE]  ClassCastException  	1	1	add
39	[BUG]  [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	compilable	  [FE]  ClassCastException  	1	1	add
40	[BUG]  [BUGGY]  gbuilder.withOption((  Options)i,  options.next());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.withOption((  Options)i,  options.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Options)i,  options.next());	  gbuilder.withOption((    Options)i.next());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
41	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i,  options.next());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  gbuilder.withOption((  Option)i,  options.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i,  options.next());	  gbuilder.withOption((    Options)i.next());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
42	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  options.add((  Option)i.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	options.add((  Option)i.next());	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  NoSuchElementException  	10	1	replace
43	[BUG]  [BUGGY]  options.add((  Option)i.next());  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  options.add((  Option)i.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options.add((  Option)i.next());	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  NoSuchElementException  	10	1	replace
44	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	9	1	add
45	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	9	1	add
46	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  If(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  If(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  ';'  expected	9	None	add
47	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)options.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	5	None	replace
48	[BUG]  [BUGGY]  option  =(Option)i.next();  [CE]  variable  option  might  be  assigned  in  loop  [FE]              ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  option  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	option  =(Option)i.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  variable  option  might  be  assigned  in  loop	5	None	replace
49	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)i.next();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  OptionOption  option  =(OptionOption)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)i.next();	      OptionOption    option    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
50	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)options.next();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  OptionOption  option  =(OptionOption)options.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)options.next();	      OptionOption    option    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
51	[BUG]  [BUGGY]  OptionOption  option  =(Option)options.next();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  OptionOption  option  =(Option)options.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(Option)options.next();	      OptionOption    option    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
52	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  option  =(Option)i.next();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	add
53	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  i  =(Option)i.next();  [CE]  variable  i  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  i  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  i  =(Option)i.next();	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  create()	3	None	add
54	[BUG]  [BUGGY]  if(i.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  else  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  else  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  else  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {	      Option    option    =(Option)i.next();    gbuilder.withOption(option);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i.next());  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i.next());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i.next());	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
56	[BUG]  [BUGGY]  Option  obuilder  =(Option)option.next();  [CE]  cannot  find  symbol  [FE]    NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  obuilder  =(Option)option.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  obuilder  =(Option)option.next();	      Option    obuilder    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
57	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.get(option);  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.get(option);	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)options.get(i);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
58	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)options.get(i);  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i);	      Option    option    =(Option)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	5	None	replace
59	[BUG]  [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  i  =(DefaultOptionBuilder)i.next();  [CE]  variable  i  is  already  defined  in  method  create()  [FE]    ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  i  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  i  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  create()	1	None	add
60	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	GroupBuilder  abuilder  =(GroupBuilder)i.next();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	13	1	replace
61	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  [FE]  ClassCastException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder  abuilder  =(GroupBuilder)i.next();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	13	1	replace
62	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }	      gbuilder.withOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
63	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }	      gbuilder.withOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
64	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	        gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	6	1	add
65	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	6	1	add
66	[BUG]  [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]      ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        gbuilder.withOption((    Option)i.next());    if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }	  	non-compiled	[CE]  inconvertible  types	6	None	add
67	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Alternative  obuilder  =(Option)i.next();  [CE]  cannot  find  symbol  [FE]    NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Alternative  obuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Alternative  obuilder  =(Option)i.next();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
68	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	        Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();	  	compilable	  [FE]  NoSuchElementException  	3	1	add
69	[BUG]  [BUGGY]      Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();	  	compilable	  [FE]  NoSuchElementException  	3	1	add
70	[BUG]  [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)i.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)i.next();  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  option  =(DefaultOptionBuilder)i.next();	      DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	2	None	replace
71	[BUG]  [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next());  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]      DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next());  [BUGGY]    gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	        DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next());	  	non-compiled	[CE]  ';'  expected	1	None	add
72	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	12	None	add
73	[BUG]  [BUGGY]  parentBuilder.withOption((  Option)i.next());  [CE]  cannot  find  symbol  parentBuilder  [FE]    ComparisonFailure    [CONTEXT]    public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  parentBuilder.withOption((  Option)i.next());  [BUGGY]    }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Option)i.next());	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parentBuilder	13	None	replace
