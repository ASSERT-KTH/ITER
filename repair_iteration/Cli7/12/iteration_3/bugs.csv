bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.next();	  DefaultOptionBuilder    option    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	70	None	replace
2	[BUG]  [BUGGY]  final  DefaultOptionBuilder  option  =(DefaultOptionBuilder)i.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  option  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  DefaultOptionBuilder  option  =(DefaultOptionBuilder)i.next();	  DefaultOptionBuilder    option    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	70	None	replace
3	[BUG]  [BUGGY]  Option  i  =(Option)options.next();  [CE]  variable  i  is  already  defined  in  method  create()  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  i  =(Option)options.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  i  =(Option)options.next();	  Option    i    =(Option)i.next();    	non-compiled	[CE]  variable  i  is  already  defined  in  method  create()	35	None	replace
4	[BUG]  [BUGGY]  option  i  =(Option)i.next();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  i  =(Option)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	option  i  =(Option)i.next();	  Option    i    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.next())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ComparisonFailure  	26	1	replace
6	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.next())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ComparisonFailure  	26	1	replace
7	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [CE]  unexpected  type  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.next())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  unexpected  type	26	None	replace
8	[BUG]  [BUGGY]  Alternative  obuilder  =(Option)i.next();  [CE]  cannot  find  symbol  [FE]        NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Alternative  obuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Alternative  obuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Alternative    obuilder    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
9	[BUG]  [BUGGY]  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.next())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  incompatible  types	28	None	replace
10	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size()  -  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size()  -  1);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options.size()  -  1);	  Option    option    =(Option)options.get(i.next(),    options.size());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size()  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size()  +  1);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options.size()  +  1);	  Option    option    =(Option)options.get(i.next(),    options.size());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
12	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size()  -  2);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.size()  -  2);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options.size()  -  2);	  Option    option    =(Option)options.get(i.next(),    options.size());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
13	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]        NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  obuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	final  Option  obuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    option    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	52	1	replace
14	[BUG]  [BUGGY]  final  Option  obuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]        NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  obuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  Option  obuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    option    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	52	1	replace
15	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.addOption((    Option)i.next());    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
16	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gBuilder.addOption((  Option)i.next());  }  [CE]  cannot  find  symbol  gBuilder  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gBuilder.addOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gBuilder.addOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.addOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol  gBuilder	63	None	replace
17	[BUG]  [BUGGY]  try  ==  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  	72	None	replace
18	[BUG]  [BUGGY]  try  ==  if(i.hasNext())  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  if(i.hasNext())  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  if(i.hasNext())  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  	72	None	replace
19	[BUG]  [BUGGY]  gbuilder.addOption((  Option)option,  i.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)option,  i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)option,  i.next());	  gbuilder.addOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
20	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  option.getValue(i.next()));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)i,  option.getValue(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  option.getValue(i.next()));	  gbuilder.addOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
21	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  ibuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	Option  ibuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    ibuilder    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	19	1	replace
22	[BUG]  [BUGGY]  Option  ibuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  ibuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  ibuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    ibuilder    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	19	1	replace
23	[BUG]  [BUGGY]  optionBuilder.withOption((  Option)i.next());  [CE]  cannot  find  symbol  optionBuilder  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  optionBuilder.withOption((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	optionBuilder.withOption((  Option)i.next());	  parentBuilder.withOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol  optionBuilder	73	None	replace
24	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	24	1	add
25	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	24	1	add
26	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [CE]  incompatible  types  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  incompatible  types	24	None	add
27	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  inconvertible  types	24	None	add
28	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  incompatible  types  [FE]          NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  incompatible  types	24	None	add
29	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.next()).withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if((  Option)i.next()).withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if((  Option)i.next()).withOption((  Option)i.next());  if((  Option)i.next())  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
30	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.next();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.next();	  final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
31	[BUG]  [BUGGY]  final  OptionBuilder  obuilder  =(OptionBuilder)i.next();  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  OptionBuilder  obuilder  =(OptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  OptionBuilder  obuilder  =(OptionBuilder)i.next();	  final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
32	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	44	1	add
33	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	44	1	add
34	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.  [CE]  ')'  expected  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.	  	non-compiled	[CE]  ')'  expected	44	None	add
35	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	44	1	add
36	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	44	1	add
37	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.get());  }  [CE]  cannot  find  symbol  [FE]          NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.get());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.get());  }	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
38	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next()  +  1);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next()  +  1);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next()  +  1);	  Option    option    =(Option)options.get(i.next()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	2	None	replace
39	[BUG]  [BUGGY]  option  =(Option)options.get(i.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	option  =(Option)options.get(i.next());	  Option    option    =(Option)options.get(i.next()    -    1);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
40	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)this.options.get(i);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)this.options.get(i);	  Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	58	None	replace
41	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  GroupBuilder  abuilder  =(GroupBuilder)i.next();  [CE]  variable  abuilder  is  already  defined  in  method  create()  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  GroupBuilder  abuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder    abuilder    =(GroupBuilder)i.next();    GroupBuilder  abuilder  =(GroupBuilder)i.next();	  	non-compiled	[CE]  variable  abuilder  is  already  defined  in  method  create()	60	None	add
42	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  abuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	GroupBuilder    abuilder    =(GroupBuilder)i.next();    abuilder  =(GroupBuilder)i.next();	  	compilable	  [FE]  ClassCastException  	60	1	add
43	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  abuilder  =(GroupBuilder)i.next();  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  abuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder    abuilder    =(GroupBuilder)i.next();    abuilder  =(GroupBuilder)i.next();	  	compilable	  [FE]  ClassCastException  	60	1	add
44	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  Option  abuilder  =(GroupBuilder)i.next();  [CE]  variable  abuilder  is  already  defined  in  method  create()  [FE]        ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  Option  abuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder    abuilder    =(GroupBuilder)i.next();    Option  abuilder  =(GroupBuilder)i.next();	  	non-compiled	[CE]  variable  abuilder  is  already  defined  in  method  create()	60	None	add
45	[BUG]  [BUGGY]  parent  =(Parent)i.next();  [CE]  cannot  find  symbol  parent  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  parent  =(Parent)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parent  =(Parent)i.next();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  cannot  find  symbol  parent	32	None	replace
46	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  oBuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	Option  oBuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    oBuilder    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	69	1	replace
47	[BUG]  [BUGGY]  Option  oBuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  oBuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  oBuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    oBuilder    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	69	1	replace
48	[BUG]  [BUGGY]  OptionBuilder  obuilder  =(OptionBuilder)i.next();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionBuilder  obuilder  =(OptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionBuilder  obuilder  =(OptionBuilder)i.next();	          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder    ibuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
49	[BUG]  [BUGGY]  try  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  'try'  without  'catch',  'finally'  or  resource  declarations  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  'try'  without  'catch',  'finally'  or  resource  declarations	45	None	replace
50	[BUG]  [BUGGY]  try  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  	45	None	replace
51	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.setOption((    Option)i.next());    }    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
52	[BUG]  [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gBuilder.setOption((  Option)i.next());  }  [CE]  cannot  find  symbol  gBuilder  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gBuilder.setOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gBuilder.setOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.setOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol  gBuilder	62	None	replace
53	[BUG]  [BUGGY]  if(i.hasNext()  instanceof  Option)  {  gbuilder.withOption((  Option)i.next());  }  [CE]  unexpected  type  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext()  instanceof  Option)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext()  instanceof  Option)  {  gbuilder.withOption((  Option)i.next());  }	  if(!(i.hasNext()    instanceof    Option))    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  unexpected  type	23	None	replace
54	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())  {  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())  {  if(!i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  if(!(i.hasNext()    instanceof    Option))    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
56	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
57	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [CE]  unexpected  type  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(!(i.hasNext()  instanceof  Option))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.setOption((    Option)i.next());    }    	non-compiled	[CE]  unexpected  type	66	None	replace
58	[BUG]  [BUGGY]  gbuilder.setOption((  Option)option,  i.next());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)option,  i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)option,  i.next());	  gbuilder.setOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
59	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  option.clone());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)i,  option.clone());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  option.clone());	  gbuilder.setOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
60	[BUG]  [BUGGY]  try  {  [Delete]  catch(final  Throwable  t)  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  [Delete]  catch(final  Throwable  t)  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  {  [Delete]  catch(final  Throwable  t)  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
61	[BUG]  [BUGGY]  try  {  }  catch(final  Throwable  t)  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  }  catch(final  Throwable  t)  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  {  }  catch(final  Throwable  t)  {  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
62	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    ibuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	18	None	add
63	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  optionbuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  optionbuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    ibuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  optionbuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	18	None	add
64	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.get();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.get();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    ibuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  ibuilder  =(Option)i.get();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	18	None	add
65	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  options.get(i.next()));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)i,  options.get(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  options.get(i.next()));	  gbuilder.addOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
66	[BUG]  [BUGGY]  gbuilder.addOption((  Option)options,  i.next());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)options,  i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)options,  i.next());	  gbuilder.addOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
67	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  options.get(i.next());  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)i,  options.get(i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  options.get(i.next());	  gbuilder.addOption((    Option)i,    options.next());    	non-compiled	[CE]  ')'  expected	4	None	replace
68	[BUG]  [BUGGY]  Option  option  =(OptionOption)i.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(OptionOption)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(OptionOption)i.next();	  OptionOption    option    =(OptionOption)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	49	None	replace
69	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)this.options.next();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(OptionOption)this.options.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)this.options.next();	  OptionOption    option    =(OptionOption)i.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
70	[BUG]  [BUGGY]  gbuilder.addOption((  Option)options.get(i.next()));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)options.get(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)options.get(i.next()));	  gbuilder.addOption((    Option)options.next());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
71	[BUG]  [BUGGY]  options.add((  Option)i.next(),  option);  [CE]  no  suitable  method  found  for  add(Option,Option)  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options.add((  Option)i.next(),  option);  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options.add((  Option)i.next(),  option);	  options.add((    Option)i.next());    	non-compiled	[CE]  no  suitable  method  found  for  add(Option,Option)	43	None	replace
72	[BUG]  [BUGGY]  Options  option  =(Option)i.next();  [CE]  cannot  find  symbol  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Options  option  =(Option)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Options  option  =(Option)i.next();	  options.add((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
73	[BUG]  [BUGGY]  OptionOption  option  =(Option)options.get(i);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(Option)options.get(i);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(Option)options.get(i);	  OptionOption    option    =(Option)options.next();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
74	[BUG]  [BUGGY]  gbuilder.withOption(option.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption(option.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption(option.next());	  gbuilder.withOption(i.next());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
75	[BUG]  [BUGGY]  gbuilder.withOption(i.next(),  options);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption(i.next(),  options);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption(i.next(),  options);	  gbuilder.withOption(i.next());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	34	None	replace
76	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  options.get(i.next()));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)i,  options.get(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  options.get(i.next()));	  gbuilder.setOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
77	[BUG]  [BUGGY]  gbuilder.setOption((  Option)options,  i.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)options,  i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)options,  i.next());	  gbuilder.setOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
78	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  options.get(i.next());  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)i,  options.get(i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  options.get(i.next());	  gbuilder.setOption((    Option)i,    options.next());    	non-compiled	[CE]  ')'  expected	12	None	replace
79	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  null);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  null);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  null);	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	1	None	replace
80	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options,  i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options,  i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options,  i.next());	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	1	None	replace
81	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options).create();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options).create();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options).create();	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	1	None	replace
82	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options.add((  Option)i.next());  options.add((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	options.add((    Option)i.next());    options.add((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	42	1	add
83	[BUG]  [BUGGY]  options.add((  Option)i.next());  options.add((  Option)i.next());  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options.add((  Option)i.next());  options.add((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options.add((    Option)i.next());    options.add((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	42	1	add
84	[BUG]  [BUGGY]  options.add((  Option)i.next());  Options.add((  Option)i.next());  [CE]  cannot  find  symbol  Options  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options.add((  Option)i.next());  Options.add((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options.add((    Option)i.next());    Options.add((  Option)i.next());	  	non-compiled	[CE]  cannot  find  symbol  Options	42	None	add
85	[BUG]  [BUGGY]  options.add((  Option)i.next());  Option  option  =(  Option)i.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options.add((  Option)i.next());  Option  option  =(  Option)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options.add((    Option)i.next());    Option  option  =(  Option)i.next();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	42	None	add
86	[BUG]  [BUGGY]  options.add((  Option)i.next());  option.add((  Option)i.next());  [CE]  cannot  find  symbol  [FE]          NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options.add((  Option)i.next());  option.add((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options.add((    Option)i.next());    option.add((  Option)i.next());	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
87	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)options.get(i);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(OptionOption)options.get(i);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)options.get(i);	  OptionOption    option    =(OptionOption)options.next();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
88	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)options.get(i.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(OptionOption)options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)options.get(i.next());	  OptionOption    option    =(OptionOption)options.next();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
89	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    abuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	20	None	add
90	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    abuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	20	None	add
91	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.get();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.get();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    abuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.get();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	20	None	add
92	[BUG]  [BUGGY]  option  =(Option)options.next();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)options.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	option  =(Option)options.next();	  option    =(Option)i.next();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
93	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i,  i.next());  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i,  i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i,  i.next());	  DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)options.get(i.next());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
94	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  abuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	Option  abuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    abuilder    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	21	1	replace
95	[BUG]  [BUGGY]  Option  abuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  abuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  abuilder  =(Option)i.next();	          Option    obuilder    =(Option)i.next();    Option    abuilder    =(Option)i.next();    	compilable	  [FE]  NoSuchElementException  	21	1	replace
96	[BUG]  [BUGGY]  parentBuilder.withOption((  Parent)i,  options.next());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  parentBuilder.withOption((  Parent)i,  options.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Parent)i,  options.next());	  parentBuilder.withOption((    Parent)i.next());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
97	[BUG]  [BUGGY]  parentBuilder.withOption((  Parent)i,  gbuilder.next());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  parentBuilder.withOption((  Parent)i,  gbuilder.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Parent)i,  gbuilder.next());	  parentBuilder.withOption((    Parent)i.next());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
98	[BUG]  [BUGGY]  parentBuilder.withOption((  Parent)parent,  i.next());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  parentBuilder.withOption((  Parent)parent,  i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Parent)parent,  i.next());	  parentBuilder.withOption((    Parent)i.next());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
99	[BUG]  [BUGGY]  Option  obuilder  =(Option)options.get(i.next());  [CE]  cannot  find  symbol  [FE]          NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  obuilder  =(Option)options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  obuilder  =(Option)options.get(i.next());	  Option    obuilder    =(Option)options.next();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
100	[BUG]  [BUGGY]  Option  obuilder  =(Option)options.get(i);  [CE]  cannot  find  symbol  [FE]            NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  obuilder  =(Option)options.get(i);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  obuilder  =(Option)options.get(i);	  Option    obuilder    =(Option)options.next();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
101	[BUG]  [BUGGY]  final  Iterator  i  =  options.iterator();  [CE]  variable  i  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Iterator  i  =  options.iterator();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  Iterator  i  =  options.iterator();	  if(i.hasNext())    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    else    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    	non-compiled	[CE]  variable  i  is  already  defined  in  method  create()	54	None	replace
102	[BUG]  [BUGGY]  final  Option  option  =(Option)i.next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  Option  option  =(Option)i.next();	  if(i.hasNext())    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    else    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	54	None	replace
103	[BUG]  [BUGGY]  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  inconvertible  types	29	None	replace
104	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder    i    =(DefaultOptionBuilder)i.next();    	compilable	  [FE]  ClassCastException  	59	1	replace
105	[BUG]  [BUGGY]  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder    i    =(DefaultOptionBuilder)i.next();    	compilable	  [FE]  ClassCastException  	59	1	replace
106	[BUG]  [BUGGY]  gbuilder.withOption((  Options)i,  options.get(i.next()));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Options)i,  options.get(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Options)i,  options.get(i.next()));	  gbuilder.withOption((    Options)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
107	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i,  options.get(i.next()));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)i,  options.get(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i,  options.get(i.next()));	  gbuilder.withOption((    Options)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
108	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	8	None	add
109	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    final  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	compilable	  [FE]  ClassCastException  	8	1	add
110	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    final  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	compilable	  [FE]  ClassCastException  	8	1	add
111	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  Final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  Final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    Final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  ';'  expected	8	None	add
112	[BUG]  [BUGGY]  gbuilder.withOption((  Option)options,  i.next());  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)options,  i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)options,  i.next());	  gbuilder.withOption((    Option)i,    options.next());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	41	None	replace
113	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i,  options.get(i.next());  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)i,  options.get(i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i,  options.get(i.next());	  gbuilder.withOption((    Option)i,    options.next());    	non-compiled	[CE]  ')'  expected	41	None	replace
114	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    oBuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	68	None	add
115	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [CE]  variable  oBuilder  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    oBuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  oBuilder  is  already  defined  in  method  create()	68	None	add
116	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)options.next();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)options.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder  abuilder  =(GroupBuilder)options.next();	  GroupBuilder    abuilder    =(GroupBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
117	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)options.get(i.next());  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)options.get(i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder  abuilder  =(GroupBuilder)options.get(i.next());	  GroupBuilder    abuilder    =(GroupBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
118	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)this.options.get(i.next());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)this.options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)this.options.get(i.next());	  DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)this.options.get(i);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
119	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.  [CE]  ')'  expected  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.	  	non-compiled	[CE]  ')'  expected	64	None	add
120	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.  [CE]  ')'  expected  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.	  	non-compiled	[CE]  ')'  expected	64	None	add
121	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)  [CE]  ')'  expected  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)	  	non-compiled	[CE]  ')'  expected	64	None	add
122	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.with  [CE]  ';'  expected  [FE]          NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.with  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.with	  	non-compiled	[CE]  ';'  expected	64	None	add
123	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.with  [CE]  ';'  expected  [FE]            NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.with  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.with	  	non-compiled	[CE]  ';'  expected	64	None	add
124	[BUG]  [BUGGY]          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                DefaultOptionBuilder        obuilder        =(DefaultOptionBuilder)i.next();        DefaultOptionBuilder    ibuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	38	None	add
125	[BUG]  [BUGGY]          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [CE]  variable  ibuilder  is  already  defined  in  method  create()  [FE]      ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                DefaultOptionBuilder        obuilder        =(DefaultOptionBuilder)i.next();        DefaultOptionBuilder    ibuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  variable  ibuilder  is  already  defined  in  method  create()	38	None	add
126	[BUG]  [BUGGY]  gbuilder.setOption((  Option)options.get(i.next()));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)options.get(i.next()));  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)options.get(i.next()));	  gbuilder.setOption((    Option)options.next());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
127	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(index,  i.next());  [CE]  cannot  find  symbol  index  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(index,  i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(index,  i.next());	  DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)options.get(i.next());    	non-compiled	[CE]  cannot  find  symbol  index	55	None	replace
128	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  obuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	GroupBuilder  obuilder  =(GroupBuilder)i.next();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ClassCastException  	46	1	replace
129	[BUG]  [BUGGY]  GroupBuilder  obuilder  =(GroupBuilder)i.next();  [FE]  ClassCastException  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  obuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder  obuilder  =(GroupBuilder)i.next();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ClassCastException  	46	1	replace
130	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	30	None	add
131	[BUG]  [BUGGY]  Option  option  =  options.get(i.next(),  options);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =  options.get(i.next(),  options);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =  options.get(i.next(),  options);	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	1	None	replace
132	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options;  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options;  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options;	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  ')'  expected	1	None	replace
133	[BUG]  [BUGGY]  Options  option  =(Option)options.get(i.next(),  options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Options  option  =(Option)options.get(i.next(),  options);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Options  option  =(Option)options.get(i.next(),  options);	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
134	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i.next());  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)options.get(i.next());	  final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
135	[BUG]  [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)option.get(i);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)option.get(i);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)option.get(i);	  DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.get(option);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
136	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  iBuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  iBuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    ibuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  iBuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	18	None	add
137	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  ibuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    ibuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	18	None	add
138	[BUG]  [BUGGY]  gbuilder.withOption(option,  i.next());  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption(option,  i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption(option,  i.next());	  gbuilder.withOption(i.next());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	34	None	replace
139	[BUG]  [BUGGY]  gbuilder.withOption(i.next(),  option);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption(i.next(),  option);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption(i.next(),  option);	  gbuilder.withOption(i.next());    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	34	None	replace
140	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.get();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.get();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    oBuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.get();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	68	None	add
141	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    oBuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  option  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	68	None	add
142	[BUG]  [BUGGY]  gbuilder.setOption((  Option)options.get(i.next());  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)options.get(i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)options.get(i.next());	  gbuilder.setOption((    Option)options.next());    	non-compiled	[CE]  ')'  expected	13	None	replace
143	[BUG]  [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.get(i.next());	  DefaultOptionBuilder    option    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	70	None	replace
144	[BUG]  [BUGGY]  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.setOption((    Option)i.next());    }    	non-compiled	[CE]  inconvertible  types	66	None	replace
145	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  option.clone());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)i,  option.clone());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  option.clone());	  gbuilder.addOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
146	[BUG]  [BUGGY]  parentBuilder.withOption((  Parent)i,  option.next());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  parentBuilder.withOption((  Parent)i,  option.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Parent)i,  option.next());	  parentBuilder.withOption((    Parent)i.next());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
147	[BUG]  [BUGGY]  OptionOption  option  =(Option)options.get(i.next());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(Option)options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(Option)options.get(i.next());	  OptionOption    option    =(Option)options.next();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
148	[BUG]  [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                      ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.get(i);  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  option  =(DefaultOptionBuilder)options.get(i);	  DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.get(options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	16	None	replace
149	[BUG]  [BUGGY]          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  OptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  OptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                DefaultOptionBuilder        obuilder        =(DefaultOptionBuilder)i.next();        DefaultOptionBuilder    ibuilder    =(DefaultOptionBuilder)i.next();    OptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  DefaultOptionBuilder  ibuilder  =(DefaultOptionBuilder)i.next();	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
150	[BUG]  [BUGGY]  gbuilder.addOption((  Option)options.get(i.next());  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)options.get(i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)options.get(i.next());	  gbuilder.addOption((    Option)options.next());    	non-compiled	[CE]  ')'  expected	5	None	replace
151	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	24	1	add
152	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	24	1	add
153	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	24	1	add
154	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());	  	compilable	  [FE]  NoSuchElementException  	24	1	add
155	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gBuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [CE]  cannot  find  symbol  gBuilder  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  gBuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    gBuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());	  	non-compiled	[CE]  cannot  find  symbol  gBuilder	24	None	add
156	[BUG]  [BUGGY]  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [CE]  inconvertible  types  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if((  Option)i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.next())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  inconvertible  types	26	None	replace
157	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  options.clone());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)i,  options.clone());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  options.clone());	  gbuilder.setOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
158	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  options.clone());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)i,  options.clone());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  options.clone());	  gbuilder.addOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
159	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
160	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(option  ==  null)  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
161	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i,  options.clone());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)i,  options.clone());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i,  options.clone());	  gbuilder.withOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
162	[BUG]  [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  might  not  have  been  initialized  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(option  ==  null)  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(option  ==  null)  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((    Option)i.next());    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	25	None	replace
163	[BUG]  [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [CE]  variable  option  might  not  have  been  initialized  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(option!=  null)  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((    Option)i.next());    	non-compiled	[CE]  variable  option  might  not  have  been  initialized	25	None	replace
164	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)option.next();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(OptionOption)option.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)option.next();	  OptionOption    option    =(OptionOption)i.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
165	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  [CE]  illegal  start  of  expression  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
166	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i  [CE]  ')'  expected  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i	  	non-compiled	[CE]  ')'  expected	64	None	add
167	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.previous());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.previous());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.previous());	  Option    option    =(Option)options.get(i);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	58	None	replace
168	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if((  Option)i.next()!=  null)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if((  Option)i.next()!=  null)  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  NoSuchElementException  	29	1	replace
169	[BUG]  [BUGGY]  if((  Option)i.next()!=  null)  {  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if((  Option)i.next()!=  null)  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if((  Option)i.next()!=  null)  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  NoSuchElementException  	29	1	replace
170	[BUG]  [BUGGY]  DefaultOptionBuilder  i  =(DefaultOptionBuilder)i.next();  [CE]  variable  i  is  already  defined  in  method  create()  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  DefaultOptionBuilder  i  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	DefaultOptionBuilder  i  =(DefaultOptionBuilder)i.next();	          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder    i    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  variable  i  is  already  defined  in  method  create()	59	None	replace
171	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  [Delete]  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	[Delete]	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
172	[BUG]  [BUGGY]  parentBuilder.withOption((  Property)i.next());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  parentBuilder.withOption((  Property)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	parentBuilder.withOption((  Property)i.next());	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
173	[BUG]  [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.WithOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(i.hasNext())  {  gbuilder.WithOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(i.hasNext())        {        gbuilder.withOption((        Option)i.next());        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(i.hasNext())  {  gbuilder.WithOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
174	[BUG]  [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next());  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	final    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    final  DefaultOptionBuilder  obuilder  =(DefaultOptionBuilder)i.next());	  	non-compiled	[CE]  ';'  expected	8	None	add
175	[BUG]  [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  [CE]  '{'  expected  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  '{'  expected	45	None	replace
176	[BUG]  [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  [CE]  '{'  expected  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  gbuilder.withOption((  Option)i.next());	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  '{'  expected	45	None	replace
177	[BUG]  [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  e.printStackTrace();  [CE]  '{'  expected  [FE]        NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  e.printStackTrace();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  e.printStackTrace();	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  '{'  expected	45	None	replace
178	[BUG]  [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  catch(Throwable  t)  {  [CE]  '{'  expected  [FE]          NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  catch(Throwable  t)  {  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  gbuilder.withOption((  Option)i.next());  }  catch(Throwable  t)  {	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  '{'  expected	45	None	replace
179	[BUG]  [BUGGY]  OptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionBuilder  obuilder  =(DefaultOptionBuilder)i.next();	          DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    DefaultOptionBuilder    obuilder    =(DefaultOptionBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
180	[BUG]  [BUGGY]  if(option.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  else  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(option.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  else  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(option.hasNext())  {  Option  option  =(Option)i.next();  gbuilder.withOption(option);  }  else  {  gbuilder.reset();  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {	  if(i.hasNext())    {    Option    option    =(Option)i.next();    gbuilder.withOption(option);    }    else    {    gbuilder.reset();    for(final    Iterator    i    =    options.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
181	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next());  [CE]  ';'  expected  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  abuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    abuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  abuilder  =(Option)i.next());	  	non-compiled	[CE]  ';'  expected	20	None	add
182	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  illegal  start  of  expression  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.withOption((  Option)i.next());  }  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.withOption((    Option)i.next());    }    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
183	[BUG]  [BUGGY]  gbuilder.withOption((  Option)i,  options.cloneTree());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.withOption((  Option)i,  options.cloneTree());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.withOption((  Option)i,  options.cloneTree());	  gbuilder.withOption((    Option)i,    options.next());    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	try  {  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
185	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  {  gbuilder.withOption((  Option)i.next());  }  catch(final  Throwable  t)  {  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
186	[BUG]  [BUGGY]  try  ==  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [CE]  '{'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	non-compiled	[CE]  '{'  expected	46	None	replace
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	try  {  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
188	[BUG]  [BUGGY]  try  {  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  {  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  }  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  {  gbuilder.withOption((  Option)i.next());  }  catch(Exception  e)  {  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    If(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
189	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	24	1	add
190	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }	  	compilable	  [FE]  NoSuchElementException  	24	1	add
191	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
192	[BUG]  [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          gbuilder.withOption((    Option)i.next());    gbuilder.withOption((  Option)i.next());  if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                gbuilder.withOption((        Option)i.next());        gbuilder.withOption((    Option)i.next());    if(i.hasNext())  {  gbuilder.withOption((  Option)i.next());  gbuilder.withOption((  Option)i.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
193	[BUG]  [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }  [CE]  '{'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  try  ==  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	try  ==  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.addOption((  Option)i.next());  }	  if(i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.addOption((    Option)i.next());    }    	non-compiled	[CE]  '{'  expected	63	None	replace
194	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  OptionBuilder  abuilder  =(GroupBuilder)i.next();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)i.next();  OptionBuilder  abuilder  =(GroupBuilder)i.next();  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder    abuilder    =(GroupBuilder)i.next();    OptionBuilder  abuilder  =(GroupBuilder)i.next();	  	non-compiled	[CE]  cannot  find  symbol	60	None	add
195	[BUG]  [BUGGY]  option.withOption((  Option)i.next());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option.withOption((  Option)i.next());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	option.withOption((  Option)i.next());	  parentBuilder.withOption((    Option)i.next());    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
196	[BUG]  [BUGGY]  options  =(Option)i.next();  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  options  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	options  =(Option)i.next();	  option    =(Option)i.next();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	48	None	replace
197	[BUG]  [BUGGY]  gbuilder.setOption((  Option)i,  option.cloneTree());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.setOption((  Option)i,  option.cloneTree());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.setOption((  Option)i,  option.cloneTree());	  gbuilder.setOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
198	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.iterator());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.iterator());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options.iterator());	  Option    option    =(Option)options.get(i.next(),    options.size());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	3	None	replace
199	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]        NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  gbuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	Option  gbuilder  =(Option)i.next();	  Option    obuilder    =(Option)option.next();    	compilable	  [FE]  NoSuchElementException  	56	1	replace
200	[BUG]  [BUGGY]  Option  gbuilder  =(Option)i.next();  [FE]  NoSuchElementException  [FE]        NoSuchElementException      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  gbuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  gbuilder  =(Option)i.next();	  Option    obuilder    =(Option)option.next();    	compilable	  [FE]  NoSuchElementException  	56	1	replace
201	[BUG]  [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)options.get(i);  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  GroupBuilder  abuilder  =(GroupBuilder)options.get(i);  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	GroupBuilder  abuilder  =(GroupBuilder)options.get(i);	  GroupBuilder    abuilder    =(GroupBuilder)i.next();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
202	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)options.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  OptionOption  option  =(OptionOption)options.iterator();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	OptionOption  option  =(OptionOption)options.iterator();	  OptionOption    option    =(OptionOption)options.next();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
203	[BUG]  [BUGGY]  gbuilder.addOption((  Option)i,  option.cloneTree());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  gbuilder.addOption((  Option)i,  option.cloneTree());  [BUGGY]      }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	gbuilder.addOption((  Option)i,  option.cloneTree());	  gbuilder.addOption((    Option)i,    option.next());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
204	[BUG]  [BUGGY]  Option  option  =  options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]              ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =  options.get(i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =  options.get(i.next());	  Option    option    =(Option)options.get(i.next()    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	2	None	replace
205	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next());  [CE]  ';'  expected  [FE]    NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    oBuilder    =(Option)i.next();    Option  obuilder  =(Option)i.next();  Option  oBuilder  =(Option)i.next());	  	non-compiled	[CE]  ';'  expected	68	None	add
206	[BUG]  [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.get();  Option  oBuilder  =(Option)i.next();  [CE]  variable  obuilder  is  already  defined  in  method  create()  [FE]      NoSuchElementException    [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]          Option    obuilder    =(Option)i.next();    Option  oBuilder  =(Option)i.next();  Option  obuilder  =(Option)i.get();  Option  oBuilder  =(Option)i.next();  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	                Option        obuilder        =(Option)i.next();        Option    oBuilder    =(Option)i.next();    Option  obuilder  =(Option)i.get();  Option  oBuilder  =(Option)i.next();	  	non-compiled	[CE]  variable  obuilder  is  already  defined  in  method  create()	68	None	add
207	[BUG]  [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.cloneTree());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.get(i.next(),  options.cloneTree());  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	Option  option  =(Option)options.get(i.next(),  options.cloneTree());	  Option    option    =(Option)options.get(i.next(),    options);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	1	None	replace
208	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	add	if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	timeout	29	1	replace
209	[BUG]  [BUGGY]  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    	compilable	timeout	29	1	replace
210	[BUG]  [BUGGY]  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  Option  create()  {  final  Option  option;  if  (options.size()  ==  1)  {  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }  [BUGGY]      gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	82	82	1	replace	if(!(i.hasNext()))  {  gbuilder.withOption((  Option)i.next());  }  else  {  gbuilder.setOption((  Option)i.next());  }	          gbuilder.withOption((    Option)i.next());    if((    Option)i.hasNext())    {    gbuilder.withOption((    Option)i.next());    }    else    {    gbuilder.setOption((    Option)i.next());    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
