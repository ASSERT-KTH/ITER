bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  opt  =  type.charAt(0);  [CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  String  opt  =  type.charAt(0);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  String  opt  =  type.charAt(0);	          final    char    opt    =    type.charAt(0);    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)	12	None	replace
2	[BUG]  [BUGGY]  final  char  opt  =  type.charAt(type.length()  -  1);  [CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  char  opt  =  type.charAt(type.length()  -  1);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  char  opt  =  type.charAt(type.length()  -  1);	          final    char    opt    =    type.charAt(0);    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)	12	None	replace
3	[BUG]  [BUGGY]  final  char  opt  =  type.charAt(1);  [CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  char  opt  =  type.charAt(1);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  char  opt  =  type.charAt(1);	          final    char    opt    =    type.charAt(0);    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)	12	None	replace
4	[BUG]  [BUGGY]  abuilder.withDelimiter(validator(type));  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withDelimiter(validator(type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withDelimiter(validator(type));	  abuilder.withDelimiter(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
5	[BUG]  [BUGGY]  abuilder.withDelimiter(validator(opt),  type);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withDelimiter(validator(opt),  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withDelimiter(validator(opt),  type);	  abuilder.withDelimiter(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
6	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(type,  opt);  [CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(type,  opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(type,  opt);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;	62	None	replace
7	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt,  type);  [CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt,  type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(opt,  type);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;	62	None	replace
8	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(type);  [CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(type);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;	62	None	replace
9	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt,  null);  [CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt,  null);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(opt,  null);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;	62	None	replace
10	[BUG]  [BUGGY]  abuilder.withOption(type,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(type,  required);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
11	[BUG]  [BUGGY]  abuilder.withOption(opt,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  preferred);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  preferred);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	45	None	replace
12	[BUG]  [BUGGY]  abuilder.set(opt,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  preferred);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  preferred);	  abuilder.set(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	43	None	replace
13	[BUG]  [BUGGY]  abuilder.set(opt,  opt,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  opt,  required);	  abuilder.set(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
14	[BUG]  [BUGGY]  abuilder.set(opt  +  1,  type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt  +  1,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt  +  1,  type);	  abuilder.set(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
15	[BUG]  [BUGGY]  abuilder.set(opt  +  2);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt  +  2);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt  +  2);	  abuilder.set(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
16	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder1();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder1();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder1();	  OptionBuilder    abuilder    =    options.getOptionBuilder2();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
17	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder2();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder2();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  option.getOptionBuilder2();	  OptionBuilder    abuilder    =    options.getOptionBuilder2();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
18	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
19	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
20	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
21	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
22	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
23	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
24	[BUG]  [BUGGY]  abuilder.withOption(opt,  type,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  type,  required);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
25	[BUG]  [BUGGY]  abuilder.withOption(type,  opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(type,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(type,  opt);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
26	[BUG]  [BUGGY]  abuilder.withOption(opt,  type));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  type));	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  ';'  expected	40	None	replace
27	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.convertToString();  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  opt.convertToString();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  opt.convertToString();	  ArgumentBuilder    abuilder    =    gbuilder.convertToString();    	non-compiled	[CE]  char  cannot  be  dereferenced	77	None	replace
28	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.convertToString();  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  type.convertToString();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  type.convertToString();	  ArgumentBuilder    abuilder    =    gbuilder.convertToString();    	non-compiled	[CE]  char  cannot  be  dereferenced	77	None	replace
29	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  argument.convertToString();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  argument.convertToString();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  argument.convertToString();	  ArgumentBuilder    abuilder    =    gbuilder.convertToString();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
30	[BUG]  [BUGGY]  parent!=  null  &&  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent!=  null  &&  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent!=  null  &&  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
31	[BUG]  [BUGGY]  parent!=  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent!=  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent!=  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
32	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
33	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
34	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
35	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
36	[BUG]  [BUGGY]  abuilder.withValidator(type,  opt,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(type,  opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(type,  opt,  required);	  abuilder.withValidator(type,    opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	34	None	replace
37	[BUG]  [BUGGY]  abuilder.withValidator(option,  type);  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(option,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(option,  type);	  abuilder.withValidator(type,    opt);    	non-compiled	[CE]  cannot  find  symbol  option	34	None	replace
38	[BUG]  [BUGGY]  abuilder.withValidator(validator(type,  opt));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(type,  opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(type,  opt));	  abuilder.withValidator(type,    opt);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	34	None	replace
39	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	74	1	add
40	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	74	1	add
41	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	74	1	add
42	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	74	1	add
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	74	1	add
44	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	74	1	add
45	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt  >>  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incompatible  types	74	None	add
46	[BUG]  [BUGGY]  abuilder.withValidator(opt,  argument,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  argument,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  argument,  type);	  abuilder.withValidator(opt,    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	33	None	replace
47	[BUG]  [BUGGY]  abuilder.withValidator(opt,  argument,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  argument,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  argument,  required);	  abuilder.withValidator(opt,    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	33	None	replace
48	[BUG]  [BUGGY]  abuilder.withRequired(validator(opt));  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withRequired(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withRequired(validator(opt));	  abuilder.withRequired(validator(type));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
49	[BUG]  [BUGGY]  abuilder.withValidator(opt,  type,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  type,  required);	  abuilder.withValidator(opt,    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	32	None	replace
50	[BUG]  [BUGGY]  abuilder.withValidator(opt,  type,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  type,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  type,  argument);	  abuilder.withValidator(opt,    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	32	None	replace
51	[BUG]  [BUGGY]  abuilder.withValidator(opt,  type,  options);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  type,  options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  type,  options);	  abuilder.withValidator(opt,    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	32	None	replace
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	71	1	replace
53	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	71	1	replace
54	[BUG]  [BUGGY]  parent  ==  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent  ==  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent  ==  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	65	None	replace
55	[BUG]  [BUGGY]  final  parent  ==  null  ||  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  parent  ==  null  ||  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  parent  ==  null  ||  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
56	[BUG]  [BUGGY]  abuilder.setOption(optimize);  [CE]  cannot  find  symbol  optimize  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.setOption(optimize);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.setOption(optimize);	  abuilder.setOption(type);    	non-compiled	[CE]  cannot  find  symbol  optimize	15	None	replace
57	[BUG]  [BUGGY]  abuilder.withOption(options,  type,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(options,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(options,  type,  required);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
58	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.withOption(opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.withOption(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.withOption(opt,  type);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
59	[BUG]  [BUGGY]  abuilder.withOptional(opt,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(opt,  type);	  abuilder.withOptional(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
60	[BUG]  [BUGGY]  abuilder.withOptional(opt,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(opt,  preferred);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(opt,  preferred);	  abuilder.withOptional(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	24	None	replace
61	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt);	  OptionBuilder    abuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
62	[BUG]  [BUGGY]  parent  ==  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent  ==  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent  ==  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	67	None	replace
63	[BUG]  [BUGGY]  final  parent  ==  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  parent  ==  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  parent  ==  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
64	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  'n'  ||  type  ==  'r')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	57	1	replace
65	[BUG]  [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  'n'  ||  type  ==  'r')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  'n'  ||  type  ==  'r')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	57	1	replace
66	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(opt);	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
67	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.createOptionBuilder();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  option.createOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  option.createOptionBuilder();	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
68	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(0);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(0);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(0);	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	69	1	replace
70	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	69	1	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  abuilder.withValidator(validator(type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	                abuilder.withValidator(validator(type));    abuilder.withValidator(validator(type));	  	compilable	  [FE]  ComparisonFailure  	10	1	add
72	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  abuilder.withValidator(validator(type));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  abuilder.withValidator(validator(type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    abuilder.withValidator(validator(type));	  	compilable	  [FE]  ComparisonFailure  	10	1	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	                abuilder.withValidator(validator(type));    if(type!=  '.')  {  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	10	1	add
74	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(type!=  '.')  {  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	10	1	add
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	                abuilder.withValidator(validator(type));    if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	10	1	add
76	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	10	1	add
77	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(type!=  '.')  {  abuilder.withValidator(validator(type));  }  else  {  abuilder.withOption(opt);  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
78	[BUG]  [BUGGY]  abuilder.withOptional(type)  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(type)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(type)	  abuilder.withOptional(opt)    	non-compiled	[CE]  ';'  expected	52	None	replace
79	[BUG]  [BUGGY]  abuilder.withOptional(option)  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(option)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(option)	  abuilder.withOptional(opt)    	non-compiled	[CE]  ';'  expected	52	None	replace
80	[BUG]  [BUGGY]  abuilder.withOptional(validator(type));  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(validator(type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(validator(type));	  abuilder.withOptional(opt)    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
81	[BUG]  [BUGGY]  abuilder.withOption(validator(opt));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(validator(opt));	          abuilder.withValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
82	[BUG]  [BUGGY]  abuilder.withValidator(1);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(1);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(1);	          abuilder.withValidator(validator(type));    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	11	None	replace
83	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  type.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  type.getOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  type.getOptionBuilder();	  OptionBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
84	[BUG]  [BUGGY]  abuilder.set(opt,  type,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  type,  required);	  abuilder.set(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
85	[BUG]  [BUGGY]  abuilder.set(opt,  type,  needed);  [CE]  cannot  find  symbol  needed  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  type,  needed);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  type,  needed);	  abuilder.set(opt,    type);    	non-compiled	[CE]  cannot  find  symbol  needed	42	None	replace
86	[BUG]  [BUGGY]  abuilder.set(opt,  type,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  type,  preferred);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  type,  preferred);	  abuilder.set(opt,    type);    	non-compiled	[CE]  cannot  find  symbol  preferred	42	None	replace
87	[BUG]  [BUGGY]  abuilder.withValidator(opt,  gbuilder);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  gbuilder);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  gbuilder);	  abuilder.withValidator(gbuilder,    opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	73	None	replace
88	[BUG]  [BUGGY]  abuilder.withValidator(gbuilder,  opt,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(gbuilder,  opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(gbuilder,  opt,  type);	  abuilder.withValidator(gbuilder,    opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	73	None	replace
89	[BUG]  [BUGGY]  abuilder.withValidator(gbuilder,  opt,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(gbuilder,  opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(gbuilder,  opt,  required);	  abuilder.withValidator(gbuilder,    opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	73	None	replace
90	[BUG]  [BUGGY]  abuilder.withValidator(option,  gbuilder);  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(option,  gbuilder);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(option,  gbuilder);	  abuilder.withValidator(gbuilder,    opt);    	non-compiled	[CE]  cannot  find  symbol  option	73	None	replace
91	[BUG]  [BUGGY]  abuilder.withOption(optimized);  [CE]  cannot  find  symbol  optimized  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(optimized);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(optimized);	  abuilder.withOption(argument);    	non-compiled	[CE]  cannot  find  symbol  optimized	54	None	replace
92	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(type);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
93	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  opt.getOptionBuilder(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  opt.getOptionBuilder(option);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  opt.getOptionBuilder(option);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
94	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  type);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
95	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
96	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
97	[BUG]  [BUGGY]  allowValidation(type)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  allowValidation(type)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	allowValidation(type)  {	  allowValidation(opt)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
98	[BUG]  [BUGGY]  enableValidation(type)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  enableValidation(type)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	enableValidation(type)  {	  allowValidation(opt)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
99	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
100	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
101	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
102	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	56	None	add
103	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
104	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
105	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
106	[BUG]  [BUGGY]  abuilder.withArgument(validator(type));  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withArgument(validator(type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withArgument(validator(type));	  abuilder.withArgument(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
107	[BUG]  [BUGGY]  abuilder.withArgument(validator(opt),  required);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withArgument(validator(opt),  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withArgument(validator(opt),  required);	  abuilder.withArgument(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
108	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
109	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
110	[BUG]  [BUGGY]  try  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  '{'  expected  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  try  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	try  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  '{'  expected	75	None	replace
111	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  e)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  e)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	try  {  [Delete]  catch(NumberFormatException  e)  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
112	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOption(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  options.getOption(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  options.getOption(type);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
113	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  options.getOption(opt,  type);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
114	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  opt.getOption(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  opt.getOption(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  opt.getOption(option);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
115	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
116	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
117	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
118	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	68	None	add
119	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
120	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
121	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
122	[BUG]  [BUGGY]  enableValidator(type)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  enableValidator(type)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	enableValidator(type)  {	  allowValidator(opt)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
123	[BUG]  [BUGGY]  validateValidator(opt)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  validateValidator(opt)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	validateValidator(opt)  {	  allowValidator(opt)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
124	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(opt,  type);	          OptionBuilder    abuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
125	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(type);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(type);	          OptionBuilder    abuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
126	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(opt,  required);	          OptionBuilder    abuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
127	[BUG]  [BUGGY]  abuilder.withOption(options,  opt,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(options,  opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(options,  opt,  required);	  abuilder.withOption(options,    opt);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
128	[BUG]  [BUGGY]  abuilder.withOption(options,  opt,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(options,  opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(options,  opt,  type);	  abuilder.withOption(options,    opt);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
129	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	58	1	add
130	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	58	1	add
131	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	58	None	add
132	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
133	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
134	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	58	1	add
135	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	58	1	add
136	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
137	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
138	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
139	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
140	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
141	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  option.getOptionBuilder(opt);	  OptionBuilder    abuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
142	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.withType(gbuilder);  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  opt.withType(gbuilder);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  opt.withType(gbuilder);	  ArgumentBuilder    abuilder    =    gbuilder.withType(type);    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
143	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.withType(opt);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.withType(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.withType(opt);	  ArgumentBuilder    abuilder    =    gbuilder.withType(type);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
144	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.withType(gbuilder);  [CE]  char  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  type.withType(gbuilder);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  type.withType(gbuilder);	  ArgumentBuilder    abuilder    =    gbuilder.withType(type);    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
145	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.withType(type);  [CE]  char  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  opt.withType(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  opt.withType(type);	  ArgumentBuilder    abuilder    =    gbuilder.withType(type);    	non-compiled	[CE]  char  cannot  be  dereferenced	39	None	replace
146	[BUG]  [BUGGY]  abuilder.withOptional(required);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(required);	  abuilder.withOptional(option);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
147	[BUG]  [BUGGY]  abuilder.set(opt,  null);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  null);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  null);	  abuilder.set(opt,    argument);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
148	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  opt.toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  opt.toCharArray();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  opt.toCharArray();	  ArgumentBuilder    abuilder    =    opt.create();    	non-compiled	[CE]  char  cannot  be  dereferenced	37	None	replace
149	[BUG]  [BUGGY]  abuilder.withOptional(optional);  [CE]  cannot  find  symbol  optional  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(optional);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(optional);	  abuilder.withOptional(type);    	non-compiled	[CE]  cannot  find  symbol  optional	23	None	replace
150	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
151	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
152	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
153	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	7	None	add
154	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
155	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
156	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
157	[BUG]  [BUGGY]  enableValidator(opt)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  enableValidator(opt)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	enableValidator(opt)  {	  allowValidator(type)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
158	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	70	1	add
159	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	70	1	add
160	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
161	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  type)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  type)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  type)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
162	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	70	1	add
163	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	70	1	add
164	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt  >=  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt  >=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt  >=  opt)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
165	[BUG]  [BUGGY]  parent!=  null  &&  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent!=  null  &&  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent!=  null  &&  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
166	[BUG]  [BUGGY]  final  char  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  char  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  char  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	50	None	replace
167	[BUG]  [BUGGY]  abuilder.withOption(type)  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(type)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(type)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	46	None	replace
168	[BUG]  [BUGGY]  abuilder.withOption(option)  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(option)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(option)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	46	None	replace
169	[BUG]  [BUGGY]  abuilder.withOption(validator(type));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(validator(type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(validator(type));	  abuilder.withOption(opt)    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
170	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
171	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
172	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
173	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
174	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!='')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!='')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!='')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	4	None	add
175	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.with(validator(opt));  abuilder.withValidator(validator(opt));  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.with(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.with(validator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
176	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
177	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
178	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
179	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
180	[BUG]  [BUGGY]  parent  ==  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent  ==  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent  ==  null  &&  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	66	None	replace
181	[BUG]  [BUGGY]  final  parent  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  parent  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  parent  ==  null  ||  opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
182	[BUG]  [BUGGY]  gbuilder.setOption(argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  gbuilder.setOption(argument);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	gbuilder.setOption(argument);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
183	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  options.create();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  options.create();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  options.create();	  ArgumentBuilder    abuilder    =    argument.create();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
184	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  option.create();  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  option.create();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  option.create();	  ArgumentBuilder    abuilder    =    argument.create();    	non-compiled	[CE]  cannot  find  symbol  option	63	None	replace
185	[BUG]  [BUGGY]  abuilder.withRequired(opt);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withRequired(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withRequired(opt);	  abuilder.withRequired(required);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
186	[BUG]  [BUGGY]  abuilder.withRequired(option);  [CE]  cannot  find  symbol  option  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withRequired(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withRequired(option);	  abuilder.withRequired(required);    	non-compiled	[CE]  cannot  find  symbol  option	18	None	replace
187	[BUG]  [BUGGY]  allow(type)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  allow(type)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	allow(type)  {  throw  new  IllegalArgumentException( " ");  }	  allow(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	48	None	replace
188	[BUG]  [BUGGY]  validate(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  validate(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	validate(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allow(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	48	None	replace
189	[BUG]  [BUGGY]  approve(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  approve(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	approve(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allow(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	48	None	replace
190	[BUG]  [BUGGY]  allowNonEmpty(type)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  allowNonEmpty(type)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	allowNonEmpty(type)  {  throw  new  IllegalArgumentException( " ");  }	  allowNonEmpty(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	47	None	replace
191	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	5	None	replace
192	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
193	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
195	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
196	[BUG]  [BUGGY]  abuilder.setOption(options);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.setOption(options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.setOption(options);	  abuilder.setOption(op);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
197	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent  ==  null  ||  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent  ==  null  ||  opt  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '[')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	66	None	replace
198	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  argument);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  argument);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
199	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
200	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
201	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  ']')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  ']')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  ']')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
202	[BUG]  [BUGGY]  abuilder.set(opt,  opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  opt);	  abuilder.set(opt,    argument);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
203	[BUG]  [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(required)  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
204	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
205	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.withOption(opt,  type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  options.withOption(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  options.withOption(opt,  type);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
206	[BUG]  [BUGGY]  abuilder.withOptional(options);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(options);	  abuilder.withOptional(option);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
207	[BUG]  [BUGGY]  enableValidation(opt)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  enableValidation(opt)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	enableValidation(opt)  {	  allowValidation(opt)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
208	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.convertToString(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.convertToString(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.convertToString(opt);	  ArgumentBuilder    abuilder    =    gbuilder.convertToString();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
209	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
210	[BUG]  [BUGGY]  abuilder.withOption(opt,  null);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  null);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  null);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
211	[BUG]  [BUGGY]  abuilder.withOption(opt,  opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  opt);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
212	[BUG]  [BUGGY]  abuilder.withOption(opt,  argument);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  argument);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
213	[BUG]  [BUGGY]  abuilder.withOptional(options)  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(options)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(options)	  abuilder.withOptional(opt)    	non-compiled	[CE]  ';'  expected	52	None	replace
214	[BUG]  [BUGGY]  abuilder.withOption(options)  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(options)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(options)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	46	None	replace
215	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!='')  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  empty  character  literal	70	None	add
216	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
217	[BUG]  [BUGGY]  abuilder.withRequired(validator(option));  [CE]  cannot  find  symbol  option  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withRequired(validator(option));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withRequired(validator(option));	  abuilder.withRequired(validator(type));    	non-compiled	[CE]  cannot  find  symbol  option	19	None	replace
218	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
219	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
220	[BUG]  [BUGGY]  abuilder.setOption(argument);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.setOption(argument);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.setOption(argument);	  abuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
221	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  argument.withType(type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  argument.withType(type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  argument.withType(type);	  ArgumentBuilder    abuilder    =    gbuilder.withType(type);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
222	[BUG]  [BUGGY]  final  char  opt  =  type.charAt(2);  [CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  char  opt  =  type.charAt(2);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  char  opt  =  type.charAt(2);	          final    char    opt    =    type.charAt(0);    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)	12	None	replace
223	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder();	  OptionBuilder    abuilder    =    OptionBuilder.create();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
224	[BUG]  [BUGGY]  abuilder.set(opt  +  1,  argument);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt  +  1,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt  +  1,  argument);	  abuilder.set(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
225	[BUG]  [BUGGY]  abuilder.set(opt,  opt  +  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  opt  +  1);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  opt  +  1);	  abuilder.set(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
226	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  obuilder.create();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  obuilder.create();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  obuilder.create();	  ArgumentBuilder    abuilder    =    opt.create();    	non-compiled	[CE]  incompatible  types	37	None	replace
227	[BUG]  [BUGGY]  abuilder.withDelimiter(validator(opt),  preferred);  [CE]  cannot  find  symbol  preferred  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withDelimiter(validator(opt),  preferred);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withDelimiter(validator(opt),  preferred);	  abuilder.withDelimiter(validator(opt));    	non-compiled	[CE]  cannot  find  symbol  preferred	76	None	replace
228	[BUG]  [BUGGY]  enable(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  enable(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	enable(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allow(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	48	None	replace
229	[BUG]  [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '>')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
230	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
231	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
232	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
233	[BUG]  [BUGGY]  gbuilder.setOption(optimizer);  [CE]  cannot  find  symbol  optimizer  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  gbuilder.setOption(optimizer);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	gbuilder.setOption(optimizer);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol  optimizer	36	None	replace
234	[BUG]  [BUGGY]  obuilder.setOption(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  obuilder.setOption(opt);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	obuilder.setOption(opt);	  gbuilder.setOption(type);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
235	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
236	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	6	None	replace
237	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	67	None	replace
238	[BUG]  [BUGGY]  ParentBuilder  abuilder  ==  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ParentBuilder  abuilder  ==  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ParentBuilder  abuilder  ==  null  ||  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
239	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
240	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
242	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
243	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  ArgumentBuilder(opt.create());  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  new  ArgumentBuilder(opt.create());  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  new  ArgumentBuilder(opt.create());	  ArgumentBuilder    abuilder    =    argument.create();    	non-compiled	[CE]  char  cannot  be  dereferenced	63	None	replace
244	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  required);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  required);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
245	[BUG]  [BUGGY]  if(required)  {  abuilder.withValidator(validator(type));  if(required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(required)  {  abuilder.withValidator(validator(type));  if(required)  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(required)  {  abuilder.withValidator(validator(type));  if(required)  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
246	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  ']')  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  ']')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  ']')  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
247	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '+')  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '+')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '+')  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
248	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	65	None	replace
249	[BUG]  [BUGGY]  ParentBuilder  abuilder  ==  null  ||  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ParentBuilder  abuilder  ==  null  ||  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ParentBuilder  abuilder  ==  null  ||  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
250	[BUG]  [BUGGY]  abuilder.withRequired(options);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withRequired(options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withRequired(options);	  abuilder.withRequired(required);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
251	[BUG]  [BUGGY]  parent!=  null  &&  opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent!=  null  &&  opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent!=  null  &&  opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
252	[BUG]  [BUGGY]  aughtExceptionHandler.withValidator(validator(opt));  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  aughtExceptionHandler.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	aughtExceptionHandler.withValidator(validator(opt));	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	75	None	replace
253	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  parent!=  null  &&  parent  ==  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	parent!=  null  &&  parent  ==  opt)  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
254	[BUG]  [BUGGY]  abuilder.withArgument(validator(opt),  argument);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withArgument(validator(opt),  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withArgument(validator(opt),  argument);	  abuilder.withArgument(validator(opt));    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
255	[BUG]  [BUGGY]  abuilder.withArgument(validator(opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withArgument(validator(opt,  type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withArgument(validator(opt,  type));	  abuilder.withArgument(validator(opt));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	53	None	replace
256	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder();	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
257	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(options);	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
258	[BUG]  [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(required)  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
259	[BUG]  [BUGGY]  enableNonEmpty(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  enableNonEmpty(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	enableNonEmpty(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNonEmpty(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	47	None	replace
260	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(opt!='')  {  abuilder.withValidator(validator(type));  }  [CE]  empty  character  literal  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(opt!='')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(opt!='')  {  abuilder.withValidator(validator(type));  }	  	non-compiled	[CE]  empty  character  literal	10	None	add
261	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(opt!='')  {  abuilder.withValidator(validator(type));  }  else  {  abuilder.withOption(opt);  }  [CE]  empty  character  literal  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(opt!='')  {  abuilder.withValidator(validator(type));  }  else  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(opt!='')  {  abuilder.withValidator(validator(type));  }  else  {  abuilder.withOption(opt);  }	  	non-compiled	[CE]  empty  character  literal	10	None	add
262	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(opt!='')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(opt!='')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(opt!='')  {  abuilder.withValidator(validator(type));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  empty  character  literal	10	None	add
263	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
264	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt,  argument);  [CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  gbuilder.create(opt,  argument);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  gbuilder.create(opt,  argument);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  method  create  in  class  GroupBuilder  cannot  be  applied  to  given  types;	62	None	replace
265	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  gbuilder.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  gbuilder.getOptionBuilder();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  gbuilder.getOptionBuilder();	  OptionBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
266	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
267	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
268	[BUG]  [BUGGY]  abuilder.withOptional(opt,  optional);  [CE]  cannot  find  symbol  optional  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(opt,  optional);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(opt,  optional);	  abuilder.withOptional(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  optional	24	None	replace
269	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  options.getOption(opt,  required);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
270	[BUG]  [BUGGY]  abuilder.withValidator(type,  opt,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(type,  opt,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(type,  opt,  argument);	  abuilder.withValidator(type,    opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	34	None	replace
271	[BUG]  [BUGGY]  abuilder.withValidator(opt,  type,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  type,  arguments);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  type,  arguments);	  abuilder.withValidator(opt,    type);    	non-compiled	[CE]  cannot  find  symbol  arguments	32	None	replace
272	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(opt!='')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
273	[BUG]  [BUGGY]  ASTRequired.withRequired(validator(opt));  [CE]  cannot  find  symbol  ASTRequired  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ASTRequired.withRequired(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ASTRequired.withRequired(validator(opt));	  abuilder.withRequired(validator(type));    	non-compiled	[CE]  cannot  find  symbol  ASTRequired	19	None	replace
274	[BUG]  [BUGGY]  abuilder.withOptional(opt,  opt);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOptional(opt,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOptional(opt,  opt);	  abuilder.withOptional(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
275	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOptional(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  ';')  {  abuilder.withOptional(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  ';')  {  abuilder.withOptional(opt);  }	  abuilder.withOptional(opt)    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
276	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOptional(opt)    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
277	[BUG]  [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOptional(opt)    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
278	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOptional(opt)  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  ';')  {  abuilder.withOptional(opt)  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  ';')  {  abuilder.withOptional(opt)  }	  abuilder.withOptional(opt)    	non-compiled	[CE]  ';'  expected	52	None	replace
279	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt,  gbuilder));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt,  gbuilder));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt,  gbuilder));	  abuilder.withValidator(gbuilder,    opt);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	73	None	replace
280	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOption(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  abuilder  =  options.getOption(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  abuilder  =  options.getOption(opt);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
281	[BUG]  [BUGGY]  abuilder.withDelimiter(validator(opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withDelimiter(validator(opt,  type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withDelimiter(validator(opt,  type));	  abuilder.withDelimiter(validator(opt));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	76	None	replace
282	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
283	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
284	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '+')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '+')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '+')  {  abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
285	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(type));    	compilable	  [FE]  IllegalArgumentException  	11	1	replace
286	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	          abuilder.withValidator(validator(type));    	compilable	  [FE]  IllegalArgumentException  	11	1	replace
287	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }	          abuilder.withValidator(validator(type));    	compilable	  [FE]  ComparisonFailure  	11	1	replace
288	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  '[')  {  abuilder.withValidator(validator(type));  }	          abuilder.withValidator(validator(type));    	compilable	  [FE]  ComparisonFailure  	11	1	replace
289	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  ';')  {  abuilder.withOption(opt);  }	  abuilder.withOption(opt)    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
290	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt)  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt)  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  ';')  {  abuilder.withOption(opt)  }	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	46	None	replace
291	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  ';'  expected	4	None	add
292	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withOption(opt));  abuilder.withOption(validator(opt));  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withOption(opt));  abuilder.withOption(validator(opt));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withOption(opt));  abuilder.withOption(validator(opt));	  	non-compiled	[CE]  ';'  expected	4	None	add
293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(required)  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(required)  {  abuilder.withValidator(validator(type));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
294	[BUG]  [BUGGY]  if(required)  {  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(required)  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(required)  {  abuilder.withValidator(validator(type));  }	  abuilder.withValidator(validator(opt));    if(opt!=    '-')    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
295	[BUG]  [BUGGY]  gbuilder.setOption(optimize);  [CE]  cannot  find  symbol  optimize  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  gbuilder.setOption(optimize);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	gbuilder.setOption(optimize);	  gbuilder.setOption(type);    	non-compiled	[CE]  cannot  find  symbol  optimize	35	None	replace
296	[BUG]  [BUGGY]  abuilder.withValidator(gbuilder,  opt,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(gbuilder,  opt,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(gbuilder,  opt,  argument);	  abuilder.withValidator(opt,    argument);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	33	None	replace
297	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  null)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
298	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	70	1	add
299	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    opt)    {    abuilder.withValidator(validator(opt));    }    if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  if(opt!=  opt)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	70	1	add
300	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'e')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  'e')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  'e')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
301	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  't')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  't')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    'n')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  't')  {  abuilder.withValidator(validator(opt));  if(opt!=  'n')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
302	[BUG]  [BUGGY]  abuilder  =  gbuilder.create(opt,  type);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder  =  gbuilder.create(opt,  type);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder  =  gbuilder.create(opt,  type);	  ArgumentBuilder    abuilder    =    gbuilder.create(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	62	None	replace
303	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
304	[BUG]  [BUGGY]  if(opt!='')  {  abuilder.withValidator(validator(opt));  }  [CE]  empty  character  literal  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!='')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!='')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(opt!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  empty  character  literal	6	None	replace
305	[BUG]  [BUGGY]  ASTRequired.withOptional(opt);  [CE]  cannot  find  symbol  ASTRequired  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ASTRequired.withOptional(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ASTRequired.withOptional(opt);	  abuilder.withOptional(type);    	non-compiled	[CE]  cannot  find  symbol  ASTRequired	23	None	replace
306	[BUG]  [BUGGY]  abuilder.withOption(options,  options,  type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(options,  options,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(options,  options,  type);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
307	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  type.toCharArray();  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  type.toCharArray();  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  type.toCharArray();	  ArgumentBuilder    abuilder    =    type.create();    	non-compiled	[CE]  char  cannot  be  dereferenced	38	None	replace
308	[BUG]  [BUGGY]  abuilder.withValidator(opt,  opt,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(opt,  opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(opt,  opt,  type);	  abuilder.withValidator(opt,    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	32	None	replace
309	[BUG]  [BUGGY]  final  String  opt  =  type.charAt(1);  [CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  final  String  opt  =  type.charAt(1);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	final  String  opt  =  type.charAt(1);	          final    char    opt    =    type.charAt(0);    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  createOption(char,boolean,char)	12	None	replace
310	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt,  type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt,  type));	  abuilder.withValidator(type,    opt);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	34	None	replace
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(required)  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	                abuilder.withValidator(validator(type));    if(required)  {  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	10	1	add
312	[BUG]  [BUGGY]          abuilder.withValidator(validator(type));  if(required)  {  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]          abuilder.withValidator(validator(type));  if(required)  {  abuilder.withValidator(validator(type));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	                abuilder.withValidator(validator(type));    if(required)  {  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	10	1	add
313	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	try  {  [Delete]  catch(Throwable  t)  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
314	[BUG]  [BUGGY]  try  ==  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  '{'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  try  ==  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	try  ==  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  '{'  expected	75	None	replace
315	[BUG]  [BUGGY]  gbuilder.setOption(options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  gbuilder.setOption(options);  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	gbuilder.setOption(options);	  gbuilder.setOption(option);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
316	[BUG]  [BUGGY]  abuilder.withOption(opt,  type)  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withOption(opt,  type)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withOption(opt,  type)	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  ';'  expected	40	None	replace
317	[BUG]  [BUGGY]  validateValidator(type)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  validateValidator(type)  {  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	validateValidator(type)  {	  allowValidator(opt)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
318	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
319	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
320	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '.')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
321	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
322	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
323	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.withValidator(validator(opt));    if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.withValidator(validator(opt));        if(opt!=    '[')    {    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.withValidator(validator(opt));  if(opt!=  '[')  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
324	[BUG]  [BUGGY]  ArgumentBuilder  abuilder  =  new  ArgumentBuilder(opt.toCharArray());  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  ArgumentBuilder  abuilder  =  new  ArgumentBuilder(opt.toCharArray());  [BUGGY]      abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	ArgumentBuilder  abuilder  =  new  ArgumentBuilder(opt.toCharArray());	  ArgumentBuilder    abuilder    =    argument.create();    	non-compiled	[CE]  char  cannot  be  dereferenced	63	None	replace
325	[BUG]  [BUGGY]  abuilder.set(opt,  opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  abuilder.set(opt,  opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	abuilder.set(opt,  opt,  type);	  abuilder.set(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
326	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	add	if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
327	[BUG]  [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {      [BUGGY]  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	106	106	1	replace	if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	5	1	replace
