bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  overflow);  [CE]  unclosed  string  literal  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  overflow);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  overflow);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
2	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  >  epsilon);  [CE]  unclosed  string  literal  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  >  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  >  epsilon);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
3	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)>  epsilon);  [CE]  unclosed  string  literal  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)>  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)>  epsilon);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
4	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  epsilon);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  denominator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  denominator);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  this.denominator);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  this.denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  this.denominator);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  1l,  denominator);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  1l,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  1l,  denominator);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  this.denominator  =  a0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =  a0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  a0;	  this.denominator    =    0l;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  1l;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  1l;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)a0;  this.denominator  =  1l;	  this.numerator    =(int)a0;    this.denominator    =    1l;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
10	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1,  denominator);	  throw    new    NumeratorException(value,    a0,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  this.denominator  =(long)Math.floor(r1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(long)Math.floor(r1);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)Math.floor(r1);	  this.denominator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  this.denominator  =(int)Math.ceil(r1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(int)Math.ceil(r1);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(int)Math.ceil(r1);	  this.denominator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(r0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)Math.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)Math.floor(r0);	  this.numerator    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(r0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(double)Math.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)Math.floor(r0);	  this.numerator    =(double)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
15	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(r1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(double)Math.floor(r1);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)Math.floor(r1);	  this.numerator    =(double)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
16	[BUG]  [BUGGY]  this.denominator  =(int)Math.ceil(r0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(int)Math.ceil(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(int)Math.ceil(r0);	  this.denominator    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1,  maxIterations);	  throw    new    NumeratorException(value,    a0,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  maxIterations);	  throw    new    NumeratorException(value,    a0,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    3);    }    	non-compiled	[CE]  >  expected	57	None	replace
20	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    3);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
21	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    3);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
22	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(value));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(value));  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(value));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  epsilon);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  epsilon);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  overflow)  <  epsilon);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  if(FastMath.abs(a0  -  value)  <  denominator)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(FastMath.abs(a0  -  value)  <  denominator)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(FastMath.abs(a0  -  value)  <  denominator)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    denominator)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
26	[BUG]  [BUGGY]  if(FastMath.abs(a0  -  value)  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(FastMath.abs(a0  -  value)  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(FastMath.abs(a0  -  value)  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    denominator)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
27	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(r1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)Math.floor(r1);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)Math.floor(r1);	  this.numerator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(r2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(int)Math.floor(r2);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)Math.floor(r2);	  this.numerator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  >  expected	55	None	replace
30	[BUG]  [BUGGY]  if(a0  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
31	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  maxDenominator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  maxDenominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  maxDenominator);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
32	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  maxIterations);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  maxIterations);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  maxIterations);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
33	[BUG]  [BUGGY]  this.denominator  =(long)Math.floor(numerator);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(long)Math.floor(numerator);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)Math.floor(numerator);	  this.denominator    =(long)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
34	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  -  value)  <  epsilon);  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  -  value)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalStateException( "FastMath.abs(a0  -  value)  <  epsilon);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	42	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [CE]  unclosed  string  literal  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalStateException( "FastMath.abs(a0  -  overflow)  <  epsilon);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	42	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  -  value)  <  denominator);  [CE]  unclosed  string  literal  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  -  value)  <  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalStateException( "FastMath.abs(a0  -  value)  <  denominator);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	42	None	replace
37	[BUG]  [BUGGY]  if(value  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }	  if(value    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
38	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ").getMessage();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ").getMessage();  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ").getMessage();  }	  if(value    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
39	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  =  denominator);  [CE]  unclosed  string  literal  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  =  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  =  denominator);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
40	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  numerator);  [CE]  unclosed  string  literal  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  numerator);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  =  denominator);  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  =  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  =  denominator);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
42	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
43	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  denominator,  maxIterations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  denominator,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  denominator,  maxIterations);	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
44	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  value,  maxDenominator,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  value,  maxDenominator,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  value,  maxDenominator,  maxIterations);	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
45	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  denominator,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  denominator,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  epsilon,  denominator,  maxIterations);	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
46	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  maxDenominator,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  maxDenominator,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  maxDenominator,  maxIterations);	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  this.numerator  =  a0;  this.denominator  =  1l;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =  a0;  this.denominator  =  1l;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =  a0;  this.denominator  =  1l;	  this.numerator    =    a0;    this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
48	[BUG]  [BUGGY]  this.denominator  =  -1l;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =  -1l;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  -1l;	  this.denominator    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	NeighborValue  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }	  if(value    <    epsilon)    {    throw    new    NumeratorException(value,    a0,    maxDenominator);    }    	non-compiled	[CE]  >  expected	44	None	replace
50	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  denominator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  denominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  denominator);  }	  if(value    <    epsilon)    {    throw    new    NumeratorException(value,    a0,    maxDenominator);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
51	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  0,  maxDenominator);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  0,  maxDenominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  0,  maxDenominator);  }	  if(value    <    epsilon)    {    throw    new    NumeratorException(value,    a0,    maxDenominator);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
52	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    2l);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
53	[BUG]  [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	NeighborValue  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    2l);    }    	non-compiled	[CE]  >  expected	56	None	replace
54	[BUG]  [BUGGY]  this.numerator  =(int)a0  +  1l;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(int)a0  +  1l;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)a0  +  1l;	  this.numerator    =(int)a0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
55	[BUG]  [BUGGY]  this.numerator  =(int)a0  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(int)a0  +  2;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)a0  +  2;	  this.numerator    =(int)a0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
56	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  maxDenominator);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
57	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  numerator);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  numerator);	  throw    new    FractionConversionException(value,    a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
58	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  maxIterations);	  throw    new    FractionConversionException(value,    a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
59	[BUG]  [BUGGY]  if(FastMath.abs(a0  -  value)  <  overflow)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(FastMath.abs(a0  -  value)  <  overflow)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(FastMath.abs(a0  -  value)  <  overflow)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
60	[BUG]  [BUGGY]  if(FastMath.abs(a0  -  value)  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(FastMath.abs(a0  -  value)  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(FastMath.abs(a0  -  value)  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
61	[BUG]  [BUGGY]  this.denominator  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =  2;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  2;	  this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
62	[BUG]  [BUGGY]  this.denominator  =  1l;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =  1l;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  1l;	  this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
63	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  if(a0  <  overflow)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [CE]  unclosed  string  literal  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  overflow)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  overflow)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
65	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a1  -  overflow)  <  epsilon);  [CE]  unclosed  string  literal  [FE]                          AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a1  -  overflow)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a1  -  overflow)  <  epsilon);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
66	[BUG]  [BUGGY]  this.numerator  =(long)denominator;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)denominator;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)denominator;	  this.numerator    =(int)denominator;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
67	[BUG]  [BUGGY]  this.numerator  =(int)denominator  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(int)denominator  +  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)denominator  +  1;	  this.numerator    =(int)denominator;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  maxDenominator,  1l);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  maxDenominator,  1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  maxDenominator,  1l);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
69	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  maxIterations);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  epsilon,  maxIterations);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
70	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  maxDenominator,  1l);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  maxDenominator,  1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  epsilon,  maxDenominator,  1l);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  value,  1l);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  value,  1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  value,  1l);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  int  numerator  =(int)a0;  this.denominator  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  int  numerator  =(int)a0;  this.denominator  =  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	int  numerator  =(int)a0;  this.denominator  =  1;	  this.numerator    =(long)a0;    this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  if(value  <  a0)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  a0)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  a0)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
74	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  value,  1l);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  value,  1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  value,  1l);	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
75	[BUG]  [BUGGY]  this.denominator  =(double)Math.floor(r0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(double)Math.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(double)Math.floor(r0);	  this.denominator    =(double)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
76	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)Math.floor(denominator);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)Math.floor(denominator);	  this.numerator    =(int)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  epsilon);	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
78	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  denominator);	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
79	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  numerator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  numerator);	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
80	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  this.numerator);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  this.numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  this.numerator);	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
81	[BUG]  [BUGGY]  if(value  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  =  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }	  if(value    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
82	[BUG]  [BUGGY]  (value  <  epsilon)?  numerator  :  new  UnsupportedOperationException( " ");  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  (value  <  epsilon)?  numerator  :  new  UnsupportedOperationException( " ");  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	(value  <  epsilon)?  numerator  :  new  UnsupportedOperationException( " ");	  if(value    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
83	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1l,  epsilon);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  1l,  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1l,  epsilon);	  throw    new    NumeratorException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  numerator,  denominator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  numerator,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  numerator,  denominator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
85	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  numerator);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1l,  numerator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
86	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  numerator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1,  numerator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
87	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  overflow);  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  overflow);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  overflow);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
88	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  >  epsilon);  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  >  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  >  epsilon);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
89	[BUG]  [BUGGY]  int  numerator  =(int)a0;  this.denominator  =  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  int  numerator  =(int)a0;  this.denominator  =  0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	int  numerator  =(int)a0;  this.denominator  =  0;	  this.numerator    =(long)a0;    this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  overflow);  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  overflow);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  overflow);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
91	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  denominator);  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  denominator);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
92	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  >  epsilon);  [CE]  unclosed  string  literal  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  >  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  >  epsilon);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  =  epsilon);  [CE]  unclosed  string  literal  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  =  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  =  epsilon);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
94	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  value.denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  value.denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  value.denominator);	  throw    new    NumeratorException(value,    a0,    0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
95	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  numerator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  numerator);	  throw    new    NumeratorException(value,    a0,    0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
96	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [CE]  unclosed  string  literal  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
97	[BUG]  [BUGGY]  if(maxIterations  <  1)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [CE]  unclosed  string  literal  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(maxIterations  <  1)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(maxIterations  <  1)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
98	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  1l,  maxDenominator);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  1l,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  1l,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
99	[BUG]  [BUGGY]  this.numerator  =(byte)value;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(byte)value;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(byte)value;	  this.numerator    =(long)value;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
100	[BUG]  [BUGGY]  int  denominator  =  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  int  denominator  =  value.doubleValue();  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	int  denominator  =  value.doubleValue();	  throw    new    NumeratorException(value,    a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
101	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  -1l);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  -1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  -1l);	  throw    new    NumeratorException(value,    a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  this.numerator  =  a0;  this.denominator  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =  a0;  this.denominator  =  0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =  a0;  this.denominator  =  0;	  this.numerator    =    a0;    this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
103	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  +  value)  <  epsilon);  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalStateException( "FastMath.abs(a0  +  value)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalStateException( "FastMath.abs(a0  +  value)  <  epsilon);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	42	None	replace
104	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  }  [CE]  unclosed  string  literal  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  }	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
105	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  this.numerator  =(char)a0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(char)a0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(char)a0;	  this.numerator    =(byte)a0;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
107	[BUG]  [BUGGY]  this.denominator  =  0.0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =  0.0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  0.0;	  this.denominator    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
108	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  ZERO);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  ZERO);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  ZERO);  }	  throw    new    FractionConversionException(value,    a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
109	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon,  maxDenominator);  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon,  maxDenominator);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
110	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
111	[BUG]  [BUGGY]  this.numerator  =(long)FastMath.floor(a0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)FastMath.floor(a0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)FastMath.floor(a0);	  this.numerator    =(long)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
112	[BUG]  [BUGGY]  if(value  <  =  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  =  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  =  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }	  if(value    <    epsilon)    {    throw    new    NumeratorException(value,    a0,    maxDenominator);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
113	[BUG]  [BUGGY]  this.denominator  =(long)FastMath.floor(r0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(long)FastMath.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)FastMath.floor(r0);	  this.denominator    =(long)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
114	[BUG]  [BUGGY]  if(value  <  a0)  {  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  }  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  a0)  {  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  a0)  {  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  }	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
115	[BUG]  [BUGGY]  if(value  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    3);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
116	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    3);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
117	[BUG]  [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  NeighborValue  <  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	NeighborValue  <  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }	  if(value    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ".getMessage());    }    	non-compiled	[CE]  >  expected	51	None	replace
118	[BUG]  [BUGGY]  this.denominator  =(long)FastMath.floor(a0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(long)FastMath.floor(a0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)FastMath.floor(a0);	  this.denominator    =(long)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
119	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  epsilon);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1,  epsilon);	  throw    new    NumeratorException(value,    a0,    1,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
120	[BUG]  [BUGGY]  this.denominator  =(int)Math.floor(r1)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(int)Math.floor(r1)+  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(int)Math.floor(r1)+  1;	  this.denominator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
121	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalStateException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
122	[BUG]  [BUGGY]  Throwables.throw  new  NumeratorException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  NumeratorException( " ");  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  NumeratorException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
123	[BUG]  [BUGGY]  if(a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  0,  1l);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  0,  1l);  }	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  '.class'  expected	21	None	replace
124	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  0);  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  0);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  0);	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  '.class'  expected	21	None	replace
125	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  1l,  denominator);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  1l,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  1l,  denominator);	  throw    new    FractionConversionException(value,    a0,    0,    1l);    	non-compiled	[CE]  '.class'  expected	21	None	replace
126	[BUG]  [BUGGY]  if(value  <  0)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  0)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  0)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  '.class'  expected	22	None	replace
127	[BUG]  [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  2;  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  2;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)a0;  this.denominator  =  2;	  this.numerator    =(int)a0;    this.denominator    =    2;    	non-compiled	[CE]  '.class'  expected	49	None	replace
128	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  0,  maxIterations);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  0,  maxIterations);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  0,  maxIterations);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  '.class'  expected	55	None	replace
129	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  2);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  2);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  2);	  throw    new    NumeratorException(value,    a0,    maxIterations);    	non-compiled	[CE]  '.class'  expected	16	None	replace
130	[BUG]  [BUGGY]  if(value  <  a0)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  a0)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  a0)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  '.class'  expected	60	None	replace
131	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(denominator);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(double)Math.floor(denominator);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)Math.floor(denominator);	  this.numerator    =(double)Math.floor(epsilon);    	non-compiled	[CE]  '.class'  expected	59	None	replace
132	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator,  maxIterations);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator,  maxIterations);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator,  maxIterations);  }	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  '.class'  expected	25	None	replace
133	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  epsilon,  maxIterations);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  epsilon,  maxIterations);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  epsilon,  maxIterations);  }	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  '.class'  expected	25	None	replace
134	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  value,  maxDenominator);  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  value,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  value,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    epsilon,    maxIterations);    	non-compiled	[CE]  '.class'  expected	25	None	replace
135	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  1l);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  1l);  }	  throw    new    NumeratorException(value,    a0,    denominator);    	non-compiled	[CE]  '.class'  expected	17	None	replace
136	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  maxDenominator);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  epsilon,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  '.class'  expected	20	None	replace
137	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1epsilon,  maxDenominator);  [CE]  malformed  floating  point  literal  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  1epsilon,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1epsilon,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    1l,    maxDenominator);    	non-compiled	[CE]  malformed  floating  point  literal	47	None	replace
138	[BUG]  [BUGGY]  this.numerator  =(long)FastMath.floor(r0);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(long)FastMath.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)FastMath.floor(r0);	  this.numerator    =(long)Math.floor(value);    	non-compiled	[CE]  '.class'  expected	6	None	replace
139	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  denominator);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1,  denominator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  '.class'  expected	23	None	replace
140	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  maxDenominator);  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1l,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  '.class'  expected	23	None	replace
141	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  epsilon);  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1l,  epsilon);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  '.class'  expected	23	None	replace
142	[BUG]  [BUGGY]  this.numerator  =(double)a0;  this.denominator  =  1;  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(double)a0;  this.denominator  =  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)a0;  this.denominator  =  1;	  this.numerator    =(double)a0;    this.denominator    =    0;    	non-compiled	[CE]  '.class'  expected	62	None	replace
143	[BUG]  [BUGGY]  if(value  <  a0)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  denominator);  }  [CE]  unclosed  string  literal  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  a0)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  denominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  a0)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  denominator);  }	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
144	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(value  -  a0)  <  denominator);  [CE]  unclosed  string  literal  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(value  -  a0)  <  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(value  -  a0)  <  denominator);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    value)    <    denominator);    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
145	[BUG]  [BUGGY]  NeighborValue  <  value)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  NeighborValue  <  value)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	NeighborValue  <  value)  {  throw  new  FractionConversionException(value,  a0,  2l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    2l);    }    	non-compiled	[CE]  >  expected	56	None	replace
146	[BUG]  [BUGGY]  if(value  <  maxDenominator)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  maxDenominator)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  maxDenominator)  {  throw  new  UnsupportedOperationException( " ");  }	  if(value    <    epsilon)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  '.class'  expected	50	None	replace
147	[BUG]  [BUGGY]  this.numerator  =(double)FastMath.floor(r0);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(double)FastMath.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)FastMath.floor(r0);	  this.numerator    =(double)Math.floor(value);    	non-compiled	[CE]  '.class'  expected	53	None	replace
148	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  denominator);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  epsilon,  denominator);	  throw    new    NumeratorException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  '.class'  expected	18	None	replace
149	[BUG]  [BUGGY]  if(value  >  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  >  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  >  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  '.class'  expected	22	None	replace
150	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  maxDenominator);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  epsilon,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    epsilon);    	non-compiled	[CE]  '.class'  expected	45	None	replace
151	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  denominator,  maxDenominator);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  denominator,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  denominator,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    0,    maxDenominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
152	[BUG]  [BUGGY]  this.numerator  =  epsilon;  this.denominator  =  1;  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =  epsilon;  this.denominator  =  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =  epsilon;  this.denominator  =  1;	  this.numerator    =    a0;    this.denominator    =    1;    	non-compiled	[CE]  '.class'  expected	30	None	replace
153	[BUG]  [BUGGY]  this.numerator  =  0;  this.denominator  =  1;  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =  0;  this.denominator  =  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =  0;  this.denominator  =  1;	  this.numerator    =    a0;    this.denominator    =    1;    	non-compiled	[CE]  '.class'  expected	30	None	replace
154	[BUG]  [BUGGY]  this.numerator  -=(int)a0;  this.denominator  =  1;  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  -=(int)a0;  this.denominator  =  1;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  -=(int)a0;  this.denominator  =  1;	  this.numerator    =(long)a0;    this.denominator    =    1;    	non-compiled	[CE]  '.class'  expected	38	None	replace
155	[BUG]  [BUGGY]  if(value  <  epsilon  &&  value  <  =  maxDenominator)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(value  <  epsilon  &&  value  <  =  maxDenominator)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon  &&  value  <  =  maxDenominator)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }	  if(value    <    epsilon)    {    throw    new    NumeratorException(value,    a0,    maxDenominator);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
156	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }	  if(value    <    epsilon)    {    throw    new    NumeratorException(value,    a0,    maxDenominator);    }    	non-compiled	[CE]  '.class'  expected	44	None	replace
157	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( " ".);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
158	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath  cannot  be  numerator. ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "FastMath  cannot  be  numerator. ");  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( "FastMath  cannot  be  numerator. ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
159	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  denominator,  maxDenominator);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  denominator,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1,  denominator,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  '.class'  expected	23	None	replace
160	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  epsilon,  denominator);  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  epsilon,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1l,  epsilon,  denominator);	  throw    new    FractionConversionException(value,    a0,    1l,    denominator);    	non-compiled	[CE]  '.class'  expected	23	None	replace
161	[BUG]  [BUGGY]  this.denominator  =  epsilon;  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =  epsilon;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  epsilon;	  this.denominator    =    0l;    	non-compiled	[CE]  '.class'  expected	33	None	replace
162	[BUG]  [BUGGY]  if(a0  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  =  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    2l);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
163	[BUG]  [BUGGY]  if(a0  <  value)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  value)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  value)  {  throw  new  FractionConversionException(value,  a0,  2l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    2l);    }    	non-compiled	[CE]  '.class'  expected	56	None	replace
164	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  maxDenominator);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    epsilon);    	non-compiled	[CE]  '.class'  expected	46	None	replace
165	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  maxDenominator);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  1,  maxDenominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    epsilon);    	non-compiled	[CE]  '.class'  expected	46	None	replace
166	[BUG]  [BUGGY]  this.numerator  -=(int)a0;  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  -=(int)a0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  -=(int)a0;	  this.numerator    =(long)a0;    	non-compiled	[CE]  '.class'  expected	35	None	replace
167	[BUG]  [BUGGY]  if(denominator  <  a0)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(denominator  <  a0)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(denominator  <  a0)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    denominator)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  '.class'  expected	61	None	replace
168	[BUG]  [BUGGY]  if(FastMath.abs(a0  -  value)  <  desominator)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(FastMath.abs(a0  -  value)  <  desominator)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(FastMath.abs(a0  -  value)  <  desominator)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fastMath.abs(a0    -    value)    <    denominator)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  '.class'  expected	61	None	replace
169	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2);  }  [CE]  '.class'  expected  [FE]                          AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    2);    }    	non-compiled	[CE]  '.class'  expected	58	None	replace
170	[BUG]  [BUGGY]  this.numerator  =(double)denominator;  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(double)denominator;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)denominator;	  this.numerator    =(int)denominator;    	non-compiled	[CE]  '.class'  expected	28	None	replace
171	[BUG]  [BUGGY]  this.numerator  =(byte)denominator;  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(byte)denominator;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(byte)denominator;	  this.numerator    =(int)denominator;    	non-compiled	[CE]  '.class'  expected	28	None	replace
172	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  '.class'  expected	55	None	replace
173	[BUG]  [BUGGY]  if(a0  <  value)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  value)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  value)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	  if(value    <    epsilon)    {    throw    new    FractionConversionException(value,    a0,    1l);    }    	non-compiled	[CE]  '.class'  expected	55	None	replace
174	[BUG]  [BUGGY]  this.denominator  =(double)Math.floor(numerator);  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(double)Math.floor(numerator);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(double)Math.floor(numerator);	  this.denominator    =(int)Math.floor(numerator);    	non-compiled	[CE]  '.class'  expected	4	None	replace
175	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon,  denominator);  [CE]  unclosed  string  literal  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon,  denominator);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon,  denominator);	  throw    new    IllegalArgumentException(   "FastMath.abs(a0    +    value)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
176	[BUG]  [BUGGY]  if(a0  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [CE]  unclosed  string  literal  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  if(a0  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(a0  <  epsilon)  {  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  }	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
177	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  Throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);	  throw    new    UnsupportedOperationException(   "FastMath.abs(a0    -    overflow)    <    epsilon);    	non-compiled	[CE]  not  a  statement	15	None	replace
178	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  a0);  [CE]  [FE]                      AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  a0);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  a0);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  	19	None	replace
179	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  a1);  [CE]  [FE]                        AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  a1);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  a1);	  throw    new    NumeratorException(value,    a0,    0,    1l);    	non-compiled	[CE]  	19	None	replace
180	[BUG]  [BUGGY]  this.numerator  -=(byte)a0;  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  -=(byte)a0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  -=(byte)a0;	  this.numerator    =(byte)a0;    	non-compiled	[CE]  '.class'  expected	63	None	replace
181	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  denominator,  1l);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  denominator,  1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  denominator,  1l);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  '.class'  expected	20	None	replace
182	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  1l);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  1l);  [BUGGY]      }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  r1,  1l);	  throw    new    FractionConversionException(value,    a0,    epsilon,    1l);    	non-compiled	[CE]  '.class'  expected	20	None	replace
183	[BUG]  [BUGGY]  this.numerator  =(int)a0  +  denominator;  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  =(int)a0  +  denominator;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)a0  +  denominator;	  this.numerator    =(int)a0    +    1;    	non-compiled	[CE]  '.class'  expected	43	None	replace
184	[BUG]  [BUGGY]  this.denominator  =(double)Math.floor(r1);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(double)Math.floor(r1);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(double)Math.floor(r1);	  this.denominator    =(int)Math.floor(r1);    	non-compiled	[CE]  '.class'  expected	3	None	replace
185	[BUG]  [BUGGY]  this.numerator  -=(double)a0;  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.numerator  -=(double)a0;  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  -=(double)a0;	  this.numerator    =(double)a0;    	non-compiled	[CE]  '.class'  expected	36	None	replace
186	[BUG]  [BUGGY]  this.denominator  =(double)FastMath.floor(r0);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;      [BUGGY]  this.denominator  =(double)FastMath.floor(r0);  [BUGGY]      return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(double)FastMath.floor(r0);	  this.denominator    =(double)Math.floor(a0);    	non-compiled	[CE]  '.class'  expected	52	None	replace
