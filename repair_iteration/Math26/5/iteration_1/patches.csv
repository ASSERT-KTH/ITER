bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.denominator  =(int)Math.floor(r0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(int)Math.floor(r0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(int)Math.floor(r0);	      this.denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  this.denominator  =(long)Math.floor(a0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(long)Math.floor(a0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)Math.floor(a0);	      this.denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  this.denominator  =(int)Math.floor(r1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(int)Math.floor(r1);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(int)Math.floor(r1);	      this.denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  this.denominator  =(int)Math.floor(numerator);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(int)Math.floor(numerator);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(int)Math.floor(numerator);	      this.denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(r0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)Math.floor(r0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)Math.floor(r0);	      this.numerator    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(value);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)Math.floor(value);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)Math.floor(value);	      this.numerator    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(r1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)Math.floor(r1);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)Math.floor(r1);	      this.numerator    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  epsilon);  [CE]  unclosed  string  literal  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  epsilon);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  epsilon);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  [CE]  unclosed  string  literal  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  -  value)  <  denominator);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  this.denominator  =(long)Math.floor(value);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(long)Math.floor(value);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)Math.floor(value);	      this.denominator    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  0;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)a0;  this.denominator  =  0;	      this.numerator    =(int)a0;    this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  [CE]  unclosed  string  literal  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  epsilon);	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
14	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  denominator);  [CE]  unclosed  string  literal  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  denominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  value)  <  denominator);	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
15	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [CE]  unclosed  string  literal  [FE]                  AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  UnsupportedOperationException( "FastMath.abs(a0  -  overflow)  <  epsilon);	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
16	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  maxIterations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  maxIterations);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  maxIterations);	  throw    new    NumeratorException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  denominator);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  denominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  denominator);	  throw    new    NumeratorException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1l,  denominator);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  1l,  denominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1l,  denominator);	  throw    new    NumeratorException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  1l);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  1l);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  1l);	  throw    new    NumeratorException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  1l);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon,  1l);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  epsilon,  1l);	  throw    new    FractionConversionException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  1l);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  FractionConversionException(value,  a0,  0,  1l);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  0,  1l);	  throw    new    FractionConversionException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  1l);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  FractionConversionException(a0,  value,  1l);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(a0,  value,  1l);	  throw    new    FractionConversionException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  denominator);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  FractionConversionException(value,  a0,  1l,  denominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  1l,  denominator);	  throw    new    FractionConversionException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  maxDenominator);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  0,  maxDenominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  0,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon,  maxIterations);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  epsilon,  maxIterations);	  throw    new    NumeratorException(value,    a0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(epsilon);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)Math.floor(epsilon);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)Math.floor(epsilon);	      this.numerator    =(int)Math.floor(epsilon);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(denominator);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)Math.floor(denominator);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)Math.floor(denominator);	      this.numerator    =(int)Math.floor(epsilon);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  this.numerator  =(int)denominator;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)denominator;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)denominator;	      this.numerator    =(int)value;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  this.numerator  =(double)value;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(double)value;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)value;	      this.numerator    =(int)value;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  this.numerator  =  a0;  this.denominator  =  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =  a0;  this.denominator  =  1;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =  a0;  this.denominator  =  1;	      this.numerator    =    (int)a0;    this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(a0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)Math.floor(a0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)Math.floor(a0);	      this.numerator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  this.denominator  =  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =  1;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  1;	      this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  this.denominator  =  0l;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =  0l;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  0l;	      this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  this.denominator  =  -1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =  -1;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  -1;	      this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  this.numerator  =(long)a0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)a0;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)a0;	      this.numerator    =(int)a0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  this.numerator  =(double)a0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(double)a0;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)a0;	      this.numerator    =(int)a0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  this.denominator  =(long)Math.floor(r0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(long)Math.floor(r0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(long)Math.floor(r0);	      this.denominator    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)a0;  this.denominator  =  1;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)a0;  this.denominator  =  1;	      this.numerator    =    (int)a0;    this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  this.numerator  =(int)a0;  this.denominator  =  1l;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)a0;  this.denominator  =  1l;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)a0;  this.denominator  =  1l;	      this.numerator    =    (int)a0;    this.denominator    =    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  this.numerator  =(long)value;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(long)value;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(long)value;	      this.numerator    =(int)value;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon);  [CE]  unclosed  string  literal  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalArgumentException( "FastMath.abs(a0  +  value)  <  epsilon);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  this.numerator  =(int)a0  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)a0  +  1;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)a0  +  1;	      this.numerator    =(int)a0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  NumeratorException(value,  a0,  maxDenominator);  }	  throw    new    NumeratorException(value,    a0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  epsilon);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  epsilon);	  throw    new    NumeratorException(value,    a0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  FractionConversionException(value,  a0,  epsilon);	  throw    new    FractionConversionException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1l,  maxDenominator);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  1l,  maxDenominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1l,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    1l);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(a0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(double)Math.floor(a0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)Math.floor(a0);	      this.numerator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
49	[BUG]  [BUGGY]  this.numerator  =(int)a0;  this.denominator  =  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(int)a0;  this.denominator  =  2;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(int)a0;  this.denominator  =  2;	      this.numerator    =(int)a0;    this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  UnsupportedOperationException( " ".getMessage());  }	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  this.denominator  =(double)Math.floor(a0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =(double)Math.floor(a0);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =(double)Math.floor(a0);	      this.denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(value);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(double)Math.floor(value);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)Math.floor(value);	      this.numerator    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  this.denominator  =  0L;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.denominator  =  0L;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.denominator  =  0L;	      this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  1l);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2l);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  3);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2);  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(value  <  epsilon)  {  throw  new  FractionConversionException(value,  a0,  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(epsilon);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(double)Math.floor(epsilon);  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)Math.floor(epsilon);	      this.numerator    =(int)Math.floor(epsilon);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  if(fastMath.abs(a0  -  value)  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(fastMath.abs(a0  -  value)  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(fastMath.abs(a0  -  value)  <  epsilon)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  if(fastMath.abs(a0  -  value)  <  denominator)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  if(fastMath.abs(a0  -  value)  <  denominator)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	if(fastMath.abs(a0  -  value)  <  denominator)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  this.numerator  =(double)a0;  this.denominator  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(double)a0;  this.denominator  =  0;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(double)a0;  this.denominator  =  0;	      this.numerator    =(int)a0;    this.denominator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  this.numerator  =(byte)a0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  this.numerator  =(byte)a0;  [BUGGY]    return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	this.numerator  =(byte)a0;	      this.numerator    =(int)a0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  maxDenominator);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;    [BUGGY]  throw  new  NumeratorException(value,  a0,  1,  maxDenominator);  [BUGGY]    }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  long  p2  =  0;  long  q2  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	throw  new  NumeratorException(value,  a0,  1,  maxDenominator);	  throw    new    NumeratorException(value,    a0,    maxDenominator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
