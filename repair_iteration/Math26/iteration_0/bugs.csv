bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new FractionConversionException(value, a0, 1l); [FE] AssertionError testIntegerOverflow [CONTEXT] { long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { [BUGGY] throw new FractionConversionException(value, a0, 1l); [BUGGY] }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; this.denominator = 1; return; }  [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] { long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { [BUGGY] [BUGGY] throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; this.denominator = 1; return; }  [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	
3	[BUG] [BUGGY] throw new FractionConversionException(value, p2, q2); [FE] AssertionError testIntegerOverflow [CONTEXT] int n = 0; boolean stop = false; do { ++n; double r1 = 1.0 / (r0 - a0); long a1 = (long)FastMath.floor(r1); p2 = (a1 * p1) + p0; q2 = (a1 * q1) + q0; if ((p2 > overflow) || (q2 > overflow)) { [BUGGY] throw new FractionConversionException(value, p2, q2); [BUGGY] } double convergent = (double)p2 / (double)q2; if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator) { p0 = p1; p1 = p2; q0 = q1; q1 = q2; a0 = a1; r0 = r1; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	210	210	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] int n = 0; boolean stop = false; do { ++n; double r1 = 1.0 / (r0 - a0); long a1 = (long)FastMath.floor(r1); p2 = (a1 * p1) + p0; q2 = (a1 * q1) + q0; if ((p2 > overflow) || (q2 > overflow)) { [BUGGY] [BUGGY] throw new FractionConversionException(value, p2, q2); } double convergent = (double)p2 / (double)q2; if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator) { p0 = p1; p1 = p2; q0 = q1; q1 = q2; a0 = a1; r0 = r1; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	210	210	1	add	
5	[BUG] [BUGGY] this.numerator = (int) a0; [FE] AssertionError testIntegerOverflow [CONTEXT] long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { [BUGGY] this.numerator = (int) a0; [BUGGY] this.denominator = 1; return; } long p0 = 1; long q0 = 0; long p1 = a0; long q1 = 1; long p2 = 0; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	188	188	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { [BUGGY] [BUGGY] this.numerator = (int) a0; this.denominator = 1; return; } long p0 = 1; long q0 = 0; long p1 = a0; long q1 = 1; long p2 = 0; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	188	188	1	add	
7	[BUG] [BUGGY] this.denominator = 1; [FE] AssertionError testIntegerOverflow [CONTEXT] double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; [BUGGY] this.denominator = 1; [BUGGY] return; } long p0 = 1; long q0 = 0; long p1 = a0; long q1 = 1; long p2 = 0; long q2 = 1; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	189	189	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; [BUGGY] [BUGGY] this.denominator = 1; return; } long p0 = 1; long q0 = 0; long p1 = a0; long q1 = 1; long p2 = 0; long q2 = 1; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	189	189	1	add	
9	[BUG] [BUGGY] return; [FE] AssertionError testIntegerOverflow [CONTEXT] long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; this.denominator = 1; [BUGGY] return; [BUGGY] } long p0 = 1; long q0 = 0; long p1 = a0; long q1 = 1; long p2 = 0; long q2 = 1;  [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; this.denominator = 1; [BUGGY] [BUGGY] return; } long p0 = 1; long q0 = 0; long p1 = a0; long q1 = 1; long p2 = 0; long q2 = 1;  [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.7071067811865475	190	190	1	add	
11	[BUG] [BUGGY] } [FE] AssertionError testIntegerOverflow [CONTEXT] public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException { this(value, epsilon, Integer.MAX_VALUE, maxIterations); [BUGGY] } [BUGGY]  [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)  double value double epsilon int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean long serialVersionUID int denominator maxIterations numerator double epsilon value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.4472135954999579	122	122	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException { this(value, epsilon, Integer.MAX_VALUE, maxIterations); [BUGGY] [BUGGY] } [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)  double value double epsilon int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean long serialVersionUID int denominator maxIterations numerator double epsilon value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.4472135954999579	122	122	1	add	
13	[BUG] [BUGGY] this(value, epsilon, Integer.MAX_VALUE, maxIterations); [FE] AssertionError testIntegerOverflow [CONTEXT] public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException { [BUGGY] this(value, epsilon, Integer.MAX_VALUE, maxIterations); [BUGGY] } [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)  double value double epsilon int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean long serialVersionUID int denominator maxIterations numerator double epsilon value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.4082482904638631	121	121	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException { [BUGGY] [BUGGY] this(value, epsilon, Integer.MAX_VALUE, maxIterations); } [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int)  double value double epsilon int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean long serialVersionUID int denominator maxIterations numerator double epsilon value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.4082482904638631	121	121	1	add	
15	[BUG] [BUGGY] { [FE] AssertionError testIntegerOverflow [CONTEXT] [BUGGY] { [BUGGY] long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	177	177	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] [BUGGY] [BUGGY] { long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	177	177	1	add	
17	[BUG] [BUGGY] long overflow = Integer.MAX_VALUE; [FE] AssertionError testIntegerOverflow [CONTEXT] { [BUGGY] long overflow = Integer.MAX_VALUE; [BUGGY] double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	178	178	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] { [BUGGY] [BUGGY] long overflow = Integer.MAX_VALUE; double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	178	178	1	add	
19	[BUG] [BUGGY] double r0 = value; [FE] AssertionError testIntegerOverflow [CONTEXT] { long overflow = Integer.MAX_VALUE; [BUGGY] double r0 = value; [BUGGY] long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; this.denominator = 1; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError testIntegerOverflow [CONTEXT] { long overflow = Integer.MAX_VALUE; [BUGGY] [BUGGY] double r0 = value; long a0 = (long)FastMath.floor(r0); if (a0 > overflow) { throw new FractionConversionException(value, a0, 1l); }   if (FastMath.abs(a0 - value) < epsilon) { this.numerator = (int) a0; this.denominator = 1; [CLASS] Fraction [METHOD] <init> [RETURN_TYPE] Fraction(double,double,int,int)  double value double epsilon int maxDenominator int maxIterations [VARIABLES] Fraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO boolean stop long a0 a1 overflow p0 p1 p2 q0 q1 q2 serialVersionUID int denominator maxDenominator maxIterations n numerator double convergent epsilon r0 r1 value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	add	
