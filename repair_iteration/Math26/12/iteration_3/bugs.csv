bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.denominator(a0);  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.denominator(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.denominator(a0);	  float    denominator    =(float)FastMath.floor(denominator);    	non-compiled	[CE]  while  expected	48	None	replace
2	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r1);  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.floor(r1);	  float    denominator    =(float)FastMath.floor(denominator);    	non-compiled	[CE]  while  expected	48	None	replace
3	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(a0);  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  denominator  =(long)FastMath.floor(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  denominator  =(long)FastMath.floor(a0);	  int    denominator    =(int)FastMath.floor(a0);    	non-compiled	[CE]  while  expected	6	None	replace
4	[BUG]  [BUGGY]  if(a0  <  =  epsilon)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  =  epsilon)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  =  epsilon)  {	  if(a0    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
5	[BUG]  [BUGGY]  if(a0  <  a1  ||  a0  >  epsilon)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  a1  ||  a0  >  epsilon)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  a1  ||  a0  >  epsilon)  {	  if(a0    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
6	[BUG]  [BUGGY]  int  denominator  =  0L;  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  0L;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  0L;	  int    denominator    =    0;    	non-compiled	[CE]  while  expected	50	None	replace
7	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)/  1;  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)/  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)/  1;	  long    a1    =(long)FastMath.floor(r1)-    1;    	non-compiled	[CE]  while  expected	39	None	replace
8	[BUG]  [BUGGY]  long  a1  =(long)FastMath.log(r1)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.log(r1)-  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.log(r1)-  1;	  long    a1    =(long)FastMath.floor(r1)-    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
9	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  1l;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  1l;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)-  1l;	  long    a1    =(long)FastMath.floor(r1)-    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
10	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.floor(r0);	  double    denominator    =(double)FastMath.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
11	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.convert(r0,  a0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.convert(r0,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.convert(r0,  a0);	  double    denominator    =(double)FastMath.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
12	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.denominator(a0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.denominator(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.denominator(a0);	  double    denominator    =(double)FastMath.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
13	[BUG]  [BUGGY]  long  a1  =(long)FastMath.ceil(r1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.ceil(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.ceil(r1);	  long    a1    =(long)FastMath.log(r1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  long  a1  =(long)FastMath.log(r0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.log(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.log(r0);	  long    a1    =(long)FastMath.log(r1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
15	[BUG]  [BUGGY]  int  denominator  =  Float.parseInt(a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Float.parseInt(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Float.parseInt(a0);	  int    denominator    =    Float.parseFloat(a0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
16	[BUG]  [BUGGY]  int  denominator  =  Integer.parseInt(a0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.parseInt(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.parseInt(a0);	  int    denominator    =    Float.parseFloat(a0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
17	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)/  overflow;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)/  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)/  overflow;	  long    a1    =(long)FastMath.floor(r1)-    overflow;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
18	[BUG]  [BUGGY]  long  a1  =(long)FastMath.log(r1)-  overflow;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.log(r1)-  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.log(r1)-  overflow;	  long    a1    =(long)FastMath.floor(r1)-    overflow;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
19	[BUG]  [BUGGY]  long  a1  =(long)FastMath.ceil(r1)-  overflow;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.ceil(r1)-  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.ceil(r1)-  overflow;	  long    a1    =(long)FastMath.floor(r1)-    overflow;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
20	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  /  1;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1l;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1l;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  2;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  -  2;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  int  denominator  =  getNumerator(a0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumerator(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumerator(a0);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
24	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator(a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumberDenominator(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumberDenominator(a0);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
25	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  r1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(a0,  r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(a0,  r1);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
26	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(a0,  numerator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(a0,  numerator);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
27	[BUG]  [BUGGY]  if(a0  <  r1  ||  a0  >  overflow)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  r1  ||  a0  >  overflow)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  r1  ||  a0  >  overflow)  {	  if(a0    <    r1    ||    a0    >    r1)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
28	[BUG]  [BUGGY]  if(a0  <  =  r1  ||  a0  >  r1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  =  r1  ||  a0  >  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  =  r1  ||  a0  >  r1)  {	  if(a0    <    r1    ||    a0    >    r1)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
29	[BUG]  [BUGGY]  if(a0  <  overflow  ||  a0  >  r1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  overflow  ||  a0  >  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  overflow  ||  a0  >  r1)  {	  if(a0    <    r1    ||    a0    >    r1)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
30	[BUG]  [BUGGY]  if(a0  <  r0  ||  a0  >  r1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  r0  ||  a0  >  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  r0  ||  a0  >  r1)  {	  if(a0    <    r1    ||    a0    >    r1)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
31	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(a0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.floor(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.floor(a0);	  float    denominator    =(float)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
32	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.denominator(r0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.denominator(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.denominator(r0);	  float    denominator    =(float)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
33	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.convert(r0,  a0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.convert(r0,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.convert(r0,  a0);	  float    denominator    =(float)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
34	[BUG]  [BUGGY]  long  a1  =(long)FastMath.log(r1)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.log(r1)+  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.log(r1)+  1;	  long    a1    =(long)FastMath.floor(r1)+    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)+  2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)+  2;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)+  2;	  long    a1    =(long)FastMath.floor(r1)+    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1l;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  +  1l;	  int    denominator    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  int  denominator  =  a0  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  a0  +  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  a0  +  1;	  int    denominator    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
38	[BUG]  [BUGGY]  double  a0  =  (double)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  a0  =  (double)FastMath.floor(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  a0  =  (double)FastMath.floor(value);	  int    a0    =    (int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
39	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(a0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(a0);	  int    denominator    =(int)FastMath.convert(r0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
40	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(a0,  r1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(a0,  r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(a0,  r1);	  int    denominator    =(int)FastMath.convert(r0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
41	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.floor(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.floor(value);	  int    denominator    =(int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
42	[BUG]  [BUGGY]  int  denominator  =  Float.parseInt(value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Float.parseInt(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Float.parseInt(value);	  int    denominator    =    Float.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  int  denominator  =  Float.parseInt(r0  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Float.parseInt(r0  +  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Float.parseInt(r0  +  1);	  int    denominator    =    Float.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  int  a0  =  (int)FastMath.floor(r1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a0  =  (int)FastMath.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a0  =  (int)FastMath.floor(r1);	  long    a0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.ceil(r1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a0  =  (long)FastMath.ceil(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a0  =  (long)FastMath.ceil(r1);	  long    a0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
46	[BUG]  [BUGGY]  float  denominator  =(float)Math.floor(a0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)Math.floor(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)Math.floor(a0);	  float    denominator    =(float)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  float  denominator  =(float)Math.floor(r0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)Math.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)Math.floor(r0);	  float    denominator    =(float)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(r1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)Math.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)Math.floor(r1);	  int    denominator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
49	[BUG]  [BUGGY]  float  denominator  =(float)Math.floor(r1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)Math.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)Math.floor(r1);	  int    denominator    =(int)Math.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
50	[BUG]  [BUGGY]  a0  =  (long)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  a0  =  (long)FastMath.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	a0  =  (long)FastMath.floor(r0);	  int    a0    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
51	[BUG]  [BUGGY]  double  a1  =  (double)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  a1  =  (double)FastMath.floor(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  a1  =  (double)FastMath.floor(value);	  int    a1    =    (int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  long  denominator  =(long)Math.floor(a0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  denominator  =(long)Math.floor(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  denominator  =(long)Math.floor(a0);	  int    denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  int  denominator  =(int)Math.ceil(a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)Math.ceil(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)Math.ceil(a0);	  int    denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  double  denominator  =  Float.parseFloat(r0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  Float.parseFloat(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  Float.parseFloat(r0);	  float    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
55	[BUG]  [BUGGY]  float  denominator  =  Float.parseFloat(a0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =  Float.parseFloat(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =  Float.parseFloat(a0);	  float    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
56	[BUG]  [BUGGY]  double  a1  =  (double)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  a1  =  (double)FastMath.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  a1  =  (double)FastMath.floor(r0);	  int    a1    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
57	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.log(overflow);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a0  =  (long)FastMath.log(overflow);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a0  =  (long)FastMath.log(overflow);	  long    a0    =    (long)FastMath.log(r0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.ceil(r0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a0  =  (long)FastMath.ceil(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a0  =  (long)FastMath.ceil(r0);	  long    a0    =    (long)FastMath.log(r0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(a0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)Math.floor(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)Math.floor(a0);	  double    denominator    =(double)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(r0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)Math.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)Math.floor(r0);	  double    denominator    =(double)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  double  denominator  =(double)Math.ceil(denominator);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)Math.ceil(denominator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)Math.ceil(denominator);	  double    denominator    =(double)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  double  denominator  =(double)Math.convert(r0,  a0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)Math.convert(r0,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)Math.convert(r0,  a0);	  double    denominator    =(double)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  a0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  a0;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  -  a0;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  overflow;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  /  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  int  denominator  =  a0  -  overflow;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  a0  -  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  a0  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  int  denominator  =  overflow  -  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  overflow  -  Integer.MAX_VALUE;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  overflow  -  Integer.MAX_VALUE;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  if(a0  <  =  r1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  =  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  =  r1)  {	  if(a0    <    r1)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
68	[BUG]  [BUGGY]  if(a0  >=  r1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  >=  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  >=  r1)  {	  if(a0    <    r1)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
69	[BUG]  [BUGGY]  int  denominator  =  Integer.parseInt(value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.parseInt(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.parseInt(value);	  int    denominator    =    Float.parseFloat(value);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
70	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MIN_VALUE  -  1;	  int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  overflow;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MIN_VALUE  -  overflow;	  int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  int  denominator  =  getNumber();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumber();  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumber();	  int    denominator    =    getNumerator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
73	[BUG]  [BUGGY]  int  denominator  =  Integer.parseInt(r1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.parseInt(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.parseInt(r1);	  int    denominator    =    Integer.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
74	[BUG]  [BUGGY]  int  denominator  =  Integer.parseInt(r0  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.parseInt(r0  +  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.parseInt(r0  +  1);	  int    denominator    =    Integer.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
75	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(a0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.ceil(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.ceil(a0);	  int    denominator    =(int)FastMath.ceil(denominator);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
76	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.ceil(denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.ceil(denominator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.ceil(denominator);	  int    denominator    =(int)FastMath.ceil(denominator);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
77	[BUG]  [BUGGY]  int  denominator  =  getDenominator()  /  overflow;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator()  /  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator()  /  overflow;	  int    denominator    =    getDenominator()    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
78	[BUG]  [BUGGY]  int  denominator  =  getDenominator()  -  a0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator()  -  a0;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator()  -  a0;	  int    denominator    =    getDenominator()    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
79	[BUG]  [BUGGY]  int  denominator  =  getDenominator()  *  overflow;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator()  *  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator()  *  overflow;	  int    denominator    =    getDenominator()    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
80	[BUG]  [BUGGY]  int  denominator  =  getNumerator()  -  overflow;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumerator()  -  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumerator()  -  overflow;	  int    denominator    =    getDenominator()    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
81	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.denominator(a0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.denominator(a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.denominator(a0);	  int    denominator    =(int)FastMath.denominator(r0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
82	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.denominator(r0,  a0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.denominator(r0,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.denominator(r0,  a0);	  int    denominator    =(int)FastMath.denominator(r0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
83	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  overflow;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  Integer.MAX_VALUE  -  overflow;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  double  denominator  =  a0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  a0;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  a0;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  Integer.MAX_VALUE  -  1;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumberDenominator(0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumberDenominator(0);	  int    denominator    =    getNumberDenominator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
87	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.convert(d0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.convert(d0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.convert(d0);	  double    denominator    =(double)FastMath.floor(d0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
88	[BUG]  [BUGGY]  if(a0  ==  r1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  ==  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  ==  r1)  {	  if(a0    ==    r0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
89	[BUG]  [BUGGY]  int  denominator  =  getNumerator(r0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumerator(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumerator(r0);	  int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
90	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator(r0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumberDenominator(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumberDenominator(r0);	  int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
91	[BUG]  [BUGGY]  if(a0  <  =  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  =  1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  =  1)  {	  if(a0    <    a1)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
92	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.floor(r1);	  int    denominator    =(int)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
93	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0,  a0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.ceil(r0,  a0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0  -  d0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.floor(a0  -  d0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.floor(a0  -  d0);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
95	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0  -  a0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.floor(r0  -  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.floor(r0  -  a0);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
96	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(denominator  -  a0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.floor(denominator  -  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.floor(denominator  -  a0);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
97	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(d0  -  a0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(d0  -  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(d0  -  a0);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
98	[BUG]  [BUGGY]  float  a1  =(float)FastMath.floor(r1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  a1  =(float)FastMath.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  a1  =(float)FastMath.floor(r1);	  int    a1    =(int)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
99	[BUG]  [BUGGY]  double  a1  =(double)FastMath.floor(r1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  a1  =(double)FastMath.floor(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  a1  =(double)FastMath.floor(r1);	  int    a1    =(int)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
100	[BUG]  [BUGGY]  int  denominator  =(int)Math.ceil(r0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)Math.ceil(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)Math.ceil(r0);	  int    denominator    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
101	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(value,  a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(value,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(value,  a0);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  maxIterations);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  maxIterations);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0,  maxIterations);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  numerator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0,  numerator);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
104	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(a0,  r0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(a0,  r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(a0,  r0);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
105	[BUG]  [BUGGY]  int  denominator  =  super.denominator;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  super.denominator;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  super.denominator;	  int    denominator    =    getNumerator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
106	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.floor(r1)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a0  =  (long)FastMath.floor(r1)+  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a0  =  (long)FastMath.floor(r1)+  1;	  long    a0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.floor(r1)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a0  =  (long)FastMath.floor(r1)-  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a0  =  (long)FastMath.floor(r1)-  1;	  long    a0    =    (long)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
108	[BUG]  [BUGGY]  int  denominator  =  Integer.parseInt(denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.parseInt(denominator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.parseInt(denominator);	  int    denominator    =    Integer.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
109	[BUG]  [BUGGY]  float  denominator  =(float)Math.floor(d0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)Math.floor(d0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)Math.floor(d0);	  float    denominator    =(float)Math.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  maxIterations);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(a0,  maxIterations);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(a0,  maxIterations);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
111	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(a0  +  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(a0  +  1);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
112	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MIN_VALUE  +  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MIN_VALUE  +  1;	  int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
113	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.log(r1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a0  =  (long)FastMath.log(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a0  =  (long)FastMath.log(r1);	  long    a0    =    (long)FastMath.log(r0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
114	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  value;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  value;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)-  value;	  long    a1    =(long)FastMath.floor(r1)-    overflow;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
115	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  denominator;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  denominator;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)-  denominator;	  long    a1    =(long)FastMath.floor(r1)-    overflow;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
116	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(value,  r0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(value,  r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(value,  r0);	  int    denominator    =(int)FastMath.convert(r0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
117	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(value);	  int    denominator    =(int)FastMath.convert(r0);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
118	[BUG]  [BUGGY]  if(a0  <  r0  ||  a0  >  overflow)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  r0  ||  a0  >  overflow)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  r0  ||  a0  >  overflow)  {	  if(a0    <    r1    ||    a0    >    r1)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
119	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1L;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1L;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
120	[BUG]  [BUGGY]  int  denominator  =  Float.parseInt(denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Float.parseInt(denominator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Float.parseInt(denominator);	  int    denominator    =    Float.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
121	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  r0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  r0;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  Integer.MAX_VALUE  -  r0;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
122	[BUG]  [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  1L;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  long  a1  =(long)FastMath.floor(r1)-  1L;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	long  a1  =(long)FastMath.floor(r1)-  1L;	  long    a1    =(long)FastMath.floor(r1)-    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
123	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(r0  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)Math.floor(r0  +  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)Math.floor(r0  +  1);	  int    denominator    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
124	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.floor(r2);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.floor(r2);	  double    denominator    =(double)FastMath.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
125	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(d0  -  a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.floor(d0  -  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.floor(d0  -  a0);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
126	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(r0,  a0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(r0,  a0);	  int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
127	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(r0  +  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(r0  +  1);	  int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
128	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  maxDenominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  maxDenominator);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0,  maxDenominator);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
129	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0  +  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0  +  1);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
130	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  Integer.MAX_VALUE  +  1;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
131	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(d0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.floor(d0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.floor(d0);	  float    denominator    =(float)FastMath.floor(denominator);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
132	[BUG]  [BUGGY]  int  a1  =(int)FastMath.floor(r1)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a1  =(int)FastMath.floor(r1)+  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a1  =(int)FastMath.floor(r1)+  1;	  int    a1    =(int)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
133	[BUG]  [BUGGY]  if(a0  >=  epsilon)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  >=  epsilon)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  >=  epsilon)  {	  if(a0    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
134	[BUG]  [BUGGY]  if(a0  >  epsilon)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  >  epsilon)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  >  epsilon)  {	  if(a0    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  if(a0  >  r1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  >  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  >  r1)  {	  if(a0    <    r1)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
136	[BUG]  [BUGGY]  float  a0  =  (float)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  a0  =  (float)FastMath.floor(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  a0  =  (float)FastMath.floor(value);	  int    a0    =    (int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
137	[BUG]  [BUGGY]  int  denominator  =  getNumerator().denominator;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getNumerator().denominator;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getNumerator().denominator;	  int    denominator    =    getNumerator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
138	[BUG]  [BUGGY]  int  a1  =(int)FastMath.floor(r1)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a1  =(int)FastMath.floor(r1)-  1;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a1  =(int)FastMath.floor(r1)-  1;	  long    a1    =(long)FastMath.floor(r1)-    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
139	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(a0  -  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(a0  -  1);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
140	[BUG]  [BUGGY]  if(a0  <  a1  ||  a0  >  r1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  a1  ||  a0  >  r1)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  a1  ||  a0  >  r1)  {	  if(a0    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
141	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(r1);	  int    denominator    =(int)FastMath.floor(r1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
142	[BUG]  [BUGGY]  int  a0  =  (int)FastMath.floor(overflow);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a0  =  (int)FastMath.floor(overflow);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a0  =  (int)FastMath.floor(overflow);	  long    a0    =    (long)FastMath.floor(overflow);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
143	[BUG]  [BUGGY]  double  denominator  =  Integer.parseInt(r0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  Integer.parseInt(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  Integer.parseInt(r0);	  int    denominator    =    Integer.parseInt(r0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
144	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(d0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.ceil(d0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.ceil(d0);	  int    denominator    =(int)FastMath.ceil(denominator);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
145	[BUG]  [BUGGY]  float  a0  =  (float)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  a0  =  (float)FastMath.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  a0  =  (float)FastMath.floor(r0);	  int    a0    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
146	[BUG]  [BUGGY]  double  a0  =  (double)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  a0  =  (double)FastMath.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  a0  =  (double)FastMath.floor(r0);	  int    a0    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
147	[BUG]  [BUGGY]  int  a1  =(int)FastMath.log(r1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a1  =(int)FastMath.log(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a1  =(int)FastMath.log(r1);	  long    a1    =(long)FastMath.log(r1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
148	[BUG]  [BUGGY]  if(a0  <  r1  ||  a0  >  r0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0  <  r1  ||  a0  >  r0)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0  <  r1  ||  a0  >  r0)  {	  if(a0    <    r1    ||    a0    >    r1)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
149	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0  -  d1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.floor(a0  -  d1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.floor(a0  -  d1);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
150	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0  -  overflow);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.floor(a0  -  overflow);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.floor(a0  -  overflow);	  int    denominator    =(int)FastMath.floor(d0    -    a0);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
151	[BUG]  [BUGGY]  double  denominator  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =  Integer.MIN_VALUE;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =  Integer.MIN_VALUE;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
152	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =  getDenominator(r0  -  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =  getDenominator(r0  -  1);	  int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
153	[BUG]  [BUGGY]  int  a1  =  (int)FastMath.ceil(r0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a1  =  (int)FastMath.ceil(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a1  =  (int)FastMath.ceil(r0);	  long    a1    =    (long)FastMath.ceil(r0);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
154	[BUG]  [BUGGY]  float  a1  =  (float)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  a1  =  (float)FastMath.floor(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  a1  =  (float)FastMath.floor(r0);	  int    a1    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
155	[BUG]  [BUGGY]  float  denominator  =  Float.parseFloat(r1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =  Float.parseFloat(r1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =  Float.parseFloat(r1);	  float    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
156	[BUG]  [BUGGY]  float  a1  =  (float)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  a1  =  (float)FastMath.floor(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  a1  =  (float)FastMath.floor(value);	  int    a1    =    (int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
157	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.floor(value);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.floor(value);	  int    denominator    =(int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
158	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0  -  1);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0  -  1);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
159	[BUG]  [BUGGY]  if(a0!=  r0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  if(a0!=  r0)  {  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	if(a0!=  r0)  {	  if(a0    ==    r0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
160	[BUG]  [BUGGY]  int  a1  =(int)FastMath.floor(r1)-  overflow;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  int  a1  =(int)FastMath.floor(r1)-  overflow;  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	int  a1  =(int)FastMath.floor(r1)-  overflow;	  long    a1    =(long)FastMath.floor(r1)-    overflow;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
161	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.ceil(r0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  float  denominator  =(float)FastMath.ceil(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	float  denominator  =(float)FastMath.ceil(r0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
162	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.ceil(r0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);      [BUGGY]  double  denominator  =(double)FastMath.ceil(r0);  [BUGGY]      if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	181	181	1	replace	double  denominator  =(double)FastMath.ceil(r0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
