bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  r1  =  overflow.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  r1  =  overflow.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  r1  =  overflow.doubleValue();	      int    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]  long  r1  =  value.doubleValue();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  r1  =  value.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  r1  =  value.doubleValue();	      int    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]  double  r1  =  overflow.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  r1  =  overflow.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	double  r1  =  overflow.doubleValue();	      double    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	10	None	replace
4	[BUG]  [BUGGY]  Double  r1  =  value.doubleValue();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  Double  r1  =  value.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	Double  r1  =  value.doubleValue();	      double    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	10	None	replace
5	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	double  denominator  =  Integer.MAX_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	9	None	replace
6	[BUG]  [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  denominator  =  Integer.MAX_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	9	None	replace
7	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  Integer.MIN_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  int  a0  =  (int)FastMath.floor(value);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  a0  =  (int)FastMath.floor(value);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  a0  =  (int)FastMath.floor(value);	  int    a0    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  not  a  statement	4	None	replace
9	[BUG]  [BUGGY]  double  a0  =  (double)FastMath.floor(r0);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  a0  =  (double)FastMath.floor(r0);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	double  a0  =  (double)FastMath.floor(r0);	  int    a0    =    (int)FastMath.floor(r0);    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  Integer  r1  =  overflow.doubleValue();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  Integer  r1  =  overflow.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	Integer  r1  =  overflow.doubleValue();	      Integer    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
11	[BUG]  [BUGGY]  Integer  r1  =  this.value.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  Integer  r1  =  this.value.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	Integer  r1  =  this.value.doubleValue();	      Integer    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
12	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  getNumerator();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  getNumerator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	8	None	replace
13	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  getNumberDenominator();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  getNumberDenominator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	8	None	replace
14	[BUG]  [BUGGY]  double  numerator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  numerator  =  Integer.MAX_VALUE;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	double  numerator  =  Integer.MAX_VALUE;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
15	[BUG]  [BUGGY]  long  numerator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  numerator  =  Integer.MAX_VALUE;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  numerator  =  Integer.MAX_VALUE;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
16	[BUG]  [BUGGY]  int  numerator  =  Integer.MAX_VALUE  +  1;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  numerator  =  Integer.MAX_VALUE  +  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  numerator  =  Integer.MAX_VALUE  +  1;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
17	[BUG]  [BUGGY]  long  a0  =(long)FastMath.floor(r1);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =(long)FastMath.floor(r1);  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  a0  =(long)FastMath.floor(r1);	      long    a0    =(long)FastMath.floor(r0);    	non-compiled	[CE]  not  a  statement	2	None	replace
18	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.log(overflow);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =  (long)FastMath.log(overflow);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  a0  =  (long)FastMath.log(overflow);	  long    a0    =    (long)FastMath.log(r0);    	non-compiled	[CE]  not  a  statement	5	None	replace
19	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.log(value);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =  (long)FastMath.log(value);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  a0  =  (long)FastMath.log(value);	  long    a0    =    (long)FastMath.log(r0);    	non-compiled	[CE]  not  a  statement	5	None	replace
20	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  getDenominator(r0);  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  getDenominator(r0);	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	8	None	replace
21	[BUG]  [BUGGY]  int  denominator  =  getDenominator()  -  overflow;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  getDenominator()  -  overflow;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  getDenominator()  -  overflow;	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	8	None	replace
22	[BUG]  [BUGGY]  long  a0  =  (long)FastMath.rint(r0);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  long  a0  =  (long)FastMath.rint(r0);  [BUGGY]    if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	long  a0  =  (long)FastMath.rint(r0);	  long    a0    =    (long)FastMath.log(r0);    	non-compiled	[CE]  not  a  statement	5	None	replace
23	[BUG]  [BUGGY]  int  numerator  =  Integer.MIN_VALUE;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  numerator  =  Integer.MIN_VALUE;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  numerator  =  Integer.MIN_VALUE;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  Integer.MAX_VALUE  +  1;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	9	None	replace
25	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	9	None	replace
26	[BUG]  [BUGGY]  Integer  r1  =  in.doubleValue();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  Integer  r1  =  in.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	Integer  r1  =  in.doubleValue();	      Integer    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
27	[BUG]  [BUGGY]  double  denominator  =  getDenominator();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  denominator  =  getDenominator();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	double  denominator  =  getDenominator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	8	None	replace
28	[BUG]  [BUGGY]  double  r1  =  this.value.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  double  r1  =  this.value.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	double  r1  =  this.value.doubleValue();	      double    r1    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	10	None	replace
29	[BUG]  [BUGGY]  Integer  r1  =  int.doubleValue();  [CE]  class  expected  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  Integer  r1  =  int.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	Integer  r1  =  int.doubleValue();	      Integer    r1    =    value.doubleValue();    	non-compiled	[CE]  class  expected	6	None	replace
30	[BUG]  [BUGGY]  int  numerator  =  Integer.MAX_VALUE  -  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;    [BUGGY]  int  numerator  =  Integer.MAX_VALUE  -  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	180	180	1	replace	int  numerator  =  Integer.MAX_VALUE  -  1;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
