bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(value,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  a0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  a0);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(value,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  if  (FastMath.abs(value  -  a0)  <  =  denominator)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(value  -  a0)  <  =  denominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(value  -  a0)  <  =  denominator)  {	  if    (FastMath.abs(a0    -    value)    <    =    denominator)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  denominator)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  denominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  denominator)  {	  if    (FastMath.abs(a0    -    value)    <    =    denominator)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  numerator)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  numerator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  =  numerator)  {	  if    (FastMath.abs(a0    -    value)    <    =    denominator)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  denominator)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  denominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)  <  =  denominator)  {	  if    (FastMath.abs(a0    -    value)    <    =    denominator)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  double  epsilon  =(double)Math.floor(r0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =(double)Math.floor(r0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =(double)Math.floor(r0);	      int    epsilon    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  long  epsilon  =(long)Math.floor(r0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  long  epsilon  =(long)Math.floor(r0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	long  epsilon  =(long)Math.floor(r0);	      int    epsilon    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  float  epsilon  =(float)Math.floor(r0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  float  epsilon  =(float)Math.floor(r0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	float  epsilon  =(float)Math.floor(r0);	      int    epsilon    =(int)Math.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =(double)FastMath.floor(r0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =(double)FastMath.floor(r0);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  long  epsilon  =(long)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  long  epsilon  =(long)FastMath.floor(r0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	long  epsilon  =(long)FastMath.floor(r0);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  float  epsilon  =(float)FastMath.floor(r0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  float  epsilon  =(float)FastMath.floor(r0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	float  epsilon  =(float)FastMath.floor(r0);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  double  epsilon  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =  Integer.MAX_VALUE;  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =  Integer.MAX_VALUE;	      int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  long  epsilon  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  long  epsilon  =  Integer.MAX_VALUE;  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	long  epsilon  =  Integer.MAX_VALUE;	      int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  int  epsilon  =  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Integer.MAX_VALUE  +  1;  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Integer.MAX_VALUE  +  1;	      int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  if  (FastMath.abs(value  -  a0)  <  =  maxIterations)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(value  -  a0)  <  =  maxIterations)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(value  -  a0)  <  =  maxIterations)  {	  if    (FastMath.abs(a0    -    value)    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  maxIterations)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  maxIterations)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)  <  =  maxIterations)  {	  if    (FastMath.abs(a0    -    value)    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  maxIterations)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  maxIterations)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  maxIterations)  {	  if    (FastMath.abs(a0    -    value)    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  if(a0  <  a1  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(a0  <  a1  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(a0  <  a1  ||  FastMath.abs(a0  -  value)  <  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  if(a0  <  value  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(a0  <  value  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(a0  <  value  ||  FastMath.abs(a0  -  value)  <  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  if(a0  <  =  value  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(a0  <  =  value  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(a0  <  =  value  ||  FastMath.abs(a0  -  value)  <  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
22	[BUG]  [BUGGY]  if(a0  <  a0  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(a0  <  a0  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(a0  <  a0  ||  FastMath.abs(a0  -  value)  <  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  double  epsilon  =  Math.min(value,  a0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =  Math.min(value,  a0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =  Math.min(value,  a0);	      int    epsilon    =    Math.min(value,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  int  epsilon  =  Math.min(a0,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Math.min(a0,  value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Math.min(a0,  value);	      int    epsilon    =    Math.min(value,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  long  epsilon  =  Math.min(value,  a0);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  long  epsilon  =  Math.min(value,  a0);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	long  epsilon  =  Math.min(value,  a0);	      int    epsilon    =    Math.min(value,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  int  epsilon  =  Math.min(value,  overflow);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Math.min(value,  overflow);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Math.min(value,  overflow);	      int    epsilon    =    Math.min(value,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =(double)FastMath.floor(value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =(double)FastMath.floor(value);	      int    epsilon    =(int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  long  epsilon  =(long)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  long  epsilon  =(long)FastMath.floor(value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	long  epsilon  =(long)FastMath.floor(value);	      int    epsilon    =(int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  float  epsilon  =(float)FastMath.floor(value);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  float  epsilon  =(float)FastMath.floor(value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	float  epsilon  =(float)FastMath.floor(value);	      int    epsilon    =(int)FastMath.floor(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  double  n  =  value.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  n  =  value.doubleValue();  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  n  =  value.doubleValue();	      int    n    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  int  n  =  overflow.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  n  =  overflow.doubleValue();  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  n  =  overflow.doubleValue();	      int    n    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  int  n  =  this.value.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  n  =  this.value.doubleValue();  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  n  =  this.value.doubleValue();	      int    n    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)>  epsilon)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)>  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)>  epsilon)  {	  if    (FastMath.abs(a0    -    value)>    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)>  this.denominator)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)>  this.denominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)>  this.denominator)  {	  if    (FastMath.abs(a0    -    value)>    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)>  this.numerator)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)>  this.numerator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)>  this.numerator)  {	  if    (FastMath.abs(a0    -    value)>    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  if  (FastMath.abs(value  -  a0)>  epsilon)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(value  -  a0)>  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(value  -  a0)>  epsilon)  {	  if    (FastMath.abs(a0    -    value)>    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  int  numerator  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  numerator  =  Integer.MAX_VALUE;  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  numerator  =  Integer.MAX_VALUE;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  int  numerator  =  a0.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  numerator  =  a0.doubleValue();  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  numerator  =  a0.doubleValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  int  numerator  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  numerator  =  Integer.MIN_VALUE;  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  numerator  =  Integer.MIN_VALUE;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  int  numerator  =  r0.doubleValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  numerator  =  r0.doubleValue();  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  numerator  =  r0.doubleValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  double  epsilon  =(double)Math.floor(value);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =(double)Math.floor(value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =(double)Math.floor(value);	      int    epsilon    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  long  epsilon  =(long)Math.floor(value);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  long  epsilon  =(long)Math.floor(value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	long  epsilon  =(long)Math.floor(value);	      int    epsilon    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  float  epsilon  =(float)Math.floor(value);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  float  epsilon  =(float)Math.floor(value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	float  epsilon  =(float)Math.floor(value);	      int    epsilon    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  epsilon)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)  <  =  epsilon)  {	  if    (FastMath.abs(a0    -    value)    <    =    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  if  (FastMath.abs(value  -  a0)  <  =  epsilon)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(value  -  a0)  <  =  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(value  -  a0)  <  =  epsilon)  {	  if    (FastMath.abs(a0    -    value)    <    =    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  overflow)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  overflow)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  =  overflow)  {	  if    (FastMath.abs(a0    -    value)    <    =    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  double  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  double  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	double  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  value);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  value);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  if  (FastMath.abs(value  -  a0)  <  overflow)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(value  -  a0)  <  overflow)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(value  -  a0)  <  overflow)  {	  if    (FastMath.abs(a0    -    value)    <    overflow)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  overflow)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  overflow)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)  <  =  overflow)  {	  if    (FastMath.abs(a0    -    value)    <    overflow)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  this.denominator)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  this.denominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)  <  this.denominator)  {	  if    (FastMath.abs(a0    -    overflow)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  maxDenominator)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  maxDenominator)  {	  if    (FastMath.abs(a0    -    value)    <    =    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  if  (value  -  FastMath.abs(a0)  <  =  epsilon)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (value  -  FastMath.abs(a0)  <  =  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (value  -  FastMath.abs(a0)  <  =  epsilon)  {	  if    (FastMath.abs(a0    -    value)    <    =    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  maxDenominator)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  maxDenominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  =  maxDenominator)  {	  if    (FastMath.abs(a0    -    value)    <    =    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  if(value  <  a0  ||  FastMath.abs(a0  -  overflow)  <  epsilon)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(value  <  a0  ||  FastMath.abs(a0  -  overflow)  <  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(value  <  a0  ||  FastMath.abs(a0  -  overflow)  <  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  if(value  <  a0  ||  FastMath.abs(a0  -  value)>  epsilon)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(value  <  a0  ||  FastMath.abs(a0  -  value)>  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(value  <  a0  ||  FastMath.abs(a0  -  value)>  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  r0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  r0)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  r0)  {	  if    (FastMath.abs(a0    -    value)    <    =    denominator)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  value)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  overflow)  <  =  value)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  overflow)  <  =  value)  {	  if    (FastMath.abs(a0    -    value)    <    overflow)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  int  epsilon  =  Math.min(value,  maxIterations);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Math.min(value,  maxIterations);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Math.min(value,  maxIterations);	      int    epsilon    =    Math.min(value,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  int  epsilon  =  Math.min(value,  maxDenominator);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Math.min(value,  maxDenominator);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Math.min(value,  maxDenominator);	      int    epsilon    =    Math.min(value,    a0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  Integer  numerator  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  Integer  numerator  =  Integer.MAX_VALUE;  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	Integer  numerator  =  Integer.MAX_VALUE;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon  +  1);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon  +  1);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(value,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  int  value  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  value  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  value  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(value,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  int  numerator  =(int)Math.floor(r0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  numerator  =(int)Math.floor(r0);  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  numerator  =(int)Math.floor(r0);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  int  denominator  =  a0.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  denominator  =  a0.doubleValue();  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  denominator  =  a0.doubleValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
66	[BUG]  [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  this.denominator)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if  (FastMath.abs(a0  -  value)  <  =  this.denominator)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if  (FastMath.abs(a0  -  value)  <  =  this.denominator)  {	  if    (FastMath.abs(a0    -    value)    <    =    denominator)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
67	[BUG]  [BUGGY]  float  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  float  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	float  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(value,  epsilon);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(value,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  float  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  float  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	float  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon  +  1);  [BUGGY]    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	int  epsilon  =  Integer.MAX_VALUE;  this.numerator  =  Math.min(a0,  epsilon  +  1);	      int    epsilon    =    Integer.MAX_VALUE;    this.numerator    =    Math.min(a0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  if(a0  <  epsilon  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }      [BUGGY]  if(a0  <  epsilon  ||  FastMath.abs(a0  -  value)  <  epsilon)  {  [BUGGY]    this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  long  p0  =  1;  long  q0  =  0;  long  p1  =  a0;  long  q1  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	187	187	1	replace	if(a0  <  epsilon  ||  FastMath.abs(a0  -  value)  <  epsilon)  {	  if(value    <    a0    ||    FastMath.abs(a0    -    value)    <    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
