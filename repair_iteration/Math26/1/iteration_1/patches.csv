bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,long)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,long)	22	None	replace
2	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double)  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double)	22	None	replace
3	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double)  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double)	22	None	replace
4	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  numerator);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  numerator);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	22	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  a0,  1l);	  throw    new    FractionConversionException(fastMath,    a0,    1l);    	compilable	  [FE]  AssertionError  	21	1	replace
6	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  1l);	  throw    new    FractionConversionException(fastMath,    a0,    1l);    	compilable	  [FE]  AssertionError  	21	1	replace
7	[BUG]  [BUGGY]  throw  new  FractionConversionException(fnMath,  a0,  1l);  [CE]  cannot  find  symbol  fnMath  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(fnMath,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fnMath,  a0,  1l);	  throw    new    FractionConversionException(fastMath,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol  fnMath	21	None	replace
8	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a1,  1l);  [CE]  cannot  find  symbol  a1  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  a1,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a1,  1l);	  throw    new    FractionConversionException(fastMath,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol  a1	21	None	replace
9	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  value);	      int    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	18	None	replace
10	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(value,  r0);	      int    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	18	None	replace
11	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0);	      int    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	18	None	replace
12	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  numerator);  [CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Float.parseFloat(r0,  numerator);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  numerator);	      int    denominator    =    Float.parseFloat(r0);    	non-compiled	[CE]  method  parseFloat  in  class  Float  cannot  be  applied  to  given  types;	18	None	replace
13	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(a0);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  this.numerator  =(int)Math.floor(a0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(int)Math.floor(a0);	      	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	9	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)Math.floor(value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)Math.floor(value);	      	compilable	  [FE]  AssertionError  	9	1	replace
15	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(value);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)Math.floor(value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)Math.floor(value);	      	compilable	  [FE]  AssertionError  	9	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)Math.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)Math.floor(r0);	      	compilable	  [FE]  AssertionError  	9	1	replace
17	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(r0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)Math.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)Math.floor(r0);	      	compilable	  [FE]  AssertionError  	9	1	replace
18	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(value);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  this.numerator  =(int)Math.floor(value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(int)Math.floor(value);	      	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	9	None	replace
19	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  1l);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    throw  new  FractionConversionException(overflow,  a0,  1l);	  	non-compiled	[CE]  unreachable  statement	4	None	add
20	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  Throw  new  FractionConversionException(overflow,  a0,  1l);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  Throw  new  FractionConversionException(overflow,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    Throw  new  FractionConversionException(overflow,  a0,  1l);	  	non-compiled	[CE]  not  a  statement	4	None	add
21	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  1,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,int,long)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  1,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    throw  new  FractionConversionException(overflow,  a0,  1,  1l);	  	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,int,long)	4	None	add
22	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  2l);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  2l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    throw  new  FractionConversionException(overflow,  a0,  2l);	  	non-compiled	[CE]  unreachable  statement	4	None	add
23	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  unreachable  statement	4	None	add
24	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(r0);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  epsilon  =(double)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  epsilon  =(double)FastMath.floor(r0);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	24	None	replace
25	[BUG]  [BUGGY]  int  epsilon  =(int)FastMath.floor(value);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  epsilon  =(int)FastMath.floor(value);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  epsilon  =(int)FastMath.floor(value);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	24	None	replace
26	[BUG]  [BUGGY]  long  epsilon  =(long)FastMath.floor(r0);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  long  epsilon  =(long)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  epsilon  =(long)FastMath.floor(r0);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	24	None	replace
27	[BUG]  [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    Integer.MAX_VALUE;    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	10	None	add
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	        int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	10	1	add
29	[BUG]  [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	10	1	add
30	[BUG]  [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MIN_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    Integer.MAX_VALUE;    int  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	10	None	add
31	[BUG]  [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  Integer.MAX_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    Integer.MAX_VALUE;    Integer  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	10	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =(int)FastMath.floor(a0);	      int    denominator    =(int)FastMath.floor(denominator);    	compilable	  [FE]  AssertionError  	23	1	replace
33	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(a0);	      int    denominator    =(int)FastMath.floor(denominator);    	compilable	  [FE]  AssertionError  	23	1	replace
34	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(d0);  [CE]  cannot  find  symbol  d0  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.floor(d0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(d0);	      int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol  d0	23	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  long  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	long  a1  =  Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
36	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  long  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  a1  =  Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
38	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
39	[BUG]  [BUGGY]  Long  a1  =  Integer.MAX_VALUE;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Long  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Long  a1  =  Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  incompatible  types	13	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  0;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  0;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
41	[BUG]  [BUGGY]  Integer  a1  =  0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  0;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  0;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =(int)FastMath.ceil(r0);	      int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	26	1	replace
43	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.ceil(r0);	      int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	26	1	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  denominator  =(double)FastMath.floor(r0);	      int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	26	1	replace
45	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.floor(r0);	      int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	26	1	replace
46	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.denominator(r0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.denominator(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.denominator(r0);	      int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
47	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getDenominator(r0,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a0);	      int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	19	None	replace
48	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  r1);  [CE]  cannot  find  symbol  r1  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getDenominator(a0,  r1);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  r1);	      int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  cannot  find  symbol  r1	19	None	replace
49	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  value);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getDenominator(r0,  value);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  value);	      int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	19	None	replace
50	[BUG]  [BUGGY]  int  denominator  =  getDenominator(value,  r0);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getDenominator(value,  r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(value,  r0);	      int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	19	None	replace
51	[BUG]  [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	25	None	add
52	[BUG]  [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(r1);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	25	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	        int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);	  	compilable	  [FE]  AssertionError  	25	1	add
54	[BUG]  [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);	  	compilable	  [FE]  AssertionError  	25	1	add
55	[BUG]  [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(r1));	  	non-compiled	[CE]  ';'  expected	25	None	add
56	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  1l);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    throw  new  FractionConversionException(r0,  a0,  1l);	  	non-compiled	[CE]  unreachable  statement	1	None	add
57	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  Throw  new  FractionConversionException(r0,  a0,  1l);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  Throw  new  FractionConversionException(r0,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    Throw  new  FractionConversionException(r0,  a0,  1l);	  	non-compiled	[CE]  not  a  statement	1	None	add
58	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  1,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  1,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    throw  new  FractionConversionException(r0,  a0,  1,  1l);	  	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long)	1	None	add
59	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  2l);  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  2l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    throw  new  FractionConversionException(r0,  a0,  2l);	  	non-compiled	[CE]  unreachable  statement	1	None	add
60	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  3l);  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  3l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    throw  new  FractionConversionException(r0,  a0,  3l);	  	non-compiled	[CE]  unreachable  statement	1	None	add
61	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long)	2	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  a0,  overflow);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
63	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  overflow,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
65	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
66	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)	2	None	replace
67	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractionConversionException(value,  a0,  overflow);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractionConversionException(value,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    throw  new  FractionConversionException(value,  a0,  overflow);	  	non-compiled	[CE]  unreachable  statement	6	None	add
68	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  Throw  new  FractionConversionException(value,  a0,  overflow);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  Throw  new  FractionConversionException(value,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    Throw  new  FractionConversionException(value,  a0,  overflow);	  	non-compiled	[CE]  not  a  statement	6	None	add
69	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractConversionException(value,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractConversionException(value,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    throw  new  FractConversionException(value,  a0,  overflow);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
70	[BUG]  [BUGGY]      int  denominator  =  getDenominator();  int  denominator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  int  denominator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    getDenominator();    int  denominator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	16	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	        int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();	  	compilable	  [FE]  AssertionError  	16	1	add
72	[BUG]  [BUGGY]      int  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();	  	compilable	  [FE]  AssertionError  	16	1	add
73	[BUG]  [BUGGY]      int  denominator  =  getDenominator();  Integer  denominator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  Integer  denominator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    getDenominator();    Integer  denominator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	16	None	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  Integer.MIN_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
75	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MIN_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  0;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  0;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
77	[BUG]  [BUGGY]  int  denominator  =  0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  0;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  0;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
78	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  overflow;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  -  overflow;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  denominator  =  Integer.MAX_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
80	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Integer.MAX_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  denominator  =  Math.min(value,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  denominator  =  Math.min(value,  a0);	      int    denominator    =    Math.min(value,    a0);    	compilable	  [FE]  AssertionError  	15	1	replace
82	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  a0);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  double  denominator  =  Math.min(value,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Math.min(value,  a0);	      int    denominator    =    Math.min(value,    a0);    	compilable	  [FE]  AssertionError  	15	1	replace
83	[BUG]  [BUGGY]  long  denominator  =  Math.min(value,  a0);  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  long  denominator  =  Math.min(value,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =  Math.min(value,  a0);	      int    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
84	[BUG]  [BUGGY]  float  denominator  =  Math.min(value,  a0);  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  float  denominator  =  Math.min(value,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =  Math.min(value,  a0);	      int    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
85	[BUG]  [BUGGY]  int  denominator  =  Math.min(denominator,  a0);  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Math.min(denominator,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Math.min(denominator,  a0);	      int    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
86	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  value,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long)	7	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(this.numerator,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    	compilable	  [FE]  AssertionError  	7	1	replace
88	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(this.numerator,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    	compilable	  [FE]  AssertionError  	7	1	replace
89	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  r0);	  throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double)	7	None	replace
90	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  r1);  [CE]  cannot  find  symbol  r1  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  value,  r1);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  r1);	  throw    new    FractionConversionException(value,    a0,    r1);    	non-compiled	[CE]  cannot  find  symbol  r1	20	None	replace
91	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  value);	  throw    new    FractionConversionException(value,    a0,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double)	20	None	replace
92	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  value,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  value,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  value,  1l);	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)	3	None	replace
93	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  r0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double,long)  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  value,  r0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  r0,  1l);	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double,long)	3	None	replace
94	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double,long)  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  value,  1l);	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double,long)	3	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  overflow,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    	compilable	  [FE]  AssertionError  	5	1	replace
96	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    	compilable	  [FE]  AssertionError  	5	1	replace
97	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  r0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,double)  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  r0);	  throw    new    FractionConversionException(overflow,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,double)	5	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getNumerator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  getNumerator();	      int    denominator    =    getDenominator();    	compilable	  [FE]  AssertionError  	17	1	replace
99	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getNumerator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator();	      int    denominator    =    getDenominator();    	compilable	  [FE]  AssertionError  	17	1	replace
100	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getNumberDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumberDenominator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
101	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getDenominator(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0);	      int    denominator    =    getDenominator();    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	17	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)Math.floor(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =(int)Math.floor(a0);	      int    denominator    =(int)Math.floor(denominator);    	compilable	  [FE]  AssertionError  	27	1	replace
103	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(a0);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)Math.floor(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)Math.floor(a0);	      int    denominator    =(int)Math.floor(denominator);    	compilable	  [FE]  AssertionError  	27	1	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)Math.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =(int)Math.floor(r0);	      int    denominator    =(int)Math.floor(denominator);    	compilable	  [FE]  AssertionError  	27	1	replace
105	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(r0);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)Math.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)Math.floor(r0);	      int    denominator    =(int)Math.floor(denominator);    	compilable	  [FE]  AssertionError  	27	1	replace
106	[BUG]  [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MAX_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        Integer    a1    =    Integer.MAX_VALUE;    Integer  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	12	None	add
107	[BUG]  [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MAX_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        Integer    a1    =    Integer.MAX_VALUE;    int  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	12	None	add
108	[BUG]  [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MIN_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MIN_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        Integer    a1    =    Integer.MAX_VALUE;    Integer  a1  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	12	None	add
109	[BUG]  [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  Long  a1  =  Integer.MAX_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      Integer  a1  =  Integer.MAX_VALUE;  Long  a1  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        Integer    a1    =    Integer.MAX_VALUE;    Long  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	12	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      this.numerator  =(int)Math.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	        this.numerator  =(int)Math.floor(r0);	  	compilable	  [FE]  AssertionError  	8	1	add
111	[BUG]  [BUGGY]      this.numerator  =(int)Math.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      this.numerator  =(int)Math.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        this.numerator  =(int)Math.floor(r0);	  	compilable	  [FE]  AssertionError  	8	1	add
112	[BUG]  [BUGGY]  int  denominator  =  r1.doubleValue();  [CE]  cannot  find  symbol  r1  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  r1.doubleValue();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  r1.doubleValue();	      int    denominator    =    r0.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  r1	14	None	replace
113	[BUG]  [BUGGY]  int  denominator  =  a0.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  a0.doubleValue();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  a0.doubleValue();	      int    denominator    =    r0.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	14	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  Integer.MAX_VALUE  -  1;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
115	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  Integer.MAX_VALUE  +  1;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
117	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  +  1;	      int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)FastMath.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)FastMath.floor(r0);	      	compilable	  [FE]  AssertionError  	9	1	replace
119	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)FastMath.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)FastMath.floor(r0);	      	compilable	  [FE]  AssertionError  	9	1	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)FastMath.floor(value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)FastMath.floor(value);	      	compilable	  [FE]  AssertionError  	9	1	replace
121	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(value);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)FastMath.floor(value);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)FastMath.floor(value);	      	compilable	  [FE]  AssertionError  	9	1	replace
122	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r0);  return;  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  epsilon  =(int)FastMath.floor(r0);  return;  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)FastMath.floor(r0);  return;	      	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	9	None	replace
123	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  overflow);  [CE]  cannot  find  symbol  r1  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  r1,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol  r1	7	None	replace
124	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  r1);  [CE]  cannot  find  symbol  r1  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  r1);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  r1);	  throw    new    FractionConversionException(overflow,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol  r1	5	None	replace
125	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1l);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    throw  new  FractionConversionException(a0,  a0,  1l);	  	non-compiled	[CE]  unreachable  statement	4	None	add
126	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  1);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  throw  new  FractionConversionException(overflow,  a0,  1);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    throw  new  FractionConversionException(overflow,  a0,  1);	  	non-compiled	[CE]  unreachable  statement	4	None	add
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  Integer.MAX_VALUE  +  1;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
128	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MAX_VALUE  +  1;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  Integer.MIN_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
130	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MIN_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
131	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(d0);  [CE]  cannot  find  symbol  d0  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)Math.floor(d0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)Math.floor(d0);	      int    denominator    =(int)Math.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol  d0	27	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.floor(value);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =(int)FastMath.floor(value);	      int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	26	1	replace
133	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(value);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.floor(value);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(value);	      int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	26	1	replace
134	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  epsilon  =  Integer.MAX_VALUE;  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  epsilon  =  Integer.MAX_VALUE;  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    int  epsilon  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	1	None	add
135	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  1);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  throw  new  FractionConversionException(r0,  a0,  1);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    throw  new  FractionConversionException(r0,  a0,  1);	  	non-compiled	[CE]  unreachable  statement	1	None	add
136	[BUG]  [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =(int)FastMath.floor(r0);    Integer  denominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	25	None	add
137	[BUG]  [BUGGY]  float  epsilon  =(float)FastMath.floor(r0);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  float  epsilon  =(float)FastMath.floor(r0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  epsilon  =(float)FastMath.floor(r0);	      int    epsilon    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	24	None	replace
138	[BUG]  [BUGGY]  throw  new  FractionConversionException(len,  a0,  1l);  [CE]  cannot  find  symbol  len  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(len,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(len,  a0,  1l);	  throw    new    FractionConversionException(fastMath,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol  len	21	None	replace
139	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractionConversionException(value,  a0,  outflow);  [CE]  cannot  find  symbol  outflow  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractionConversionException(value,  a0,  outflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    throw  new  FractionConversionException(value,  a0,  outflow);	  	non-compiled	[CE]  cannot  find  symbol  outflow	6	None	add
140	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractionConversionException(value,  a0,  Overflow);  [CE]  cannot  find  symbol  Overflow  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  throw  new  FractionConversionException(value,  a0,  Overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    throw  new  FractionConversionException(value,  a0,  Overflow);	  	non-compiled	[CE]  cannot  find  symbol  Overflow	6	None	add
141	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  epsilon);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double)  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  epsilon);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  epsilon);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double)	22	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	        int    denominator    =    getDenominator();    int  numerator  =  getDenominator();	  	compilable	  [FE]  AssertionError  	16	1	add
143	[BUG]  [BUGGY]      int  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    getDenominator();    int  numerator  =  getDenominator();	  	compilable	  [FE]  AssertionError  	16	1	add
144	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  denominator);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  denominator);	  throw    new    FractionConversionException(value,    a0,    r1);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	20	None	replace
145	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  ZERO);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,Fraction)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  ZERO);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  ZERO);	  throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,Fraction)	2	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  a0,  3);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
147	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  3);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  a0,  2);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
149	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  2);	  throw    new    FractionConversionException(r0,    a0,    1l);    	compilable	  [FE]  AssertionError  	2	1	replace
150	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  numerator);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =  getDenominator(r0,  numerator);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  numerator);	      int    denominator    =    getDenominator(r0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	19	None	replace
151	[BUG]  [BUGGY]  this.numerator  =  Math.min(value,  a0);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  this.numerator  =  Math.min(value,  a0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.min(value,  a0);	      	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
152	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    int  denominator  =(int)FastMath.floor(denominator);	  	non-compiled	[CE]  unreachable  statement	4	None	add
153	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  int  denominator  =(int)FastMath.floor(r0);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1l);  int  denominator  =(int)FastMath.floor(r0);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(overflow,    a0,    1l);    int  denominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  unreachable  statement	4	None	add
154	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a2);  [CE]  cannot  find  symbol  a2  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  a2);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a2);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  cannot  find  symbol  a2	22	None	replace
155	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a1);  [CE]  cannot  find  symbol  a1  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  a1);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a1);	  throw    new    FractionConversionException(a0,    r1);    	non-compiled	[CE]  cannot  find  symbol  a1	22	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  (int)Math.floor(a0);	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
157	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  (int)Math.floor(a0);	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  (int)Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
159	[BUG]  [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  (int)Integer.MAX_VALUE;	      Integer    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	13	1	replace
160	[BUG]  [BUGGY]      int  denominator  =  getDenominator();  Int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      int  denominator  =  getDenominator();  Int  denominator  =  getDenominator();  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        int    denominator    =    getDenominator();    Int  denominator  =  getDenominator();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
161	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  r0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  overflow);	  throw    new    FractionConversionException(value,    a0,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long)	20	None	replace
162	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  int  denominator  =(int)FastMath.floor(denominator);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  int  denominator  =(int)FastMath.floor(denominator);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    int  denominator  =(int)FastMath.floor(denominator);	  	non-compiled	[CE]  unreachable  statement	6	None	add
163	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  int  denominator  =  Integer.MAX_VALUE;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(value,  a0,  overflow);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(value,    a0,    overflow);    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  unreachable  statement	6	None	add
164	[BUG]  [BUGGY]  throw  new  FractionConversionException(fn,  a0,  overflow);  [CE]  cannot  find  symbol  fn  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(fn,  a0,  overflow);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fn,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol  fn	7	None	replace
165	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  unreachable  statement	1	None	add
166	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =  r0.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =  r0.doubleValue();  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    int  denominator  =  r0.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	add
167	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =  getDenominator();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =  getDenominator();  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    1l);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  unreachable  statement	1	None	add
168	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0);  [BUGGY]    throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0);	      int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
169	[BUG]  [BUGGY]      if(value  >  epsilon)  {  this.numerator  =  Math.abs(a0);  }  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]      if(value  >  epsilon)  {  this.numerator  =  Math.abs(a0);  }  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	        if(value  >  epsilon)  {  this.numerator  =  Math.abs(a0);  }	  	non-compiled	[CE]  possible  loss  of  precision	8	None	add
170	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(Fraction,long,long)  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  1l);	  throw    new    FractionConversionException(fastMath,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(Fraction,long,long)	21	None	replace
171	[BUG]  [BUGGY]  throw  new  FractionConversionException(null,  a0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(<null>,long,long)  [FE]    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(null,  a0,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(null,  a0,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(<null>,long,long)	5	None	replace
172	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  value,  1l);  [CE]  cannot  find  symbol  r1  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  r1,  value,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  value,  1l);	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol  r1	3	None	replace
173	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  r1,  1l);  [CE]  cannot  find  symbol  r1  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {    [BUGGY]  throw  new  FractionConversionException(a0,  value,  r1,  1l);  [BUGGY]    }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  r1,  1l);	  throw    new    FractionConversionException(a0,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol  r1	3	None	replace
