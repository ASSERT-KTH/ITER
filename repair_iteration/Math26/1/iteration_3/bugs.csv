bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  a0,  1);	  throw    new    FractionConversionException(r0,    a0,    2);    	compilable	  [FE]  AssertionError  	149	1	replace
2	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1);	  throw    new    FractionConversionException(r0,    a0,    2);    	compilable	  [FE]  AssertionError  	149	1	replace
3	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  2);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  2);	  throw    new    FractionConversionException(r0,    a0,    2);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)	149	None	replace
4	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon);	  throw    new    FractionConversionException(r0,    a0,    2);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double)	149	None	replace
5	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  denominator  =(int)FastMath.ceil(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  denominator  =(int)FastMath.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.ceil(r0);    int  denominator  =(int)FastMath.ceil(r0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	42	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  desnominator  =(int)FastMath.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =(int)FastMath.ceil(r0);    int  desnominator  =(int)FastMath.ceil(r0);	  	compilable	  [FE]  AssertionError  	42	1	add
7	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  desnominator  =(int)FastMath.ceil(r0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  desnominator  =(int)FastMath.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.ceil(r0);    int  desnominator  =(int)FastMath.ceil(r0);	  	compilable	  [FE]  AssertionError  	42	1	add
8	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  Int  denominator  =(int)FastMath.ceil(r0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  Int  denominator  =(int)FastMath.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.ceil(r0);    Int  denominator  =(int)FastMath.ceil(r0);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
9	[BUG]  [BUGGY]  int  denominator  =  overflow.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  overflow.doubleValue();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  overflow.doubleValue();	  int    denominator    =    a0.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	113	None	replace
10	[BUG]  [BUGGY]  int  numerator  =  a0.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  numerator  =  a0.doubleValue();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  numerator  =  a0.doubleValue();	  int    denominator    =    a0.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	113	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator();  int  numerator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  getDenominator();  int  numerator  =  getNumerator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	compilable	  [FE]  AssertionError  	143	1	replace
12	[BUG]  [BUGGY]  int  denominator  =  getDenominator();  int  numerator  =  getNumerator();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator();  int  numerator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator();  int  numerator  =  getNumerator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	compilable	  [FE]  AssertionError  	143	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  getNumerator();  int  numerator  =  getNumerator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	compilable	  [FE]  AssertionError  	143	1	replace
14	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  numerator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator();  int  numerator  =  getNumerator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	compilable	  [FE]  AssertionError  	143	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  getNumerator();  int  numerator  =  getDenominator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	compilable	  [FE]  AssertionError  	143	1	replace
16	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  int  numerator  =  getDenominator();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator();  int  numerator  =  getDenominator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	compilable	  [FE]  AssertionError  	143	1	replace
17	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  denominator);	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	162	None	replace
18	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  denominator  =(int)FastMath.floor(denominator);  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow);  denominator  =(int)FastMath.floor(denominator);	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  unreachable  statement	162	None	replace
19	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  throw  new  FractionConversionException(r0,  a0,  2);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  throw  new  FractionConversionException(r0,  a0,  2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    2);    throw  new  FractionConversionException(r0,  a0,  2);	  	non-compiled	[CE]  unreachable  statement	148	None	add
20	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  Throw  new  FractionConversionException(r0,  a0,  2);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  Throw  new  FractionConversionException(r0,  a0,  2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    2);    Throw  new  FractionConversionException(r0,  a0,  2);	  	non-compiled	[CE]  not  a  statement	148	None	add
21	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  throw  new  FractionConversionException(r0,  a0,  3);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  throw  new  FractionConversionException(r0,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    2);    throw  new  FractionConversionException(r0,  a0,  3);	  	non-compiled	[CE]  unreachable  statement	148	None	add
22	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  throw  new  FractionConversionException(r0,  a0,  2,  2);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  throw  new  FractionConversionException(r0,  a0,  2,  2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    2);    throw  new  FractionConversionException(r0,  a0,  2,  2);	  	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,int)	148	None	add
23	[BUG]  [BUGGY]  throw  new  FractionConversionException(null,  a0,  overflow,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(<null>,long,long,long)  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(null,  a0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(null,  a0,  overflow,  1l);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(<null>,long,long,long)	171	None	replace
24	[BUG]  [BUGGY]  throw  new  FractionConversionException(null,  a0,  r0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(<null>,long,double,long)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(null,  a0,  r0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(null,  a0,  r0,  1l);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(<null>,long,double,long)	171	None	replace
25	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  numerator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  numerator);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	171	None	replace
26	[BUG]  [BUGGY]  float  epsilon  =(float)FastMath.floor(value);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  epsilon  =(float)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  epsilon  =(float)FastMath.floor(value);	  float    epsilon    =(float)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	137	None	replace
27	[BUG]  [BUGGY]  float  epsilon  =(float)FastMath.floor(r1);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  epsilon  =(float)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  epsilon  =(float)FastMath.floor(r1);	  float    epsilon    =(float)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	137	None	replace
28	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  denominator  =(int)FastMath.floor(a0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  denominator  =(int)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(a0);    int  denominator  =(int)FastMath.floor(a0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	32	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =(int)FastMath.floor(a0);    int  desnominator  =(int)FastMath.floor(a0);	  	compilable	  [FE]  AssertionError  	32	1	add
30	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(a0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(a0);    int  desnominator  =(int)FastMath.floor(a0);	  	compilable	  [FE]  AssertionError  	32	1	add
31	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  Int  denominator  =(int)FastMath.floor(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  Int  denominator  =(int)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(a0);    Int  denominator  =(int)FastMath.floor(a0);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
32	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1l);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    throw  new  FractionConversionException(a0,  a0,  1l);	  	non-compiled	[CE]  unreachable  statement	5	None	add
33	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  Throw  new  FractionConversionException(a0,  a0,  1l);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  Throw  new  FractionConversionException(a0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    Throw  new  FractionConversionException(a0,  a0,  1l);	  	non-compiled	[CE]  not  a  statement	5	None	add
34	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,int,long)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    throw  new  FractionConversionException(a0,  a0,  1,  1l);	  	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,int,long)	5	None	add
35	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractConversionException(a0,  a0,  1l);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractConversionException(a0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    throw  new  FractConversionException(a0,  a0,  1l);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
36	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  2l);  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    throw  new  FractionConversionException(a0,  a0,  2l);	  	non-compiled	[CE]  unreachable  statement	5	None	add
37	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  value,  a0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long,long)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  value,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  value,  a0,  1l);	  throw    new    FractionConversionException(r0,    value,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long,long)	92	None	replace
38	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  r0,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  r0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  r0,  1l);	  throw    new    FractionConversionException(r0,    value,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)	92	None	replace
39	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long)  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  1l);	  throw    new    FractionConversionException(r0,    value,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long)	92	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  desnominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	29	1	replace
41	[BUG]  [BUGGY]  int  desnominator  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  desnominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	29	1	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	long  denominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	29	1	replace
43	[BUG]  [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	29	1	replace
44	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  r0);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  r0);	  int    denominator    =    getDenominator(r0,    a0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	47	None	replace
45	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  value);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a0,  value);	  int    denominator    =    getDenominator(r0,    a0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	47	None	replace
46	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  numerator);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a0,  numerator);	  int    denominator    =    getDenominator(r0,    a0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	47	None	replace
47	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  overflow);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a0,  overflow);	  int    denominator    =    getDenominator(r0,    a0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	47	None	replace
48	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  double  denominator  =  Integer.MAX_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  double  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Integer.MAX_VALUE;    double  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	79	None	add
49	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  Double  denominator  =  Integer.MAX_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  Double  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Integer.MAX_VALUE;    Double  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	79	None	add
50	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Integer.MAX_VALUE;    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	79	None	add
51	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  double  denominator  =  Integer.MIN_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  double  denominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Integer.MAX_VALUE;    double  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	79	None	add
52	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MAX_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]            AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Integer.MAX_VALUE;    long  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	79	None	add
53	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  denominator,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int,long)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  denominator,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  denominator,  1l);	  throw    new    FractionConversionException(a0,    value,    r1,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int,long)	173	None	replace
54	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  a1,  1l);  [CE]  cannot  find  symbol  a1  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  a1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  a1,  1l);	  throw    new    FractionConversionException(a0,    value,    r1,    1l);    	non-compiled	[CE]  cannot  find  symbol  a1	173	None	replace
55	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  epsilon,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double,long)  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  epsilon,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  epsilon,  1l);	  throw    new    FractionConversionException(a0,    value,    r1,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double,long)	173	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  a0,  maxIterations);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	165	1	replace
57	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  maxIterations);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	165	1	replace
58	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l,  numerator);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,int)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l,  numerator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l,  numerator);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,int)	165	None	replace
59	[BUG]  [BUGGY]  n  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  n  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	n  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  n	165	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(long)FastMath.floor(r0);	  epsilon    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	121	1	replace
61	[BUG]  [BUGGY]  epsilon  =(long)FastMath.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(long)FastMath.floor(r0);	  epsilon    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	121	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(long)FastMath.floor(value);	  epsilon    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	121	1	replace
63	[BUG]  [BUGGY]  epsilon  =(long)FastMath.floor(value);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(long)FastMath.floor(value);	  epsilon    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	121	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(long)FastMath.floor(a0);	  epsilon    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	121	1	replace
65	[BUG]  [BUGGY]  epsilon  =(long)FastMath.floor(a0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(long)FastMath.floor(a0);	  epsilon    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	121	1	replace
66	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  Integer  denominator  =(int)FastMath.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  Integer  denominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(a0);  Integer  denominator  =(int)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    Integer    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	136	None	replace
67	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(a0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(a0);	          int    denominator    =(int)FastMath.floor(r0);    Integer    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	136	None	replace
68	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(denominator);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(denominator);	          int    denominator    =(int)FastMath.floor(r0);    Integer    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	136	None	replace
69	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  Integer  denominator  =(long)FastMath.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  Integer  denominator  =(long)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =(long)FastMath.floor(r0);  Integer  denominator  =(long)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    Integer    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	136	None	replace
70	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r0,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  r0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  r0,  overflow);	  throw    new    FractionConversionException(value,    a0,    r1,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)	123	None	replace
71	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  value,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  value,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  value,  overflow);	  throw    new    FractionConversionException(value,    a0,    r1,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)	123	None	replace
72	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  value,  overflow);	  throw    new    FractionConversionException(value,    a0,    r1,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long)	123	None	replace
73	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  r1,  overflow);  [CE]  cannot  find  symbol  r1  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  r1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  r1,  overflow);	  throw    new    FractionConversionException(value,    a0,    r1,    overflow);    	non-compiled	[CE]  cannot  find  symbol  r1	123	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	float  denominator  =(float)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1);    	compilable	  [FE]  AssertionError  	52	1	replace
75	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1);    	compilable	  [FE]  AssertionError  	52	1	replace
76	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  3);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  3);	  throw    new    FractionConversionException(r0,    a0,    3);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)	147	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  overflow,  3);	  throw    new    FractionConversionException(r0,    a0,    3);    	compilable	  [FE]  AssertionError  	147	1	replace
78	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  3);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow,  3);	  throw    new    FractionConversionException(r0,    a0,    3);    	compilable	  [FE]  AssertionError  	147	1	replace
79	[BUG]  [BUGGY]  Integer  a1  =  0;  Integer  a1  =  0;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  0;  Integer  a1  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    0;    Integer  a1  =  0;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	40	None	add
80	[BUG]  [BUGGY]  Integer  a1  =  0;  int  a1  =  0;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  0;  int  a1  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    0;    int  a1  =  0;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	40	None	add
81	[BUG]  [BUGGY]  Integer  a1  =  0;  Integer  a1  =  0;  this.denominator  =  1l;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  0;  Integer  a1  =  0;  this.denominator  =  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    0;    Integer  a1  =  0;  this.denominator  =  1l;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	40	None	add
82	[BUG]  [BUGGY]  Integer  a1  =  0;  Integer  a1  =  0;  this.numerator  =  1l;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  0;  Integer  a1  =  0;  this.numerator  =  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    0;    Integer  a1  =  0;  this.numerator  =  1l;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	40	None	add
83	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,long)  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l,  overflow);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,long)	56	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =  Integer.MAX_VALUE  /  1;	  int    denominator    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	117	1	replace
85	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  /  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  /  1;	  int    denominator    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	117	1	replace
86	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1l;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  +  1l;	  int    denominator    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  possible  loss  of  precision	117	None	replace
87	[BUG]  [BUGGY]  int  denominator  =  a0  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  a0  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  a0  +  1;	  int    denominator    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  possible  loss  of  precision	117	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  denominator  =  Integer.MAX_VALUE  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	compilable	  [FE]  AssertionError  	78	1	replace
89	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  overflow;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Integer.MAX_VALUE  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	compilable	  [FE]  AssertionError  	78	1	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	long  denominator  =  Integer.MAX_VALUE  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	compilable	  [FE]  AssertionError  	78	1	replace
91	[BUG]  [BUGGY]  long  denominator  =  Integer.MAX_VALUE  -  overflow;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =  Integer.MAX_VALUE  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	compilable	  [FE]  AssertionError  	78	1	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	float  denominator  =  Integer.MAX_VALUE  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	compilable	  [FE]  AssertionError  	78	1	replace
93	[BUG]  [BUGGY]  float  denominator  =  Integer.MAX_VALUE  -  overflow;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =  Integer.MAX_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =  Integer.MAX_VALUE  -  overflow;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	compilable	  [FE]  AssertionError  	78	1	replace
94	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  a0;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  a0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  -  a0;	  int    denominator    =    Integer.MAX_VALUE    -    overflow;    	non-compiled	[CE]  possible  loss  of  precision	78	None	replace
95	[BUG]  [BUGGY]  int  denominator  =  0L;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0L;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  0L;	  int    denominator    =    0;    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
96	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long,long)  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  1l,  overflow);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long,long)	58	None	replace
97	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l,  denominator);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long,int)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  1l,  denominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,long,int)	58	None	replace
98	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  a0,  1,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,int,long)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  a0,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow,  a0,  1,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,int,long)	58	None	replace
99	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1l;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1l;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  possible  loss  of  precision	115	None	replace
100	[BUG]  [BUGGY]  int  denominator  =  a0  -  1;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  a0  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  a0  -  1;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  possible  loss  of  precision	115	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  a0,  overflow);	  throw    new    FractionConversionException(overflow,    a0,    r1);    	compilable	  [FE]  AssertionError  	124	1	replace
102	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  overflow);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  overflow);	  throw    new    FractionConversionException(overflow,    a0,    r1);    	compilable	  [FE]  AssertionError  	124	1	replace
103	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  r1);  [CE]  cannot  find  symbol  r1  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  r1);	  throw    new    FractionConversionException(overflow,    a0,    r1);    	non-compiled	[CE]  cannot  find  symbol  r1	124	None	replace
104	[BUG]  [BUGGY]          this.numerator  =(int)Math.floor(r0);  this.numerator  =(int)Math.floor(r0);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          this.numerator  =(int)Math.floor(r0);  this.numerator  =(int)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                this.numerator    =(int)Math.floor(r0);    this.numerator  =(int)Math.floor(r0);	  	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	110	None	add
105	[BUG]  [BUGGY]          this.numerator  =(int)Math.floor(r0);  this.numerator  =(int)Math.floor(r1);  [CE]  cannot  find  symbol  r1  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          this.numerator  =(int)Math.floor(r0);  this.numerator  =(int)Math.floor(r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                this.numerator    =(int)Math.floor(r0);    this.numerator  =(int)Math.floor(r1);	  	non-compiled	[CE]  cannot  find  symbol  r1	110	None	add
106	[BUG]  [BUGGY]          this.numerator  =(int)Math.floor(r0);  this.numerator  =(int)Math.floor(r2);  [CE]  cannot  find  symbol  r2  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          this.numerator  =(int)Math.floor(r0);  this.numerator  =(int)Math.floor(r2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                this.numerator    =(int)Math.floor(r0);    this.numerator  =(int)Math.floor(r2);	  	non-compiled	[CE]  cannot  find  symbol  r2	110	None	add
107	[BUG]  [BUGGY]  long  denominator  =  Math.min(denominator,  a0);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Math.min(denominator,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =  Math.min(denominator,  a0);	  long    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	83	None	replace
108	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(r0);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(long)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(long)Math.floor(r0);	          this.numerator    =(int)Math.floor(r0);    	non-compiled	[CE]  possible  loss  of  precision	111	None	replace
109	[BUG]  [BUGGY]  this.numerator  =(int)Math.ceil(r0);  [CE]  variable  numerator  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(int)Math.ceil(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(int)Math.ceil(r0);	          this.numerator    =(int)Math.floor(r0);    	non-compiled	[CE]  variable  numerator  might  already  have  been  assigned	111	None	replace
110	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(r0);  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(double)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(double)Math.floor(r0);	          this.numerator    =(int)Math.floor(r0);    	non-compiled	[CE]  possible  loss  of  precision	111	None	replace
111	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  overflow,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long,long)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  overflow,  1l);	  throw    new    FractionConversionException(r0,    a0,    epsilon,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,long,long)	66	None	replace
112	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value,  epsilon,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,double,long)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value,  epsilon,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  value,  epsilon,  1l);	  throw    new    FractionConversionException(r0,    a0,    epsilon,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,double,long)	66	None	replace
113	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  denominator,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,int,long)  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  denominator,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  denominator,  1l);	  throw    new    FractionConversionException(r0,    a0,    epsilon,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,int,long)	66	None	replace
114	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  maxIterations);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,int)  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  maxIterations);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  maxIterations);	  throw    new    FractionConversionException(r0,    a0,    epsilon,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,double,int)	66	None	replace
115	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  denominator  =(int)Math.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  denominator  =(int)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(r0);    int  denominator  =(int)Math.floor(r0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	104	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  desnominator  =(int)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =(int)Math.floor(r0);    int  desnominator  =(int)Math.floor(r0);	  	compilable	  [FE]  AssertionError  	104	1	add
117	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  desnominator  =(int)Math.floor(r0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  desnominator  =(int)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(r0);    int  desnominator  =(int)Math.floor(r0);	  	compilable	  [FE]  AssertionError  	104	1	add
118	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  denominator  =(int)Math.floor(r1);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(r0);  int  denominator  =(int)Math.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(r0);    int  denominator  =(int)Math.floor(r1);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	104	None	add
119	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(r0);  Int  denominator  =(int)Math.floor(r0);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(r0);  Int  denominator  =(int)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(r0);    Int  denominator  =(int)Math.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  a1  =  Integer.MAX_VALUE;	  int    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	38	1	replace
121	[BUG]  [BUGGY]  double  a1  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  a1  =  Integer.MAX_VALUE;	  int    a1    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	38	1	replace
122	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE  +  1l;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  Integer.MAX_VALUE  +  1l;	  int    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  a0,  1);	  throw    new    FractionConversionException(len,    a0,    1l);    	compilable	  [FE]  AssertionError  	138	1	replace
124	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  1);	  throw    new    FractionConversionException(len,    a0,    1l);    	compilable	  [FE]  AssertionError  	138	1	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1L);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  a0,  1L);	  throw    new    FractionConversionException(len,    a0,    1l);    	compilable	  [FE]  AssertionError  	138	1	replace
126	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1L);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1L);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  1L);	  throw    new    FractionConversionException(len,    a0,    1l);    	compilable	  [FE]  AssertionError  	138	1	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  a0,  2l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    2l);    	compilable	  [FE]  AssertionError  	22	1	replace
128	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  2l);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  2l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    2l);    	compilable	  [FE]  AssertionError  	22	1	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(overflow,  a0,  2l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    2l);    	compilable	  [FE]  AssertionError  	22	1	replace
130	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  2l);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  2l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    2l);    	compilable	  [FE]  AssertionError  	22	1	replace
131	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    desnominator    =    getDenominator();    int  denominator  =  getDenominator();  int  desnominator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	71	None	add
132	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  desnominator  =  getDenominator();  int  desnominator  =  getDenominator();  [CE]  variable  desnominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  desnominator  =  getDenominator();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    desnominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  desnominator  =  getDenominator();	  	non-compiled	[CE]  variable  desnominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	71	None	add
133	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  Integer  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  Integer  denominator  =  getDenominator();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    desnominator    =    getDenominator();    Integer  denominator  =  getDenominator();  int  desnominator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	71	None	add
134	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  denominator  =  getDenominator();  int  dernominator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  denominator  =  getDenominator();  int  dernominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    desnominator    =    getDenominator();    int  denominator  =  getDenominator();  int  dernominator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	71	None	add
135	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  denominator  =  Integer.MIN_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MIN_VALUE;    int  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	74	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =    Integer.MIN_VALUE;    int  desnominator  =  Integer.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	74	1	add
137	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MIN_VALUE;    int  desnominator  =  Integer.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	74	1	add
138	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  Integer  denominator  =  Integer.MIN_VALUE;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  Integer  denominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MIN_VALUE;    Integer  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	74	None	add
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  dennominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =    Integer.MIN_VALUE;    int  dennominator  =  Integer.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	74	1	add
140	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  dennominator  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  dennominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MIN_VALUE;    int  dennominator  =  Integer.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	74	1	add
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(value);  epsilon  =(int)Math.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon    =(int)Math.floor(value);    epsilon  =(int)Math.floor(value);	  	compilable	  [FE]  AssertionError  	14	1	add
142	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(value);  epsilon  =(int)Math.floor(value);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(value);  epsilon  =(int)Math.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)Math.floor(value);    epsilon  =(int)Math.floor(value);	  	compilable	  [FE]  AssertionError  	14	1	add
143	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(value);  int  epsilon  =(int)Math.floor(value);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(value);  int  epsilon  =(int)Math.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)Math.floor(value);    int  epsilon  =(int)Math.floor(value);	  	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	14	None	add
144	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a1,  1l);  [CE]  cannot  find  symbol  a1  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a1,  1l);	  throw    new    FractionConversionException(a0,    a1,    1l);    	non-compiled	[CE]  cannot  find  symbol  a1	8	None	replace
145	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  Integer  a1  =  Integer.MAX_VALUE  +  1;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  Integer  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MAX_VALUE    +    1;    Integer  a1  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	127	None	add
146	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  int  a1  =  Integer.MAX_VALUE  +  1;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  int  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MAX_VALUE    +    1;    int  a1  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	127	None	add
147	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  Integer  a1  =  Integer.MAX_VALUE  +  1l;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  Integer  a1  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MAX_VALUE    +    1;    Integer  a1  =  Integer.MAX_VALUE  +  1l;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	127	None	add
148	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  Long  a1  =  Integer.MAX_VALUE  +  1;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1;  Long  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MAX_VALUE    +    1;    Long  a1  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	127	None	add
149	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  overflow,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long,long)  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  overflow,  1l);	  throw    new    FractionConversionException(a0,    r0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,long,long)	61	None	replace
150	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  denominator,  1l);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int,long)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  denominator,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  denominator,  1l);	  throw    new    FractionConversionException(a0,    r0,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int,long)	61	None	replace
151	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a1);  [CE]  cannot  find  symbol  a1  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a1);	  throw    new    FractionConversionException(a0,    a1);    	non-compiled	[CE]  cannot  find  symbol  a1	155	None	replace
152	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0);	  throw    new    FractionConversionException(a0,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long)	1	None	replace
153	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow);	  throw    new    FractionConversionException(a0,    overflow);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long)	1	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  overflow,  1);	  throw    new    FractionConversionException(a0,    overflow,    1l);    	compilable	  [FE]  AssertionError  	96	1	replace
155	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  1);	  throw    new    FractionConversionException(a0,    overflow,    1l);    	compilable	  [FE]  AssertionError  	96	1	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  overflow,  3);	  throw    new    FractionConversionException(a0,    overflow,    1l);    	compilable	  [FE]  AssertionError  	96	1	replace
157	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  3);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  3);	  throw    new    FractionConversionException(a0,    overflow,    1l);    	compilable	  [FE]  AssertionError  	96	1	replace
158	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  r0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,double)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  r0);	  throw    new    FractionConversionException(a0,    overflow,    1l);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,double)	96	None	replace
159	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  overflow,  1l);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    throw  new  FractionConversionException(r0,  overflow,  1l);	  	non-compiled	[CE]  unreachable  statement	64	None	add
160	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  Throw  new  FractionConversionException(r0,  overflow,  1l);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  Throw  new  FractionConversionException(r0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    Throw  new  FractionConversionException(r0,  overflow,  1l);	  	non-compiled	[CE]  not  a  statement	64	None	add
161	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  int  denominator  =  Integer.MAX_VALUE;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  unreachable  statement	64	None	add
162	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  Overflow,  1l);  [CE]  cannot  find  symbol  Overflow  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  Overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    throw  new  FractionConversionException(r0,  Overflow,  1l);	  	non-compiled	[CE]  cannot  find  symbol  Overflow	64	None	add
163	[BUG]  [BUGGY]  int  denominator  =  getDenominator(value,  a0,  r0);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(value,  a0,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(value,  a0,  r0);	  int    denominator    =    getDenominator(value,    r0);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	50	None	replace
164	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  int  denominator  =  getNumerator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  denominator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    getNumerator();    int  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	98	None	add
165	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  Integer  denominator  =  getNumerator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  Integer  denominator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    getNumerator();    Integer  denominator  =  getNumerator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	98	None	add
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  desnominator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =    getNumerator();    int  desnominator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	98	1	add
167	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  int  desnominator  =  getNumerator();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  desnominator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    getNumerator();    int  desnominator  =  getNumerator();	  	compilable	  [FE]  AssertionError  	98	1	add
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon    =(int)Math.floor(r0);    epsilon  =(int)Math.floor(r0);	  	compilable	  [FE]  AssertionError  	16	1	add
169	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)Math.floor(r0);    epsilon  =(int)Math.floor(r0);	  	compilable	  [FE]  AssertionError  	16	1	add
170	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(r0);  int  epsilon  =(int)Math.floor(r0);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(r0);  int  epsilon  =(int)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)Math.floor(r0);    int  epsilon  =(int)Math.floor(r0);	  	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	16	None	add
171	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r1);  [CE]  cannot  find  symbol  r1  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)Math.floor(r0);    epsilon  =(int)Math.floor(r1);	  	non-compiled	[CE]  cannot  find  symbol  r1	16	None	add
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  a0,  2l);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    2l);    	compilable	  [FE]  AssertionError  	59	1	replace
173	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2l);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  2l);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    2l);    	compilable	  [FE]  AssertionError  	59	1	replace
174	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  r0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  r0);	  throw    new    FractionConversionException(value,    a0,    r0);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)	89	None	replace
175	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  value);	  throw    new    FractionConversionException(value,    a0,    r0);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)	89	None	replace
176	[BUG]  [BUGGY]  throw  new  FractionConversionException(R0,  a0,  value);  [CE]  cannot  find  symbol  R0  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(R0,  a0,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(R0,  a0,  value);	  throw    new    FractionConversionException(value,    a0,    r0);    	non-compiled	[CE]  cannot  find  symbol  R0	89	None	replace
177	[BUG]  [BUGGY]  double  denominator  =  Math.min(denominator,  a0);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(denominator,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Math.min(denominator,  a0);	  int    denominator    =    Math.min(denominator,    a0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	85	None	replace
178	[BUG]  [BUGGY]  float  denominator  =  Math.min(denominator,  a0);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =  Math.min(denominator,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =  Math.min(denominator,  a0);	  int    denominator    =    Math.min(denominator,    a0);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	85	None	replace
179	[BUG]  [BUGGY]  int  denominator  =  value.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  value.doubleValue();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  value.doubleValue();	  int    denominator    =    r1.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	112	None	replace
180	[BUG]  [BUGGY]  int  denominator  =  numerator.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  numerator.doubleValue();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  numerator.doubleValue();	  int    denominator    =    r1.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	112	None	replace
181	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  denominator);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  denominator);	  throw    new    FractionConversionException(a0,    value,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)	90	None	replace
182	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  numerator);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  numerator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  numerator);	  throw    new    FractionConversionException(a0,    value,    r1);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,int)	90	None	replace
183	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MIN_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MIN_VALUE;	          Integer    a1    =    Integer.MAX_VALUE;    Integer    a1    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	108	None	replace
184	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  3);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    throw  new  FractionConversionException(r0,  a0,  3);	  	non-compiled	[CE]  unreachable  statement	146	None	add
185	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  Throw  new  FractionConversionException(r0,  a0,  3);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  Throw  new  FractionConversionException(r0,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    Throw  new  FractionConversionException(r0,  a0,  3);	  	non-compiled	[CE]  not  a  statement	146	None	add
186	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  4);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  4);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    throw  new  FractionConversionException(r0,  a0,  4);	  	non-compiled	[CE]  unreachable  statement	146	None	add
187	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractConversionException(r0,  a0,  3);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractConversionException(r0,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    throw  new  FractConversionException(r0,  a0,  3);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
188	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  3,  3);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,int)  [FE]            AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  3,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    throw  new  FractionConversionException(r0,  a0,  3,  3);	  	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,int)	146	None	add
189	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(a0);  int  denominator  =(int)Math.floor(a0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(a0);  int  denominator  =(int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(a0);    int  denominator  =(int)Math.floor(a0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	102	None	add
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(a0);  int  desnominator  =(int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =(int)Math.floor(a0);    int  desnominator  =(int)Math.floor(a0);	  	compilable	  [FE]  AssertionError  	102	1	add
191	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(a0);  int  desnominator  =(int)Math.floor(a0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(a0);  int  desnominator  =(int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(a0);    int  desnominator  =(int)Math.floor(a0);	  	compilable	  [FE]  AssertionError  	102	1	add
192	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(a0);  Int  denominator  =(int)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(a0);  Int  denominator  =(int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)Math.floor(a0);    Int  denominator  =(int)Math.floor(a0);	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
193	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  denominator);	  throw    new    FractionConversionException(a0,    numerator);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	4	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  this.denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(a0,  this.denominator);	  throw    new    FractionConversionException(a0,    numerator);    	compilable	  [FE]  AssertionError  	4	1	replace
195	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  this.denominator);  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  this.denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  this.denominator);	  throw    new    FractionConversionException(a0,    numerator);    	compilable	  [FE]  AssertionError  	4	1	replace
196	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  a1);  [CE]  cannot  find  symbol  a1  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  a1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  a1);	  int    denominator    =    getDenominator(a0,    r1);    	non-compiled	[CE]  cannot  find  symbol  a1	48	None	replace
197	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  value);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  value);	  int    denominator    =    getDenominator(a0,    r1);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	48	None	replace
198	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  overflow);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  overflow);	  int    denominator    =    getDenominator(a0,    r1);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	48	None	replace
199	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  numerator);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  numerator);	  int    denominator    =    getDenominator(a0,    r1);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	48	None	replace
200	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MAX_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    a1    =    Integer.MAX_VALUE;    int  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	37	None	add
201	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MAX_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE;  Integer  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    a1    =    Integer.MAX_VALUE;    Integer  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	37	None	add
202	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    a1    =    Integer.MAX_VALUE;    long  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	37	None	add
203	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MIN_VALUE;  [CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    a1    =    Integer.MAX_VALUE;    int  a1  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  a1  is  already  defined  in  constructor  Fraction(double,double,int,int)	37	None	add
204	[BUG]  [BUGGY]  Throw  new  FractionConversionException(a0,  a0,  1l);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Throw  new  FractionConversionException(a0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Throw  new  FractionConversionException(a0,  a0,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    Throw    new    FractionConversionException(overflow,    a0,    1l);    	non-compiled	[CE]  not  a  statement	20	None	replace
205	[BUG]  [BUGGY]  Throw  new  FractionConversionException(overflow,  a0,  r0);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Throw  new  FractionConversionException(overflow,  a0,  r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Throw  new  FractionConversionException(overflow,  a0,  r0);	  throw    new    FractionConversionException(overflow,    a0,    1l);    Throw    new    FractionConversionException(overflow,    a0,    1l);    	non-compiled	[CE]  not  a  statement	20	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	long  denominator  =(long)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	51	1	replace
207	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =(long)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	51	1	replace
208	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  overflow);  [CE]  cannot  find  symbol  r1  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  overflow);	  throw    new    FractionConversionException(a0,    r0);    	non-compiled	[CE]  cannot  find  symbol  r1	3	None	replace
209	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  value);  [CE]  cannot  find  symbol  r1  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  value);	  throw    new    FractionConversionException(a0,    r0);    	non-compiled	[CE]  cannot  find  symbol  r1	3	None	replace
210	[BUG]  [BUGGY]  Throw  new  FractionConversionException(r0,  a0,  1l);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Throw  new  FractionConversionException(r0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Throw  new  FractionConversionException(r0,  a0,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    Throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  not  a  statement	57	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(long)Math.floor(r0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
212	[BUG]  [BUGGY]  epsilon  =(long)Math.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(long)Math.floor(r0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
213	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)Math.floor(a0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
214	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(a0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)Math.floor(a0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(double)Math.floor(r0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
216	[BUG]  [BUGGY]  epsilon  =(double)Math.floor(r0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)Math.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(double)Math.floor(r0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.ceil(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)Math.ceil(r0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
218	[BUG]  [BUGGY]  epsilon  =(int)Math.ceil(r0);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.ceil(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)Math.ceil(r0);	  epsilon    =(int)Math.floor(r0);    	compilable	  [FE]  AssertionError  	17	1	replace
219	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  numerator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  numerator);	  throw    new    FractionConversionException(value,    a0,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	144	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  this.denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(value,  a0,  this.denominator);	  throw    new    FractionConversionException(value,    a0,    denominator);    	compilable	  [FE]  AssertionError  	144	1	replace
221	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  this.denominator);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  this.denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  this.denominator);	  throw    new    FractionConversionException(value,    a0,    denominator);    	compilable	  [FE]  AssertionError  	144	1	replace
222	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  (long)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	long  a1  =  (long)Integer.MAX_VALUE;	  Integer    a1    =    (int)Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	159	1	replace
223	[BUG]  [BUGGY]  long  a1  =  (long)Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  (long)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  (long)Integer.MAX_VALUE;	  Integer    a1    =    (int)Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	159	1	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  a1  =  (int)Integer.MAX_VALUE;	  Integer    a1    =    (int)Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	159	1	replace
225	[BUG]  [BUGGY]  int  a1  =  (int)Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  (int)Integer.MAX_VALUE;	  Integer    a1    =    (int)Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	159	1	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(int)FastMath.floor(a0);	  epsilon    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	119	1	replace
227	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(a0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)FastMath.floor(a0);	  epsilon    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	119	1	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	epsilon  =(double)FastMath.floor(r0);	  epsilon    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	119	1	replace
229	[BUG]  [BUGGY]  epsilon  =(double)FastMath.floor(r0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(double)FastMath.floor(r0);	  epsilon    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	119	1	replace
230	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  denominator  =(double)FastMath.floor(a0);	  double    denominator    =(double)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	45	1	replace
231	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(a0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.floor(a0);	  double    denominator    =(double)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	45	1	replace
232	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.denominator(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.denominator(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.denominator(r0);	  double    denominator    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
233	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.convert(r0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.convert(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.convert(r0);	  double    denominator    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
234	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.denominator(a0);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.denominator(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.denominator(a0);	  double    denominator    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
235	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	53	None	add
236	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r1);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r1);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	53	None	add
237	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.ceil(r0);  int  desnominator  =(int)FastMath.floor(r0);  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.ceil(r0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.ceil(r0);  int  desnominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	53	None	add
238	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [CE]  variable  desnominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  variable  desnominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	53	None	add
239	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  denominator  =  Integer.MAX_VALUE  -  1;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    -    1;    int  denominator  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	114	None	add
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  desnominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =    Integer.MAX_VALUE    -    1;    int  desnominator  =  Integer.MAX_VALUE  -  1;	  	compilable	  [FE]  AssertionError  	114	1	add
241	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  desnominator  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  desnominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    -    1;    int  desnominator  =  Integer.MAX_VALUE  -  1;	  	compilable	  [FE]  AssertionError  	114	1	add
242	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  Integer  denominator  =  Integer.MAX_VALUE  -  1;  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  Integer  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    -    1;    Integer  denominator  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	114	None	add
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  dennominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int    denominator    =    Integer.MAX_VALUE    -    1;    int  dennominator  =  Integer.MAX_VALUE  -  1;	  	compilable	  [FE]  AssertionError  	114	1	add
244	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  dennominator  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  dennominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    -    1;    int  dennominator  =  Integer.MAX_VALUE  -  1;	  	compilable	  [FE]  AssertionError  	114	1	add
245	[BUG]  [BUGGY]  int  denominator  =  getDenominator(numerator,  r0);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(numerator,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(numerator,  r0);	  int    denominator    =    getDenominator(r0,    numerator);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	150	None	replace
246	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  value,  numerator);  [CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  value,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  value,  numerator);	  int    denominator    =    getDenominator(r0,    numerator);    	non-compiled	[CE]  method  getDenominator  in  class  Fraction  cannot  be  applied  to  given  types;	150	None	replace
247	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a1,  numerator);  [CE]  cannot  find  symbol  a1  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  a1,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a1,  numerator);	  int    denominator    =    getDenominator(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol  a1	150	None	replace
248	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1l;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MAX_VALUE  +  1l;	  Integer    a1    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  incompatible  types	128	None	replace
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  /  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  Integer.MAX_VALUE  /  1;	  Integer    a1    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	128	1	replace
250	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  /  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MAX_VALUE  /  1;	  Integer    a1    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	128	1	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  2;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  Integer.MAX_VALUE  +  2;	  Integer    a1    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	128	1	replace
252	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE  +  2;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MAX_VALUE  +  2;	  Integer    a1    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	128	1	replace
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	long  a1  =  Integer.MIN_VALUE;	  Integer    a1    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	130	1	replace
254	[BUG]  [BUGGY]  long  a1  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  Integer.MIN_VALUE;	  Integer    a1    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	130	1	replace
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  a1  =  Integer.MIN_VALUE;	  Integer    a1    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	130	1	replace
256	[BUG]  [BUGGY]  int  a1  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  Integer.MIN_VALUE;	  Integer    a1    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	130	1	replace
257	[BUG]  [BUGGY]  Long  a1  =  Integer.MIN_VALUE;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Long  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Long  a1  =  Integer.MIN_VALUE;	  Integer    a1    =    Integer.MIN_VALUE;    	non-compiled	[CE]  incompatible  types	130	None	replace
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	Integer  a1  =  (int)Math.floor(r0);	  Integer    a1    =    (int)Math.floor(a0);    	compilable	  [FE]  AssertionError  	157	1	replace
259	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  (int)Math.floor(r0);	  Integer    a1    =    (int)Math.floor(a0);    	compilable	  [FE]  AssertionError  	157	1	replace
260	[BUG]  [BUGGY]  Integer  a1  =  (Integer)Math.floor(a0);  [CE]  inconvertible  types  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (Integer)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  (Integer)Math.floor(a0);	  Integer    a1    =    (int)Math.floor(a0);    	non-compiled	[CE]  inconvertible  types	157	None	replace
261	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  epsilon);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  epsilon);	  throw    new    FractionConversionException(a0,    epsilon);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)	141	None	replace
262	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  epsilon);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,double)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  epsilon);	  throw    new    FractionConversionException(a0,    epsilon);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,long,double)	141	None	replace
263	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  epsilon);  [CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  epsilon);	  throw    new    FractionConversionException(a0,    epsilon);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(long,double,double)	141	None	replace
264	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  value,  a0);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  value,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  value,  a0);	  throw    new    FractionConversionException(r0,    a0,    value);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,double,long)	91	None	replace
265	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow,  value);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,double)  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow,  value);	  throw    new    FractionConversionException(r0,    a0,    value);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,double)	91	None	replace
266	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow,  ZERO);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,Fraction)  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow,  ZERO);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow,  ZERO);	  throw    new    FractionConversionException(r0,    a0,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,Fraction)	145	None	replace
267	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  denominator,  ZERO);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,Fraction)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  denominator,  ZERO);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  denominator,  ZERO);	  throw    new    FractionConversionException(r0,    a0,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,int,Fraction)	145	None	replace
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	throw  new  FractionConversionException(r0,  overflow,  a0);	  throw    new    FractionConversionException(r0,    a0,    ZERO);    	compilable	  [FE]  AssertionError  	145	1	replace
269	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  a0);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow,  a0);	  throw    new    FractionConversionException(r0,    a0,    ZERO);    	compilable	  [FE]  AssertionError  	145	1	replace
270	[BUG]  [BUGGY]  long  epsilon  =(long)FastMath.floor(value);  [CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  epsilon  =(long)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  epsilon  =(long)FastMath.floor(value);	  long    epsilon    =(long)FastMath.floor(r0);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  Fraction(double,double,int,int)	26	None	replace
271	[BUG]  [BUGGY]  long  a0  =(long)FastMath.floor(r0);  [CE]  variable  a0  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a0  =(long)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a0  =(long)FastMath.floor(r0);	  long    epsilon    =(long)FastMath.floor(r0);    	non-compiled	[CE]  variable  a0  is  already  defined  in  constructor  Fraction(double,double,int,int)	26	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	54	1	replace
273	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	compilable	  [FE]  AssertionError  	54	1	replace
274	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  r1  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(a0);  int  desnominator  =(int)FastMath.floor(r1);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol  r1	54	None	replace
275	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  int  desnominator  =(long)FastMath.floor(r0);  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  int  desnominator  =(long)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =(long)FastMath.floor(r0);  int  desnominator  =(long)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
276	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractionConversionException(r0,  a0,  overflow);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractionConversionException(r0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    throw  new  FractionConversionException(r0,  a0,  overflow);	  	non-compiled	[CE]  unreachable  statement	62	None	add
277	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  Throw  new  FractionConversionException(r0,  a0,  overflow);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  Throw  new  FractionConversionException(r0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    Throw  new  FractionConversionException(r0,  a0,  overflow);	  	non-compiled	[CE]  not  a  statement	62	None	add
278	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractConversionException(r0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractConversionException(r0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    throw  new  FractConversionException(r0,  a0,  overflow);	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
279	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l,  denominator);  [CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,int)  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l,  denominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    r0.doubleValue();    	non-compiled	[CE]  no  suitable  constructor  found  for  FractionConversionException(double,long,long,int)	166	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	float  denominator  =(float)FastMath.floor(value);	  int    denominator    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	133	1	replace
281	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(value);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(value);	  int    denominator    =(int)FastMath.floor(value);    	compilable	  [FE]  AssertionError  	133	1	replace
282	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    numerator    =    getDenominator();    int  denominator  =  getDenominator();  int  numerator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	142	None	add
283	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  desnominator  =  getDenominator();  int  numerator  =  getDenominator();  [CE]  variable  numerator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  desnominator  =  getDenominator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    numerator    =    getDenominator();    int  desnominator  =  getDenominator();  int  numerator  =  getDenominator();	  	non-compiled	[CE]  variable  numerator  is  already  defined  in  constructor  Fraction(double,double,int,int)	142	None	add
284	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  Integer  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  Integer  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    numerator    =    getDenominator();    Integer  denominator  =  getDenominator();  int  numerator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	142	None	add
285	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  long  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  long  denominator  =  getDenominator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    numerator    =    getDenominator();    long  denominator  =  getDenominator();  int  numerator  =  getDenominator();	  	non-compiled	[CE]  variable  denominator  is  already  defined  in  constructor  Fraction(double,double,int,int)	142	None	add
286	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(a0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	add	double  denominator  =  Math.min(a0,  value);	  double    denominator    =    Math.min(value,    a0);    	compilable	  [FE]  AssertionError  	82	1	replace
287	[BUG]  [BUGGY]  double  denominator  =  Math.min(a0,  value);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(a0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Math.min(a0,  value);	  double    denominator    =    Math.min(value,    a0);    	compilable	  [FE]  AssertionError  	82	1	replace
288	[BUG]  [BUGGY]  double  denominator  =  Math.min(overflow,  a0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(overflow,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Math.min(overflow,  a0);	  double    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
289	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(value);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(long)Math.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(long)Math.floor(value);	  this.numerator    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
290	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r0);  epsilon  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(r0);  epsilon  =(int)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)FastMath.floor(r0);    epsilon  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
291	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r0);  epsilon  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(r0);  epsilon  =(int)FastMath.floor(r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)FastMath.floor(r0);    epsilon  =(int)FastMath.floor(r1);	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
292	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r0);  int  epsilon  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(r0);  int  epsilon  =(int)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)FastMath.floor(r0);    int  epsilon  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
293	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.ceil(a0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
294	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.ceil(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.ceil(r0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
295	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0,  a0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.ceil(r0,  a0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
296	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value,  1l);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  value,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  value,  1l);	  throw    new    FractionConversionException(a0,    value,    r0,    1l);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
297	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r0,  1l);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  r0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  r0,  1l);	  throw    new    FractionConversionException(a0,    value,    r0,    1l);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
298	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator();  int  desnominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumberDenominator();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumberDenominator();  int  desnominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    desnominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
299	[BUG]  [BUGGY]  int  denominator  =  getNumberOfIterations();  int  desnominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumberOfIterations();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumberOfIterations();  int  desnominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    desnominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
300	[BUG]  [BUGGY]  this.numerator  =  Math.abs(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =  Math.abs(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.abs(a0);	          if(value    >    epsilon)    {    this.numerator    =    Math.abs(a0);    }    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
301	[BUG]  [BUGGY]  This.numerator  =  Math.abs(a0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  This.numerator  =  Math.abs(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	This.numerator  =  Math.abs(a0);	          if(value    >    epsilon)    {    this.numerator    =    Math.abs(a0);    }    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
302	[BUG]  [BUGGY]  int  denominator  =  getNumber();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumber();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumber();	          int    denominator    =    getDenominator();    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
303	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(value,  a0,  r0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(value,  a0,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(value,  a0,  r0);	  int    denominator    =    Float.parseFloat(value,    r0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
304	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0,  a0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(value,  r0,  a0);	  int    denominator    =    Float.parseFloat(value,    r0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
305	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(value,  a0,  r1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(value,  a0,  r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(value,  a0,  r1);	  int    denominator    =    Float.parseFloat(value,    r0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
306	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  epsilon  =(double)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  epsilon  =(double)FastMath.floor(value);	  double    epsilon    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
307	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  epsilon  =(double)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  epsilon  =(double)FastMath.floor(r1);	  double    epsilon    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
308	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(r0,  value);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  epsilon  =(double)FastMath.floor(r0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  epsilon  =(double)FastMath.floor(r0,  value);	  double    epsilon    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
309	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    Integer    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
310	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  Integer  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  Integer  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator();  Integer  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    Integer    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
311	[BUG]  [BUGGY]  int  denominator  =  getNumber();  Integer  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumber();  Integer  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumber();  Integer  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    Integer    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
312	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  r0,  a0,  1l);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  r0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  r0,  a0,  1l);	  throw    new    FractionConversionException(a0,    r0,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
313	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value,  denominator,  1l);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value,  denominator,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  value,  denominator,  1l);	  throw    new    FractionConversionException(a0,    r0,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
314	[BUG]  [BUGGY]  int  denominator  =  a0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  a0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  a0;	  int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
315	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MIN_VALUE  -  1;	  int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
316	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  Integer  a1  =  (int)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  Integer  a1  =  (int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Math.floor(a0);    Integer  a1  =  (int)Math.floor(a0);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
317	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  int  a1  =  (int)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  int  a1  =  (int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Math.floor(a0);    int  a1  =  (int)Math.floor(a0);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
318	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  Long  a1  =  (int)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  Long  a1  =  (int)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Math.floor(a0);    Long  a1  =  (int)Math.floor(a0);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
319	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  denominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  denominator  =(int)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  1l);  denominator  =(int)FastMath.floor(r0);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
320	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  denominator  =(int)FastMath.floor(denominator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  1l);  denominator  =(int)FastMath.floor(denominator);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
321	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  value,  a0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  value,  a0);	  int    denominator    =    getDenominator(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
322	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  value,  maxIterations);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  value,  maxIterations);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  value,  maxIterations);	  int    denominator    =    getDenominator(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
323	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  denominator  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    +    1;    int  denominator  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
324	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  desnominator  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  desnominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    +    1;    int  desnominator  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
325	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  Integer  denominator  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  Integer  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    +    1;    Integer  denominator  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
326	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  denominator  =  Integer.MAX_VALUE  +  1l;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  denominator  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    +    1;    int  denominator  =  Integer.MAX_VALUE  +  1l;	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
327	[BUG]  [BUGGY]  int  denominator  =  getNumerator(a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator(a0);	  int    denominator    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
328	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow,  1l);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow,  1l);	  throw    new    FractionConversionException(FOUR_FIFTHS,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
329	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow,  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow,  1);	  throw    new    FractionConversionException(FOUR_FIFTHS,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
330	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  overflow);	  throw    new    FractionConversionException(FOUR_FIFTHS,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
331	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  denominator,  1l);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  denominator,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  denominator,  1l);	  throw    new    FractionConversionException(FOUR_FIFTHS,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
332	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator(a0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumberDenominator(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumberDenominator(a0);	  int    denominator    =    getNumberDenominator();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
333	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator(r0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumberDenominator(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumberDenominator(r0);	  int    denominator    =    getNumberDenominator();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
334	[BUG]  [BUGGY]  throw  new  FractionConversionException(fn,  a0,  denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fn,  a0,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fn,  a0,  denominator);	  throw    new    FractionConversionException(fn,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
335	[BUG]  [BUGGY]  epsilon  =(long)FastMath.floor(r0);  return;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)FastMath.floor(r0);  return;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(long)FastMath.floor(r0);  return;	  epsilon    =(int)FastMath.floor(r0);    return;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
336	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(value);  epsilon  =(int)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(value);  epsilon  =(int)FastMath.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)FastMath.floor(value);    epsilon  =(int)FastMath.floor(value);	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
337	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(value);  int  epsilon  =(int)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(value);  int  epsilon  =(int)FastMath.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)FastMath.floor(value);    int  epsilon  =(int)FastMath.floor(value);	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
338	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3l);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  3l);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    3l);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
339	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  3l);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  3l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  3l);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    3l);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
340	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3000);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3000);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  3000);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    3l);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
341	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =(double)FastMath.floor(r0);    double  denominator  =(double)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
342	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  Double  denominator  =(double)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  Double  denominator  =(double)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =(double)FastMath.floor(r0);    Double  denominator  =(double)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
343	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =(double)FastMath.floor(r0);    double  denominator  =(double)FastMath.floor(r1);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
344	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.floor(re0);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.floor(re0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =(double)FastMath.floor(r0);    double  denominator  =(double)FastMath.floor(re0);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
345	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.log(r0);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  double  denominator  =(double)FastMath.log(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =(double)FastMath.floor(r0);    double  denominator  =(double)FastMath.log(r0);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
346	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  denominator  =(int)FastMath.floor(denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l);  denominator  =(int)FastMath.floor(denominator);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
347	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(value);  int  denominator  =(int)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(value);  int  denominator  =(int)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(value);    int  denominator  =(int)FastMath.floor(value);	  	non-compiled	[CE]  cannot  find  symbol	132	None	add
348	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(value);  Integer  denominator  =(int)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(value);  Integer  denominator  =(int)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(value);    Integer  denominator  =(int)FastMath.floor(value);	  	non-compiled	[CE]  cannot  find  symbol	132	None	add
349	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(value);  int  desnominator  =(int)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(value);  int  desnominator  =(int)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(value);    int  desnominator  =(int)FastMath.floor(value);	  	non-compiled	[CE]  cannot  find  symbol	132	None	add
350	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator();  Integer  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumberDenominator();  Integer  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumberDenominator();  Integer  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    Int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
351	[BUG]  [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        Integer.MAX_VALUE;        int    desnominator    =    Integer.MAX_VALUE;    int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
352	[BUG]  [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        Integer.MAX_VALUE;        int    desnominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
353	[BUG]  [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        Integer.MAX_VALUE;        int    desnominator    =    Integer.MAX_VALUE;    int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
354	[BUG]  [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        Integer.MAX_VALUE;        int    desnominator    =    Integer.MAX_VALUE;    int  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
355	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  value);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0,  value);	  int    denominator    =    Float.parseFloat(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
356	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  a0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  value,  a0);	  int    denominator    =    Float.parseFloat(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
357	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  maxIterations);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  maxIterations);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  value,  maxIterations);	  int    denominator    =    Float.parseFloat(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
358	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(a0);	  int    denominator    =(int)FastMath.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
359	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(a0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =(long)FastMath.floor(a0);	  int    denominator    =(int)FastMath.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
360	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long    a1    =    Integer.MAX_VALUE;    long  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
361	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE;  Long  a1  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE;  Long  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long    a1    =    Integer.MAX_VALUE;    Long  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
362	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE;  int  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long    a1    =    Integer.MAX_VALUE;    int  a1  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
363	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long    a1    =    Integer.MAX_VALUE;    long  a1  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
364	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  a0);  double  denominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(value,  a0);  double  denominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Math.min(value,    a0);    double  denominator  =  Math.min(value,  a0);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
365	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  a0);  Double  denominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(value,  a0);  Double  denominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Math.min(value,    a0);    Double  denominator  =  Math.min(value,  a0);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
366	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  a0);  int  denominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(value,  a0);  int  denominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Math.min(value,    a0);    int  denominator  =  Math.min(value,  a0);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
367	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  a0);  long  denominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(value,  a0);  long  denominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Math.min(value,    a0);    long  denominator  =  Math.min(value,  a0);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
368	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  a0);  double  desnominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(value,  a0);  double  desnominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double    denominator    =    Math.min(value,    a0);    double  desnominator  =  Math.min(value,  a0);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
369	[BUG]  [BUGGY]  double  denominator  =  a0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  a0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  a0;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
370	[BUG]  [BUGGY]  double  denominator  =  a0  +  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  a0  +  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  a0  +  Integer.MAX_VALUE;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
371	[BUG]  [BUGGY]  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
372	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(r0,  overflow);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
373	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0,  overflow);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
374	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(a0,  r0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.convert(a0,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(a0,  r0);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
375	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(value,  a0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.convert(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(value,  a0);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
376	[BUG]  [BUGGY]  int  denominator  =  0;  int  denominator  =  0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0;  int  denominator  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    0;    int  denominator  =  0;	  	non-compiled	[CE]  cannot  find  symbol	76	None	add
377	[BUG]  [BUGGY]  int  denominator  =  0;  int  desnominator  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0;  int  desnominator  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    0;    int  desnominator  =  0;	  	non-compiled	[CE]  cannot  find  symbol	76	None	add
378	[BUG]  [BUGGY]  int  denominator  =  0;  Integer  denominator  =  0;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0;  Integer  denominator  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    0;    Integer  denominator  =  0;	  	non-compiled	[CE]  cannot  find  symbol	76	None	add
379	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a1,  value,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a1,  value,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a1,  value,  1l);	  throw    new    FractionConversionException(a0,    r1,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
380	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  value,  1l);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  value,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  value,  1l);	  throw    new    FractionConversionException(a0,    r1,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
381	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  int  denominator  =(long)FastMath.floor(r1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  int  denominator  =(long)FastMath.floor(r1));  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =(long)FastMath.floor(r0);  int  denominator  =(long)FastMath.floor(r1));	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1));    	non-compiled	[CE]  ';'  expected	55	None	replace
382	[BUG]  [BUGGY]  n  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  n  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	n  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1));    	non-compiled	[CE]  ';'  expected	55	None	replace
383	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0);	  throw    new    FractionConversionException(a0,    value);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
384	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  value);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  value);	  throw    new    FractionConversionException(a0,    value);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
385	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.denominator(r0,  a0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.denominator(r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.denominator(r0,  a0);	  int    denominator    =(int)FastMath.denominator(r0);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
386	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.denominator(a0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.denominator(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.denominator(a0);	  int    denominator    =(int)FastMath.denominator(r0);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
387	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.denominator(r0,  value);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.denominator(r0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.denominator(r0,  value);	  int    denominator    =(int)FastMath.denominator(r0);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
388	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(this.numerator,  a0,  r0);	  throw    new    FractionConversionException(this.numerator,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
389	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  this.denominator);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  this.denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(this.numerator,  a0,  this.denominator);	  throw    new    FractionConversionException(this.numerator,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
390	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0  +  1,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0  +  1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(this.numerator,  a0  +  1,  overflow);	  throw    new    FractionConversionException(this.numerator,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
391	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  value);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(this.numerator,  a0,  value);	  throw    new    FractionConversionException(this.numerator,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
392	[BUG]  [BUGGY]  this.numerator  =  Math.min(a0,  value);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =  Math.min(a0,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.min(a0,  value);	  this.numerator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
393	[BUG]  [BUGGY]  this.numerator  =  Math.min(denominator,  a0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =  Math.min(denominator,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.min(denominator,  a0);	  this.numerator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
394	[BUG]  [BUGGY]  this.numerator  =  Math.min(r0,  a0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =  Math.min(r0,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.min(r0,  a0);	  this.numerator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
395	[BUG]  [BUGGY]  this.numerator  =  Math.min(value,  a0  +  overflow);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =  Math.min(value,  a0  +  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.min(value,  a0  +  overflow);	  this.numerator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
396	[BUG]  [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  epsilon  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  epsilon  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
397	[BUG]  [BUGGY]  Integer  epsilon  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  epsilon  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  epsilon  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
398	[BUG]  [BUGGY]  epsilon  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
399	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow,  1);	  throw    new    FractionConversionException(r0,    overflow,    1l);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
400	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    throw  new  FractionConversionException(this.numerator,  a0,  overflow);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
401	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  Throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  Throw  new  FractionConversionException(this.numerator,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    Throw  new  FractionConversionException(this.numerator,  a0,  overflow);	  	non-compiled	[CE]  not  a  statement	87	None	add
402	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  throw  new  FractionConversionException(this.numerator,  a1,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  throw  new  FractionConversionException(this.numerator,  a1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    throw  new  FractionConversionException(this.numerator,  a1,  overflow);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
403	[BUG]  [BUGGY]  throw  new  FractConversionException(r0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractConversionException(r0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractConversionException(r0,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
404	[BUG]  [BUGGY]  throw  new  FractConversionException(value,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractConversionException(value,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractConversionException(value,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
405	[BUG]  [BUGGY]  throw  new  FractConversionException(a0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractConversionException(a0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractConversionException(a0,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
406	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  numerator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0,  numerator);	  int    denominator    =    Float.parseFloat(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
407	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  numerator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  value,  numerator);	  int    denominator    =    Float.parseFloat(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
408	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(numerator,  r0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(numerator,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(numerator,  r0);	  int    denominator    =    Float.parseFloat(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
409	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MIN_VALUE;    Integer  a1  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	129	None	add
410	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  int  a1  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  int  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MIN_VALUE;    int  a1  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	129	None	add
411	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Long  a1  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Long  a1  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MIN_VALUE;    Long  a1  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	129	None	add
412	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MIN_VALUE);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MIN_VALUE);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    Integer.MIN_VALUE;    Integer  a1  =  Integer.MIN_VALUE);	  	non-compiled	[CE]  ';'  expected	129	None	add
413	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1,  1l);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  1,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
414	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  1,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
415	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1,  1l);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  overflow,  1,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
416	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0,  overflow);	  int    denominator    =    Float.parseFloat(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
417	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  overflow,  a0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  overflow,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  overflow,  a0);	  int    denominator    =    Float.parseFloat(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
418	[BUG]  [BUGGY]  this.numerator  =(long)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(long)Math.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(long)Math.floor(a0);	  this.numerator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
419	[BUG]  [BUGGY]  this.numerator  =(int)Math.ceil(a0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(int)Math.ceil(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(int)Math.ceil(a0);	  this.numerator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
420	[BUG]  [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  Integer  a1  =  (int)Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  Integer  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Integer.MAX_VALUE;    Integer  a1  =  (int)Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
421	[BUG]  [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  int  a1  =  (int)Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  int  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Integer.MAX_VALUE;    int  a1  =  (int)Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
422	[BUG]  [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  Long  a1  =  (int)Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE;  Long  a1  =  (int)Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Integer.MAX_VALUE;    Long  a1  =  (int)Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
423	[BUG]  [BUGGY]  int  denominator  =(int)Math.ceil(r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)Math.ceil(r0);	  int    denominator    =(int)Math.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
424	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)Math.floor(r0);	  int    denominator    =(int)Math.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
425	[BUG]  [BUGGY]  float  denominator  =(float)Math.floor(r0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)Math.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)Math.floor(r0);	  int    denominator    =(int)Math.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
426	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  overflow,  1l);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    throw  new  FractionConversionException(a0,  overflow,  1l);	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
427	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  Throw  new  FractionConversionException(a0,  overflow,  1l);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  Throw  new  FractionConversionException(a0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    Throw  new  FractionConversionException(a0,  overflow,  1l);	  	non-compiled	[CE]  not  a  statement	95	None	add
428	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractConversionException(a0,  overflow,  1l);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractConversionException(a0,  overflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    throw  new  FractConversionException(a0,  overflow,  1l);	  	non-compiled	[CE]  not  a  statement	95	None	add
429	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  overflow,  2l);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  overflow,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    throw  new  FractionConversionException(a0,  overflow,  2l);	  	non-compiled	[CE]  not  a  statement	95	None	add
430	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(a0  +  overflow);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(a0  +  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)Math.floor(a0  +  overflow);	  int    denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
431	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(overflow);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)Math.floor(overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)Math.floor(overflow);	  int    denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
432	[BUG]  [BUGGY]  long  a1  =  0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  0;	  Integer    a1    =    0;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
433	[BUG]  [BUGGY]  Integer  a1  =  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  1;	  Integer    a1    =    0;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
434	[BUG]  [BUGGY]  Integer  a1  =  0L;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  0L;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  0L;	  Integer    a1    =    0;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
435	[BUG]  [BUGGY]  epsilon  =(long)Math.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(long)Math.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(long)Math.floor(value);	  epsilon    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
436	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE  +  1l;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE  +  1l;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  Integer.MAX_VALUE  +  1l;	  long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
437	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  Integer.MAX_VALUE  +  1;	  long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
438	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  1);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
439	[BUG]  [BUGGY]  Throw  new  FractionConversionException(r0,  a0,  overflow);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Throw  new  FractionConversionException(r0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Throw  new  FractionConversionException(r0,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    Throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  not  a  statement	68	None	replace
440	[BUG]  [BUGGY]  Integer  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  denominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    Integer    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
441	[BUG]  [BUGGY]  epsilon  =(double)Math.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)Math.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(double)Math.floor(value);	  epsilon    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
442	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MIN_VALUE;  int  desnominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
443	[BUG]  [BUGGY]  float  denominator  =  Integer.MAX_VALUE;  float  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =  Integer.MAX_VALUE;  float  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =  Integer.MAX_VALUE;  float  desnominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
444	[BUG]  [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  long  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  long  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =  Integer.MAX_VALUE;  long  desnominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
445	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(overflow);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  (int)Math.floor(overflow);	  Integer    a1    =    (int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
446	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  epsilon);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  epsilon);	  throw    new    FractionConversionException(a0,    epsilon);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
447	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  epsilon);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  epsilon);	  throw    new    FractionConversionException(a0,    epsilon);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
448	[BUG]  [BUGGY]  int  denominator  =  super.denominator;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  super.denominator;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  super.denominator;	  int    denominator    =    getNumerator();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
449	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractionConversionException(r0,  a0,  outflow);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractionConversionException(r0,  a0,  outflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    throw  new  FractionConversionException(r0,  a0,  outflow);	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
450	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractionConversionException(r0,  a0,  Overflow);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  throw  new  FractionConversionException(r0,  a0,  Overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    throw  new  FractionConversionException(r0,  a0,  Overflow);	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
451	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  int  desnominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator();  int  desnominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    desnominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
452	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator();  Integer  desnominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  denominator  =  getDenominator();  Integer  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  denominator  =  getDenominator();  Integer  desnominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    desnominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
453	[BUG]  [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  Integer  a1  =  (int)Math.floor(a1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Math.floor(a0);  Integer  a1  =  (int)Math.floor(a1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    (int)Math.floor(a0);    Integer  a1  =  (int)Math.floor(a1);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
454	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxDenominator);  int  epsilon  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxDenominator);  int  epsilon  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  maxDenominator);  int  epsilon  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
455	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  epsilon  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  epsilon  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  epsilon  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    epsilon    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
456	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
457	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0,  a0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r0,  a0);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
458	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  1l);  int  denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
459	[BUG]  [BUGGY]  double  r0  =(double)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  r0  =(double)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  r0  =(double)FastMath.floor(r0);	  double    epsilon    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
460	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r1));  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r1));	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1));    	non-compiled	[CE]  ';'  expected	55	None	replace
461	[BUG]  [BUGGY]  Integer  denominator  =(Integer)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  denominator  =(Integer)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  denominator  =(Integer)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1));	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1));    	non-compiled	[CE]  ';'  expected	55	None	replace
462	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(value);  Int  denominator  =(int)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(value);  Int  denominator  =(int)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.floor(value);    Int  denominator  =(int)FastMath.floor(value);	  	non-compiled	[CE]  cannot  find  symbol	132	None	add
463	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  Overflow);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  Overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  Overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractionConversionException(value,    a0,    Overflow);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
464	[BUG]  [BUGGY]  Throw  new  FractionConversionException(a0,  r0,  1l);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Throw  new  FractionConversionException(a0,  r0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Throw  new  FractionConversionException(a0,  r0,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    Throw    new    FractionConversionException(overflow,    a0,    1l);    	non-compiled	[CE]  not  a  statement	20	None	replace
465	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
466	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1l);  denominator  =(int)FastMath.floor(denominator);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1l);  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  1l);  denominator  =(int)FastMath.floor(denominator);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
467	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(r0);  float  denominator  =(float)FastMath.floor(r1);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
468	[BUG]  [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  int  denominator  =(long)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =(long)FastMath.floor(r0);  int  denominator  =(long)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =(long)FastMath.floor(r0);  int  denominator  =(long)FastMath.floor(r1);	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
469	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  r1,  denominator);	  throw    new    FractionConversionException(value,    a0,    r1,    overflow);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
470	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
471	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  throw  new  FractionConversionException(a0,  a0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    throw  new  FractionConversionException(a0,  a0,  1);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
472	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0,  maxDenominator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0,  maxDenominator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(value,  r0,  maxDenominator);	  int    denominator    =    Float.parseFloat(value,    r0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
473	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.floor(value);	  double    denominator    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
474	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.log(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.log(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.log(r0);	  double    denominator    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
475	[BUG]  [BUGGY]  Integer  denominator  =  getDenominator();  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  denominator  =  getDenominator();  int  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  denominator  =  getDenominator();  int  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
476	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  value,  1,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  value,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  value,  1,  1l);	  throw    new    FractionConversionException(a0,    r1,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
477	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  maxDenominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  maxDenominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  maxDenominator);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractionConversionException(value,    a0,    outflow);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
478	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  denominator  =  getDenominator();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  denominator  =  getDenominator();	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
479	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  int  denominator  =  getDenominator();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  3);  int  denominator  =  getDenominator();	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
480	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxDenominator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxDenominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  maxDenominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
481	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0,  numerator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(value,  r0,  numerator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(value,  r0,  numerator);	  int    denominator    =    Float.parseFloat(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
482	[BUG]  [BUGGY]  Long  a1  =  Integer.MAX_VALUE  +  overflow;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Long  a1  =  Integer.MAX_VALUE  +  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Long  a1  =  Integer.MAX_VALUE  +  overflow;	  Long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
483	[BUG]  [BUGGY]  Long  a1  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Long  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Long  a1  =  Integer.MAX_VALUE  +  1;	  Long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
484	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  value);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  value);	  throw    new    FractionConversionException(overflow,    a0,    r1);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
485	[BUG]  [BUGGY]  float  denominator  =(float)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)Math.floor(a0);	  int    denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
486	[BUG]  [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        Integer.MAX_VALUE;        int    desnominator    =    Integer.MAX_VALUE;    Integer  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
487	[BUG]  [BUGGY]  Throw  new  FractionConversionException(value,  a0,  overflow);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Throw  new  FractionConversionException(value,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Throw  new  FractionConversionException(value,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    Throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  not  a  statement	68	None	replace
488	[BUG]  [BUGGY]  throw  new  FractionConversionException(fn,  a0,  r1);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fn,  a0,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fn,  a0,  r1);	  throw    new    FractionConversionException(fn,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
489	[BUG]  [BUGGY]  throw  new  FractionConversionException(R0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(R0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(R0,  a0,  overflow);	  throw    new    FractionConversionException(fn,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
490	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  Integer.MAX_VALUE  +  1;	  int    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
491	[BUG]  [BUGGY]  int  a1  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  0;	  int    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
492	[BUG]  [BUGGY]  throw  new  FractionConversionException(r1,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r1,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r1,  a0,  overflow);	  throw    new    FractionConversionException(a0,    r0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
493	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  4);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  4);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  4);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    2l);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
494	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r0);  epsilon  =(int)FastMath.floor(r2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(r0);  epsilon  =(int)FastMath.floor(r2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)FastMath.floor(r0);    epsilon  =(int)FastMath.floor(r2);	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
495	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  ZERO);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  ZERO);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  overflow,  ZERO);	  throw    new    FractionConversionException(r0,    a0,    ZERO);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
496	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  this.numerator  =  new  FractionConversionException(this.numerator,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  this.numerator  =  new  FractionConversionException(this.numerator,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    this.numerator  =  new  FractionConversionException(this.numerator,  a0,  overflow);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
497	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  outflow,  1l);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  outflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    throw  new  FractionConversionException(r0,  outflow,  1l);	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
498	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  overflow,  1)l);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  throw  new  FractionConversionException(r0,  overflow,  1)l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    throw  new  FractionConversionException(r0,  overflow,  1)l);	  	non-compiled	[CE]  ';'  expected	64	None	add
499	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r0);  Integer  denominator  =(int)FastMath.floor(r1);	          int    denominator    =(int)FastMath.floor(r0);    Integer    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
500	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  Integer  denominator  =(float)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  Integer  denominator  =(float)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(r0);  Integer  denominator  =(float)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    Integer    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
501	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  1);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
502	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(value,  r0,  a0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.convert(value,  r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(value,  r0,  a0);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
503	[BUG]  [BUGGY]  throw  new  FractionConversionException(l,  r0,  value,  1l);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(l,  r0,  value,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(l,  r0,  value,  1l);	  throw    new    FractionConversionException(a0,    r0,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
504	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Integer.MAX_VALUE  +  1;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
505	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Integer.MAX_VALUE  -  1;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
506	[BUG]  [BUGGY]  double  denominator  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Integer.MIN_VALUE;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
507	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  1,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  1,  overflow);	  throw    new    FractionConversionException(FOUR_FIFTHS,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
508	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  r1,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  r1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  r1,  1l);	  throw    new    FractionConversionException(FOUR_FIFTHS,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
509	[BUG]  [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)Math.floor(r0);  epsilon  =(int)Math.floor(r2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon    =(int)Math.floor(r0);    epsilon  =(int)Math.floor(r2);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
510	[BUG]  [BUGGY]  int  denominator  =  getDenominator(value,  r0,  a0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(value,  r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(value,  r0,  a0);	  int    denominator    =    getDenominator(value,    r0);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
511	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  denominator  =  Integer.MIN_VALUE  -  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  int  denominator  =  Integer.MIN_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    -    1;    int  denominator  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
512	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MIN_VALUE;  Integer  denominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    Integer    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
513	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE  +  overflow;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE  +  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  Integer.MAX_VALUE  +  overflow;	  long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
514	[BUG]  [BUGGY]  this.numerator  =(int)Math.floor(r1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(int)Math.floor(r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(int)Math.floor(r1);	  this.numerator    =(int)Math.floor(value);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
515	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  2l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  2l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  2l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    2l);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
516	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  int  numerator  =  getDedeninator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  int  numerator  =  getDedeninator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    numerator    =    getDenominator();    int  denominator  =  getDenominator();  int  numerator  =  getDedeninator();	  	non-compiled	[CE]  cannot  find  symbol	142	None	add
517	[BUG]  [BUGGY]  long  r0  =(long)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  r0  =(long)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  r0  =(long)FastMath.floor(r0);	  long    epsilon    =(long)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
518	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  2;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  2;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  -  2;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
519	[BUG]  [BUGGY]  int  denominator  =  0;  Int  denominator  =  0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0;  Int  denominator  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    0;    Int  denominator  =  0;	  	non-compiled	[CE]  cannot  find  symbol	76	None	add
520	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  throw  new  FractionConversionException(r0,  a0,  2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    throw  new  FractionConversionException(r0,  a0,  2);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
521	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  maxDenominator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  value,  maxDenominator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  value,  maxDenominator);	  int    denominator    =    Float.parseFloat(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
522	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  long  denominator  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  long  denominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MIN_VALUE;    long  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
523	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  1);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
524	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MIN_VALUE;  Integer  a1  =  Integer.MAX_VALUE;	          Integer    a1    =    Integer.MAX_VALUE;    Integer    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
525	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(denominator);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(denominator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.ceil(denominator);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
526	[BUG]  [BUGGY]  Integer  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MAX_VALUE;  long  a1  =  Integer.MAX_VALUE;	          Integer    a1    =    Integer.MAX_VALUE;    Long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
527	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(this.numerator,  a0,  r1);	  throw    new    FractionConversionException(this.numerator,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
528	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  maxIterations);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  maxIterations);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  maxIterations);	  int    denominator    =    getDenominator(a0);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
529	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  r0,  a0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  r0,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  r0,  a0);	  throw    new    FractionConversionException(value,    a0,    r0);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
530	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  maxDenominator,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  maxDenominator,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  maxDenominator,  1l);	  throw    new    FractionConversionException(r0,    a0,    epsilon,    1l);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
531	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  overflow);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  overflow);	  throw    new    FractionConversionException(r0,    a0,    epsilon,    1l);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
532	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  value,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  value,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  value,  overflow);	  throw    new    FractionConversionException(a0,    value,    overflow);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
533	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  maxIterations);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  maxIterations);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a0,  maxIterations);	  int    denominator    =    getDenominator(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
534	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  Int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  Int  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumerator();  Int  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    Int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
535	[BUG]  [BUGGY]  throw  new  FractionConversionException(r1,  a0,  1l);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r1,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r1,  a0,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    Throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
536	[BUG]  [BUGGY]  denominator  =  r0.doubleValue();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  denominator  =  r0.doubleValue();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	denominator  =  r0.doubleValue();	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    r0.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
537	[BUG]  [BUGGY]  epsilon  =(double)FastMath.floor(value);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)FastMath.floor(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(double)FastMath.floor(value);	  epsilon    =(int)FastMath.floor(value);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
538	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  outflow,  1l);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  outflow,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    throw  new  FractionConversionException(a0,  outflow,  1l);	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
539	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  overflow,  1)l);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  throw  new  FractionConversionException(a0,  overflow,  1)l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    throw  new  FractionConversionException(a0,  overflow,  1)l);	  	non-compiled	[CE]  ';'  expected	95	None	add
540	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(r1);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
541	[BUG]  [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  desnominator  =(float)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =(float)FastMath.floor(r0);  float  desnominator  =(float)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =(float)FastMath.floor(r0);  float  desnominator  =(float)FastMath.floor(r0);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
542	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r0);  int  desnominator  =(int)FastMath.floor(a0);	          int    denominator    =(int)FastMath.floor(r0);    int    desnominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
543	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  maxIterations);  int  denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
544	[BUG]  [BUGGY]  r0  =  a0;  int  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  r0  =  a0;  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	r0  =  a0;  int  denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
545	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1L);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1L);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1L);	  throw    new    FractionConversionException(a0,    r0,    1l);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
546	[BUG]  [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MIN_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  denominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MIN_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
547	[BUG]  [BUGGY]  throw  new  FractionConversionException(false,  a0,  1l);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(false,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(false,  a0,  1l);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
548	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MIN_VALUE  +  1;	  Integer    a1    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
549	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  denominator  =(int)FastMath.ceil(r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.ceil(r0);  int  denominator  =(int)FastMath.ceil(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =(int)FastMath.ceil(r0);    int  denominator  =(int)FastMath.ceil(r1);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
550	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  overflow;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MIN_VALUE  -  overflow;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MIN_VALUE  -  overflow;	  int    denominator    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
551	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  maxDenominator);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  maxDenominator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0,  maxDenominator);	  int    denominator    =    Float.parseFloat(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
552	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  maxIterations);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  maxIterations);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0,  maxIterations);	  int    denominator    =    Float.parseFloat(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
553	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =(int)FastMath.floor(a0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =(int)FastMath.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l);  int  denominator  =(int)FastMath.floor(a0);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
554	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  1l);  denominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  1l);  denominator  =(int)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  1l);  denominator  =(int)FastMath.floor(r0);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
555	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  1l);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  1l);	  throw    new    FractionConversionException(a0,    overflow,    1l);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
556	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a2);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a2);	  throw    new    FractionConversionException(a0,    a2);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
557	[BUG]  [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  (int)Integer.MAX_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  (int)Integer.MAX_VALUE  +  1;	  Integer    a1    =    (int)Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
558	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =(int)FastMath.floor(denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =(int)FastMath.floor(denominator);	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
559	[BUG]  [BUGGY]  throw  new  FractionConversionException(fasilon,  a1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fasilon,  a1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fasilon,  a1);	  throw    new    FractionConversionException(a0,    a1);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
560	[BUG]  [BUGGY]  Double  denominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Double  denominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Double  denominator  =  Math.min(value,  a0);	  float    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
561	[BUG]  [BUGGY]  epsilon  =(double)FastMath.floor(r0);  return;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(double)FastMath.floor(r0);  return;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(double)FastMath.floor(r0);  return;	  epsilon    =(int)FastMath.floor(r0);    return;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
562	[BUG]  [BUGGY]  double  denominator  =  Math.min(r0,  a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Math.min(r0,  a0);	  double    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
563	[BUG]  [BUGGY]  double  denominator  =  Math.min(value,  overflow);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Math.min(value,  overflow);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Math.min(value,  overflow);	  double    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
564	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
565	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  overflow);  denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
566	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l,  maxDenominator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1l,  maxDenominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  1l,  maxDenominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
567	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1,  1l);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  1,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
568	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  denominator  =  Integer.MIN_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  int  denominator  =  Integer.MIN_VALUE  +  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    Integer.MAX_VALUE    +    1;    int  denominator  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
569	[BUG]  [BUGGY]  Integer  denominator  =  Math.min(value,  a0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  denominator  =  Math.min(value,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  denominator  =  Math.min(value,  a0);	  long    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
570	[BUG]  [BUGGY]  denominator  =  Math.min(r0,  a0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  denominator  =  Math.min(r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	denominator  =  Math.min(r0,  a0);	  long    denominator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
571	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(f0);  int  desnominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(f0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(f0);  int  desnominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
572	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1);  int  desnominator  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(r1);  int  desnominator  =(int)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(r1);  int  desnominator  =(int)FastMath.floor(r1);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
573	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  epsilon);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  epsilon);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  epsilon);	  int    denominator    =    getDenominator(a0,    r1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
574	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  int  numerator  =  getDenomieinator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  numerator  =  getDenominator();  int  denominator  =  getDenominator();  int  numerator  =  getDenomieinator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    numerator    =    getDenominator();    int  denominator  =  getDenominator();  int  numerator  =  getDenomieinator();	  	non-compiled	[CE]  cannot  find  symbol	142	None	add
575	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  a2);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  a2);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  a2);	  int    denominator    =    getDenominator(a0,    r1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
576	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  3);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  3);	  throw    new    FractionConversionException(r0,    a0,    3);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
577	[BUG]  [BUGGY]  throw  new  FractionConversionException(FastMath.floor(r0),  a0,  1l);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FastMath.floor(r0),  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FastMath.floor(r0),  a0,  1l);	  throw    new    FractionConversionException(r0,    a0,    1l);    Throw    new    FractionConversionException(r0,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
578	[BUG]  [BUGGY]  int  denominator  =  0;  Integer  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0;  Integer  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  0;  Integer  denominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    Integer    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
579	[BUG]  [BUGGY]  this.numerator  =  Math.min(value,  a0  -  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =  Math.min(value,  a0  -  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =  Math.min(value,  a0  -  overflow);	  this.numerator    =    Math.min(value,    a0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
580	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  numerator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  numerator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  numerator);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
581	[BUG]  [BUGGY]  if(value  >  epsilon)  {  this.numerator  =  Math.min(a0,  value);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  if(value  >  epsilon)  {  this.numerator  =  Math.min(a0,  value);  }  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	if(value  >  epsilon)  {  this.numerator  =  Math.min(a0,  value);  }	          if(value    >    epsilon)    {    this.numerator    =    Math.abs(a0);    }    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
582	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  int  denominator  =(int)FastMath.floor(denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    int  denominator  =(int)FastMath.floor(denominator);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
583	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  int  denominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  1l);  int  denominator  =(int)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    a0,    1l);    int  denominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
584	[BUG]  [BUGGY]  throw  new  FractionConversionException(false,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(false,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(false,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
585	[BUG]  [BUGGY]  int  denominator  =  this.denominator.doubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  this.denominator.doubleValue();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  this.denominator.doubleValue();	  int    denominator    =    a0.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
586	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  denominator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  denominator);	  throw    new    FractionConversionException(a0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
587	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.ceil(r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.ceil(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.ceil(r0);	  int    denominator    =(int)FastMath.ceil(r0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
588	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  int  denominator  =  r0.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  2);  int  denominator  =  r0.doubleValue();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    2);    int  denominator  =  r0.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	148	None	add
589	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  2);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  2);	  throw    new    FractionConversionException(r0,    a0,    2);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
590	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a2,  value,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a2,  value,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a2,  value,  1l);	  throw    new    FractionConversionException(a0,    r1,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
591	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIELD_NAME,  a0,  1l);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIELD_NAME,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIELD_NAME,  a0,  1l);	  throw    new    FractionConversionException(fnMath,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
592	[BUG]  [BUGGY]  throw  new  FractionConversionException(R0,  a0,  1l);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(R0,  a0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(R0,  a0,  1l);	  throw    new    FractionConversionException(fnMath,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
593	[BUG]  [BUGGY]  throw  new  FractConversionException(a0,  r0,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractConversionException(a0,  r0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractConversionException(a0,  r0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
594	[BUG]  [BUGGY]  throw  new  FractConversionException(fastMath.floor(r0),  a0,  overflow);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractConversionException(fastMath.floor(r0),  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractConversionException(fastMath.floor(r0),  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
595	[BUG]  [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Long  a1  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  Integer.MIN_VALUE;  Long  a1  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer  a1  =  Integer.MIN_VALUE;  Long  a1  =  Integer.MAX_VALUE;	          Integer    a1    =    Integer.MAX_VALUE;    Long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
596	[BUG]  [BUGGY]  float  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
597	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  int  denominator  =(double)FastMath.floor(r1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.floor(r0);  int  denominator  =(double)FastMath.floor(r1));  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.floor(r0);  int  denominator  =(double)FastMath.floor(r1));	          int    denominator    =(int)FastMath.floor(r0);    int    denominator    =(int)FastMath.floor(r1));    	non-compiled	[CE]  ';'  expected	55	None	replace
598	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1L;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1L;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1L;	  int    denominator    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
599	[BUG]  [BUGGY]  double  denominator  =  0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  0;	  double    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
600	[BUG]  [BUGGY]  Integer  a1  =  0;  Long  a1  =  0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Integer  a1  =  0;  Long  a1  =  0;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Integer    a1    =    0;    Long  a1  =  0;	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
601	[BUG]  [BUGGY]  int  denominator  =  getDnominator();  int  numerator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDnominator();  int  numerator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDnominator();  int  numerator  =  getDenominator();	          int    denominator    =    getDenominator();    int    numerator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
602	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  r1);	  throw    new    FractionConversionException(a0,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
603	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a0,  3);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a0,  3);	  throw    new    FractionConversionException(a0,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
604	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  0,  1l);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  0,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  0,  1l);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
605	[BUG]  [BUGGY]  this.numerator  =(double)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  this.numerator  =(double)Math.floor(a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	this.numerator  =(double)Math.floor(a0);	  this.numerator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
606	[BUG]  [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    Integer.MAX_VALUE;    int  desnominator  =  Integer.MAX_VALUE;  long  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        Integer.MAX_VALUE;        int    desnominator    =    Integer.MAX_VALUE;    long  denominator  =  Integer.MAX_VALUE;  int  desnominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
607	[BUG]  [BUGGY]  float  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  float  denominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	float  denominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
608	[BUG]  [BUGGY]  if(a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  denominator);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  if(a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  denominator);  }  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	if(a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  denominator);  }	  throw    new    FractionConversionException(value,    a0,    overflow);    int    denominator    =(int)FastMath.floor(denominator);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
609	[BUG]  [BUGGY]  throw  new  FractionConversionException(fastMath,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fastMath,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fastMath,  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    throw    new    FractionConversionException(value,    a0,    Overflow);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
610	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  value);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  epsilon,  value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  epsilon,  value);	  throw    new    FractionConversionException(r0,    a0,    value);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
611	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  a1,  r1);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  a1,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  a1,  r1);	  throw    new    FractionConversionException(overflow,    a0,    r1);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
612	[BUG]  [BUGGY]  Int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Int  denominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Int  denominator  =  getDenominator();	          int    denominator    =    getDenominator();    Int    denominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
613	[BUG]  [BUGGY]  throw  new  FractionConversionException(R0,  a0,  a1,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(R0,  a0,  a1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(R0,  a0,  a1,  overflow);	  throw    new    FractionConversionException(a0,    r0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
614	[BUG]  [BUGGY]  return  new  FractionConversionException(r0,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  return  new  FractionConversionException(r0,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	return  new  FractionConversionException(r0,  a0,  overflow);	  throw    new    FractionConversionException(a0,    r0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
615	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1,  a0,  overflow);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1,  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1,  a0,  overflow);	  throw    new    FractionConversionException(a0,    r0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
616	[BUG]  [BUGGY]  int  denominator  =  getDenominator(null,  r0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(null,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(null,  r0);	  int    denominator    =    getDenominator(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
617	[BUG]  [BUGGY]  int  denominator  =  getDenominator(denominator,  r0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(denominator,  r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(denominator,  r0);	  int    denominator    =    getDenominator(r0,    numerator);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
618	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  r0.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  r0.doubleValue();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    int  denominator  =  r0.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
619	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  overflow);  int  denominator  =  getDenominator();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    overflow);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
620	[BUG]  [BUGGY]  throw  new  FractionConversionException(null,  a0,  r1,  1l);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(null,  a0,  r1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(null,  a0,  r1,  1l);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
621	[BUG]  [BUGGY]  throw  new  FractionConversionException(null,  a0,  r1);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(null,  a0,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(null,  a0,  r1);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
622	[BUG]  [BUGGY]  throw  new  FractionConversionException(null,  null,  a0,  1l,  denominator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(null,  null,  a0,  1l,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(null,  null,  a0,  1l,  denominator);	  throw    new    FractionConversionException(null,    a0,    1l);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
623	[BUG]  [BUGGY]  throw  new  FractionConversionException(fastMath.floor(a0,  overflow));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fastMath.floor(a0,  overflow));  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fastMath.floor(a0,  overflow));	  throw    new    FractionConversionException(a0,    a1);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
624	[BUG]  [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  denominator  =  getDenominator();  int  desnominator  =  getDedeninator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =    getDenominator();    int  desnominator  =  getDenominator();  int  denominator  =  getDenominator();  int  desnominator  =  getDedeninator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =        getDenominator();        int    desnominator    =    getDenominator();    int  denominator  =  getDenominator();  int  desnominator  =  getDedeninator();	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
625	[BUG]  [BUGGY]  double  denominator  =(double)FastMath.convert(r0,  a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)FastMath.convert(r0,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)FastMath.convert(r0,  a0);	  double    denominator    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
626	[BUG]  [BUGGY]  epsilon  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  epsilon  =(int)FastMath.floor(r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	epsilon  =(int)FastMath.floor(r1);	  epsilon    =(int)FastMath.floor(value);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
627	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1l);  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1l);  denominator  =  Integer.MAX_VALUE;	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
628	[BUG]  [BUGGY]  int  denominator  =  getNumber();  int  desnominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumber();  int  desnominator  =  getDenominator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getNumber();  int  desnominator  =  getDenominator();	          int    denominator    =    getDenominator();    int    desnominator    =    getDenominator();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
629	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  1l);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  r1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  r1,  1l);	  throw    new    FractionConversionException(a0,    r0,    value,    1l);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
630	[BUG]  [BUGGY]  return  new  FractionConversionException(r0,  a0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  return  new  FractionConversionException(r0,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	return  new  FractionConversionException(r0,  a0);	  throw    new    FractionConversionException(a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
631	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  int  denominator  =  this.numerator.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  int  denominator  =  this.numerator.doubleValue();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    int  denominator  =  this.numerator.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
632	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  int  denominator  =  this.numerator.longValue();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  int  denominator  =  this.numerator.longValue();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    int  denominator  =  this.numerator.longValue();	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
633	[BUG]  [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  int  denominator  =  this.numerator.computeDenominator(value);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(this.numerator,  a0,  overflow);  int  denominator  =  this.numerator.computeDenominator(value);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(this.numerator,    a0,    overflow);    int  denominator  =  this.numerator.computeDenominator(value);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
634	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  0,  denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  0,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  0,  denominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
635	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1L,  denominator);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1L,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1L,  denominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
636	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  int  denominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  int  denominator  =  Integer.MAX_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    int  denominator  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
637	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  int  denominator  =  getDenominator();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
638	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  int  denominator  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  overflow,  1l);  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(a0,    overflow,    1l);    int  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
639	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  maxDenominator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.convert(r0,  a0,  maxDenominator);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.convert(r0,  a0,  maxDenominator);	  int    denominator    =(int)FastMath.convert(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
640	[BUG]  [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(value,  a0,  epsilon);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(value,  a0,  epsilon);	  throw    new    FractionConversionException(value,    a0,    denominator);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
641	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  int  denominator  =  r0.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  3);  int  denominator  =  r0.doubleValue();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    a0,    3);    int  denominator  =  r0.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
642	[BUG]  [BUGGY]  double  epsilon  =(double)FastMath.floor(a0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  epsilon  =(double)FastMath.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  epsilon  =(double)FastMath.floor(a0);	  double    epsilon    =(double)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
643	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value1,  1l);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r0,  value1,  1l);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r0,  value1,  1l);	  throw    new    FractionConversionException(a0,    value,    r1,    1l);    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
644	[BUG]  [BUGGY]  int  denominator  =  getDenominator(a0,  r1,  value);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(a0,  r1,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(a0,  r1,  value);	  int    denominator    =    getDenominator(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
645	[BUG]  [BUGGY]  int  denominator  =  0;  int  desnominator  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  0;  int  desnominator  =  Integer.MAX_VALUE;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  0;  int  desnominator  =  Integer.MAX_VALUE;	          int    denominator    =    Integer.MAX_VALUE;    int    desnominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
646	[BUG]  [BUGGY]  double  denominator  =  Float.parseFloat(r0,  value);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =  Float.parseFloat(r0,  value);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =  Float.parseFloat(r0,  value);	  int    denominator    =    Float.parseFloat(r0,    value);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
647	[BUG]  [BUGGY]  throw  new  FractionConversionException(fn,  a0,  r1,  overflow);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fn,  a0,  r1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fn,  a0,  r1,  overflow);	  throw    new    FractionConversionException(value,    a0,    r1,    overflow);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
648	[BUG]  [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  epsilon);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getDenominator(r0,  a0,  epsilon);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  getDenominator(r0,  a0,  epsilon);	  int    denominator    =    getDenominator(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
649	[BUG]  [BUGGY]  throw  new  FractionConversionException(fastMath.floor(r0),  a0,  overflow);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fastMath.floor(r0),  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fastMath.floor(r0),  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    Throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
650	[BUG]  [BUGGY]  throw  new  FractionConversionException(fastMath.floor(a0),  a0,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(fastMath.floor(a0),  a0,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(fastMath.floor(a0),  a0,  overflow);	  throw    new    FractionConversionException(value,    a0,    overflow);    Throw    new    FractionConversionException(value,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
651	[BUG]  [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  r1);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(FOUR_FIFTHS,  a0,  r1);	  throw    new    FractionConversionException(r0,    a0,    overflow);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
652	[BUG]  [BUGGY]  long  a1  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  long  a1  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	long  a1  =  Integer.MAX_VALUE  -  1;	  long    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
653	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  int  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  int  denominator  =  getDenominator();  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    int  denominator  =  getDenominator();	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
654	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  int  denominator  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  overflow,  1l);  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw    new    FractionConversionException(r0,    overflow,    1l);    int  denominator  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
655	[BUG]  [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  Float.parseFloat(r0,  a0,  1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =  Float.parseFloat(r0,  a0,  1);	  int    denominator    =    Float.parseFloat(r0,    a0);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
656	[BUG]  [BUGGY]  throw  new  FractionConversionException(R0,  a0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(R0,  a0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(R0,  a0);	  throw    new    FractionConversionException(a0,    r0);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
657	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(a0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  double  denominator  =(double)Math.floor(a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	double  denominator  =(double)Math.floor(a0);	  int    denominator    =(int)Math.floor(a0);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
658	[BUG]  [BUGGY]  throw  new  FractionConversionException(a0,  r1);  denominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(a0,  r1);  denominator  =(int)FastMath.floor(r0);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(a0,  r1);  denominator  =(int)FastMath.floor(r0);	  throw    new    FractionConversionException(overflow,    a0,    1l);    int    denominator    =(int)FastMath.floor(r0);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
659	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(re0);  int  desnominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(re0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(re0);  int  desnominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
660	[BUG]  [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(d0);  int  desnominator  =(int)FastMath.floor(r0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]          int    denominator    =(int)FastMath.floor(r0);    int  desnominator  =(int)FastMath.floor(r0);  int  denominator  =(int)FastMath.floor(d0);  int  desnominator  =(int)FastMath.floor(r0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	                int        denominator        =(int)FastMath.floor(r0);        int    desnominator    =(int)FastMath.floor(r0);    int  denominator  =(int)FastMath.floor(d0);  int  desnominator  =(int)FastMath.floor(r0);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
661	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  Int  denominator  =  getNumerator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =  getNumerator();  Int  denominator  =  getNumerator();  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int    denominator    =    getNumerator();    Int  denominator  =  getNumerator();	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
662	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(r1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  denominator  =(int)FastMath.floor(r1);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  denominator  =(int)FastMath.floor(r1);	  int    denominator    =(int)FastMath.floor(value);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
663	[BUG]  [BUGGY]  int  a1  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  int  a1  =  Integer.MAX_VALUE  -  1;  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	int  a1  =  Integer.MAX_VALUE  -  1;	  int    a1    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
664	[BUG]  [BUGGY]  Double  denominator  =  Math.min(denominator,  a0);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  Double  denominator  =  Math.min(denominator,  a0);  [BUGGY]      throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	Double  denominator  =  Math.min(denominator,  a0);	  int    denominator    =    Math.min(denominator,    a0);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
665	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  overflow);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  overflow);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  overflow);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
666	[BUG]  [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1L,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(r0,  a0,  1,  1L,  denominator);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(r0,  a0,  1,  1L,  denominator);	  throw    new    FractionConversionException(r0,    a0,    1l);    throw    new    FractionConversionException(r0,    a0,    1,    1l);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
667	[BUG]  [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  3);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      {  long  overflow  =  Integer.MAX_VALUE;  double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {      [BUGGY]  throw  new  FractionConversionException(overflow,  a0,  3);  [BUGGY]      }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  return;  }  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	1.0	182	182	1	replace	throw  new  FractionConversionException(overflow,  a0,  3);	  throw    new    FractionConversionException(overflow,    a0,    1l);    throw    new    FractionConversionException(overflow,    a0,    1);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
