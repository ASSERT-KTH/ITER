projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,p2,maxDenominator);}else{thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,epsilon,maxDenominator);}else{thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,epsilon,maxDenominator);}else{thrownewFractionConversionException(value,value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+value;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+r0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,epsilon+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)value;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=getNeighborInteger();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)maxIterations.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.floor(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.ceil(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)maxIterations;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,epsilon+1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.next;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=value.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=n.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();p2=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue()+p2.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=epsilon-maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=n.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=n.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=a0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=r0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();a1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q2,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)super.convert(value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p0;p2=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;q1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().getNegativeFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){thrownewFractionConversionException(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<>0)?value:0.0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.ceil(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=a0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)<>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,r1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=r1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+convergent;
