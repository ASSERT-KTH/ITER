projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,p2,maxDenominator);}else{thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,epsilon,maxDenominator);}else{thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,epsilon,maxDenominator);}else{thrownewFractionConversionException(value,value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+value;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+r0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,epsilon+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)value;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=getNeighborInteger();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)maxIterations.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.floor(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.ceil(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)maxIterations;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,epsilon+1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.next;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=value.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=n.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();p2=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue()+p2.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=epsilon-maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=n.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=n.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=a0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=r0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();a1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q2,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)super.convert(value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p0;p2=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;q1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().getNegativeFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){thrownewFractionConversionException(value,p2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<>0)?value:0.0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.ceil(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=a0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)<>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations){thrownewFractionConversionException(value,r1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=r1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&q2<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(n-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&maxDenominator<epsilon)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&maxDenominator<epsilon)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)FastMath.ceil(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.ceil(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)super.ceil(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1*p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+p2.next;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)super.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<epsilon){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=epsilon){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=0){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<=maxDenominator){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1.doubleValue()*p2.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r0.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<epsilon){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=epsilon){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=0){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator>epsilon){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.abs(convergent-value,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.abs(n-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,numerator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,0,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,denominator,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+q2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1*1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value/convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a0.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=a1.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(maxDenominator,epsilon+degree);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,denominator+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(epsilon,value+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,value+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p1,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p0,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,p0);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(n-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&maxDenominator<epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&maxDenominator<=epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent-value,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(value-convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent-value,numerator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r1.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(n-value)>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&maxDenominator<epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)>epsilon&&maxDenominator<=epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)FastMath.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)super.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p3.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p0;q1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;q1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p0;q1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(value,r1,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborr1=epsilon.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborr1=epsilon.abs(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,denominator,maxIterations);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,0,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().getNegativeFactory(n);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().getNegativeFactory(false);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().createNegativeFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215a1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215a1=r1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215a1=r0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(n);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(q2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(maxDenominator,epsilon,degree);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=value-maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=denominator-epsilon;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=denominator-maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=numerator-maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=n.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=n.doubleValue()/denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a2.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a2.doubleValue();p2=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)super.convert(convergent,value,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)super.convert(convergent,value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)super.convert(value,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.floor(n);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)f1.floor(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()+numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+q2,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+p2,numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+convergent,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q2,numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value/1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value+1,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)fastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<>1)?value:0.0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(n<>0)?value:0.0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<>0)?value:1.0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=value.doubleValue()*1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<epsilon){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=epsilon){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<=maxDenominator){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=r2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)FastMath.floor(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)super.floor(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)super.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fnMath.clone();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,epsilon,n,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,maxDenominator,epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,epsilon,maxDenominator,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+q2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+p2,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1*q2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1*a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()*1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Doubler1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent)/(double)maxIterations;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)epsilon;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.next+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2.next;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p0,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,numerator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent*epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*epsilon,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(maxDenominator,epsilon+1,epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(epsilon,epsilon+1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,epsilon+1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(degree,denominator+1,epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=a0.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=a0.doubleValue()*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=a0.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(n-value)<>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)<>epsilon&&q2<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)<>epsilon&&maxDenominator<=epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(n-value)<>epsilon&&maxDenominator<=epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(value,epsilon,maxDenominator,numerator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(convergent,value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(value,epsilon,maxDenominator,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(value,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1*a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.floor(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(n-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.floor(value-fastMath);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/epsilon;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent)/denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=n.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=n.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.ceil(convergent-value,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.ceil(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(n);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(r2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=r1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=getNeighborInteger(0);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=getNeighborInteger(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=getNeighborInteger(1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=n.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=n.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/(double)numerator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(value-convergent)/(double)maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.min(convergent,convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,degree);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p1;p2=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,p0);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,p1,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p0,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=a0.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=a0.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=a0.doubleValue()*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(convergent-value,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(value-convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(convergent-value+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=r1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+r1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+r2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+q2,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(r2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.floor(r2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=convergent-maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degrees=epsilon-value;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)fastMath.floor(r2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.next+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)maxIterations.get(convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(value<>0)?value:0.0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.floor(r0);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.ceil(convergent/value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2+q1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a0.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,convergent,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(convergent){thrownewFractionConversionException(value,p2,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(convergent){thrownewFractionConversionException(value,p1,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,value,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,value,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,epsilon+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,value+maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(converter);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().getDefaultFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a2.doubleValue();a1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a0.doubleValue();a1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(convergent,value,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(convergent,epsilon,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2;q1=p1.next;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*1000+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=r0;p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-value)<>epsilon&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)<<1&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)<>epsilon&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()+a0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=value.doubleValue()/denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-value)>epsilon&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-value)>epsilon&&n<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().value;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,value+1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)fastMath.floor(r0-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=getNeighborInteger(maxIterations);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,n,convergent);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=n.doubleValue()+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(value,epsilon,q2,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&n<maxIterations)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-value)>epsilon&&n<maxIterations)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-value)>epsilon&&n<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue()+p1.doubleValue();p2=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q2,convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value/epsilon);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value*epsilon+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2;p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,p1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.get(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)FastMath.floor(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()+q2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-value)>epsilon&&n<maxIterations)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&maxDenominator<=epsilon)?FractionConversionException.INITIALIZER:FractionConversionException.IN
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,q1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,p2,q2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.ceil(r0);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.n+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Doublep1=value.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0;p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(convergent/value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+p2+denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p0;p2=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p0;p2=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doublep1=0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)fastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=convergent+a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+a2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a0+p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp1=(Neighbor)fastMath.floor(value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2*convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent/value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent-value+1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.floor(r2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber){
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=r1.doubleValue();a1=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degree=Math.max(convergent,r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNumberNa
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactorygen=FastMath.abs(convergent-value*denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=p2.doubleValue()+1;p2=p1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)FastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)<>epsilon&&n<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)<=epsilon&&maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(value-convergent)<>epsilon&&maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(n,value,denominator,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1*convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+p2,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215a1=a1.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a2.doubleValue();a1=p2.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,q1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p2,q2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector<Fraction>stop=newFractionConversionException(value,p1,p2);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFactoryt=getNegativeFactory().negativeFactory();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)getValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&n<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>=epsilon&&maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+n;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&n<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>=epsilon&&q2<maxDenominator)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&maxDenominator<=epsilon)?FractionConversionException.INSTANCE:FractionConversionException.INSTANCE;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.next+(a1*p1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1.next-1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p2/1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)FastMath.floor(r1);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NeighborIntegern=(NeighborInteger)FastMath.floor(r0);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215NegativeFunction<Fraction>p1=(NegativeFunction<Fraction>)fastMath.floor();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1+r0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent/value)/(double)maxIterations;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,convergent,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215allowNumerator(n){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&n<maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>=epsilon&&maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableToIntegerp1=(Math.abs(convergent-value)>epsilon&&maxDenominator)?FractionConversionException.INITIALIZER:FractionConversionException.INITIALIZER);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiincadrincadrincadrincadrincadrincadrincadrincadrincadrincadrincadrincadrincadr
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetielseif(n){thrownewFractionConversion
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215MutableFormat.invoke(n,value,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.floor(r0-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Neighborp2=(Neighbor)FastMath.floor(r1-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215vice(convergent,value,minDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,convergent,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Detector.error(value,r1,maxDenominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215degrees=epsilon/maxDenominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=a0.doubleValue();
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215doubler1=n.doubleValue()*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=1){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<=maxDenominator){thrownewFractionConversionException(value,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215Pendency=Math.abs(convergent-value);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215pendency=Math.abs(convergent-value)/denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=n.doubleValue()*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=value.doubleValue()+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator>epsilon){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=1){thrownewFractionConversionException(value,p2,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator>epsilon){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&maxDenominator<=1){thrownewFractionConversionException(value,p1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value,epsilon,denominator);
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p1=a1;q1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=p1+q1,denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215p0=a1*denominator;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&q2<maxDenominator){thrownewFractionConversionException(value,r1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&n<epsilon){thrownewFractionConversionException(value,r1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215if(n<maxIterations&&n<=epsilon){thrownewFractionConversionException(value,r1,epsilon,maxDenominator);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java215n=Math.abs(convergent-value)/2.0;
