bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  r0  =  overflow  -  value;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow  -  value;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  overflow  -  value;	  double    r0    =    value    -    overflow;    	non-compiled	[CE]  not  a  statement	8	None	replace
2	[BUG]  [BUGGY]  double  r0  =  value  /  overflow;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  value  /  overflow;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  value  /  overflow;	  double    r0    =    value    -    overflow;    	non-compiled	[CE]  not  a  statement	8	None	replace
3	[BUG]  [BUGGY]  double  r0  =  value  -  overflow  +  1l;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  value  -  overflow  +  1l;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  value  -  overflow  +  1l;	  double    r0    =    value    -    overflow;    	non-compiled	[CE]  not  a  statement	8	None	replace
4	[BUG]  [BUGGY]  double  r0  =  overflow  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow  +  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  overflow  +  1;	  double    r0    =    overflow;    	non-compiled	[CE]  not  a  statement	6	None	replace
5	[BUG]  [BUGGY]  double  r0  =  overflow  +  1l;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow  +  1l;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  overflow  +  1l;	  double    r0    =    overflow;    	non-compiled	[CE]  not  a  statement	6	None	replace
6	[BUG]  [BUGGY]  double  r0  =  this.numerator;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  this.numerator;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  this.numerator;	  double    r0    =    numerator;    	non-compiled	[CE]  not  a  statement	9	None	replace
7	[BUG]  [BUGGY]  double  r0  =  denominator;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  denominator;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  denominator;	  double    r0    =    numerator;    	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  double  r0  =  overflow.doubleValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  overflow.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  overflow.doubleValue();	  double    r0    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
9	[BUG]  [BUGGY]  double  r0  =  this.value.doubleValue();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  this.value.doubleValue();  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  this.value.doubleValue();	  double    r0    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  double  r0  =  value.doubleValue()  +  overflow;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  value.doubleValue()  +  overflow;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  value.doubleValue()  +  overflow;	  double    r0    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  denominator  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  denominator  =  Integer.MAX_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	2	None	replace
12	[BUG]  [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  denominator  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  denominator  =  Integer.MAX_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	2	None	replace
13	[BUG]  [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Integer.MIN_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Integer.MIN_VALUE;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  +  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Integer.MAX_VALUE  +  1;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	2	None	replace
15	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(denominator);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  denominator  =(double)Math.floor(denominator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  denominator  =(double)Math.floor(denominator);	      int    denominator    =(int)Math.floor(denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
16	[BUG]  [BUGGY]  long  denominator  =(long)Math.floor(denominator);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  denominator  =(long)Math.floor(denominator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  denominator  =(long)Math.floor(denominator);	      int    denominator    =(int)Math.floor(denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
17	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(numerator);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =(int)Math.floor(numerator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =(int)Math.floor(numerator);	      int    denominator    =(int)Math.floor(denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
18	[BUG]  [BUGGY]  int  denominator  =  Math.min(value,  denominator);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(value,  denominator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(value,  denominator);	      int    denominator    =    Math.min(denominator,    value);    	non-compiled	[CE]  not  a  statement	5	None	replace
19	[BUG]  [BUGGY]  int  denominator  =  Math.min(denominator,  maxDenominator);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(denominator,  maxDenominator);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(denominator,  maxDenominator);	      int    denominator    =    Math.min(denominator,    value);    	non-compiled	[CE]  not  a  statement	5	None	replace
20	[BUG]  [BUGGY]  int  denominator  =  Math.min(numerator,  value);  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(numerator,  value);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(numerator,  value);	      int    denominator    =    Math.min(denominator,    value);    	non-compiled	[CE]  not  a  statement	5	None	replace
21	[BUG]  [BUGGY]  int  denominator  =  Math.min(numerator,  maxIterations);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(numerator,  maxIterations);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(numerator,  maxIterations);	      int    denominator    =    Math.min(denominator,    maxIterations);    	non-compiled	[CE]  not  a  statement	4	None	replace
22	[BUG]  [BUGGY]  int  denominator  =  Math.min(denominator,  overflow);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(denominator,  overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(denominator,  overflow);	      int    denominator    =    Math.min(denominator,    maxIterations);    	non-compiled	[CE]  not  a  statement	4	None	replace
23	[BUG]  [BUGGY]  double  denominator  =(double)Math.floor(value);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  denominator  =(double)Math.floor(value);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  denominator  =(double)Math.floor(value);	      int    denominator    =(int)Math.floor(value);    	non-compiled	[CE]  not  a  statement	15	None	replace
24	[BUG]  [BUGGY]  long  denominator  =(long)Math.floor(value);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  denominator  =(long)Math.floor(value);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  denominator  =(long)Math.floor(value);	      int    denominator    =(int)Math.floor(value);    	non-compiled	[CE]  not  a  statement	15	None	replace
25	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(overflow);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =(int)Math.floor(overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =(int)Math.floor(overflow);	      int    denominator    =(int)Math.floor(value);    	non-compiled	[CE]  not  a  statement	15	None	replace
26	[BUG]  [BUGGY]  long  numerator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  numerator  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  numerator  =  Integer.MAX_VALUE;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
27	[BUG]  [BUGGY]  double  numerator  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  numerator  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  numerator  =  Integer.MAX_VALUE;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
28	[BUG]  [BUGGY]  int  numerator  =  Integer.MAX_VALUE  +  1;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  numerator  =  Integer.MAX_VALUE  +  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  numerator  =  Integer.MAX_VALUE  +  1;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
29	[BUG]  [BUGGY]  double  value  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  value  =  Integer.MAX_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  value  =  Integer.MAX_VALUE;	      int    value    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	10	None	replace
30	[BUG]  [BUGGY]  int  value  =  Integer.MAX_VALUE  -  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  value  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  value  =  Integer.MAX_VALUE  -  1;	      int    value    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	10	None	replace
31	[BUG]  [BUGGY]  int  value  =  Integer.MAX_VALUE  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  value  =  Integer.MAX_VALUE  +  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  value  =  Integer.MAX_VALUE  +  1;	      int    value    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	10	None	replace
32	[BUG]  [BUGGY]  long  value  =  Integer.MAX_VALUE  -  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  value  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  value  =  Integer.MAX_VALUE  -  1;	      long    value    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	1	None	replace
33	[BUG]  [BUGGY]  long  value  =  Integer.MAX_VALUE  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  value  =  Integer.MAX_VALUE  +  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  value  =  Integer.MAX_VALUE  +  1;	      long    value    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	1	None	replace
34	[BUG]  [BUGGY]  int  denominator  =  getNumerator();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  getNumerator();  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  getNumerator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  int  denominator  =  getNumberDenominator();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  getNumberDenominator();  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  getNumberDenominator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  int  value  =  Integer.MIN_VALUE;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  value  =  Integer.MIN_VALUE;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  value  =  Integer.MIN_VALUE;	      long    value    =    Integer.MIN_VALUE;    	non-compiled	[CE]  not  a  statement	13	None	replace
37	[BUG]  [BUGGY]  long  value  =  Integer.MIN_VALUE  -  1;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  long  value  =  Integer.MIN_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	long  value  =  Integer.MIN_VALUE  -  1;	      long    value    =    Integer.MIN_VALUE;    	non-compiled	[CE]  not  a  statement	13	None	replace
38	[BUG]  [BUGGY]  int  denominator  =  Math.min(epsilon,  maxIterations);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(epsilon,  maxIterations);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(epsilon,  maxIterations);	      int    denominator    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  not  a  statement	12	None	replace
39	[BUG]  [BUGGY]  int  denominator  =  getDenominator(overflow);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  getDenominator(overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  getDenominator(overflow);	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	11	None	replace
40	[BUG]  [BUGGY]  int  denominator  =  getDenominator()  -  overflow;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  getDenominator()  -  overflow;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  getDenominator()  -  overflow;	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	11	None	replace
41	[BUG]  [BUGGY]  double  r0  =  value  -  overflow  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  value  -  overflow  +  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  value  -  overflow  +  1;	  double    r0    =    value    -    overflow;    	non-compiled	[CE]  not  a  statement	8	None	replace
42	[BUG]  [BUGGY]  double  r0  =  value.doubleValue()  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  value.doubleValue()  +  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  value.doubleValue()  +  1;	  double    r0    =    value.doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
43	[BUG]  [BUGGY]  double  r0  =  0;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  0;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  0;	  double    r0    =    overflow;    	non-compiled	[CE]  not  a  statement	6	None	replace
44	[BUG]  [BUGGY]  double  r0  =  this.denominator;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  this.denominator;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  this.denominator;	  double    r0    =    numerator;    	non-compiled	[CE]  not  a  statement	9	None	replace
45	[BUG]  [BUGGY]  int  denominator  =(int)FastMath.floor(value);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =(int)FastMath.floor(value);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =(int)FastMath.floor(value);	      int    denominator    =(int)Math.floor(value);    	non-compiled	[CE]  not  a  statement	15	None	replace
46	[BUG]  [BUGGY]  int  denominator  =  Math.min(value,  overflow);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(value,  overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(value,  overflow);	      int    denominator    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  not  a  statement	12	None	replace
47	[BUG]  [BUGGY]  int  denominator  =  Math.min(value,  epsilon);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(value,  epsilon);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(value,  epsilon);	      int    denominator    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  not  a  statement	12	None	replace
48	[BUG]  [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Integer.MAX_VALUE  -  1;	      int    denominator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	2	None	replace
49	[BUG]  [BUGGY]  int  denominator  =  Math.min(maxDenominator,  maxIterations);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(maxDenominator,  maxIterations);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(maxDenominator,  maxIterations);	      int    denominator    =    Math.min(value,    maxIterations);    	non-compiled	[CE]  not  a  statement	12	None	replace
50	[BUG]  [BUGGY]  int  numerator  =  Integer.MAX_VALUE  -  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  numerator  =  Integer.MAX_VALUE  -  1;  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  numerator  =  Integer.MAX_VALUE  -  1;	      int    numerator    =    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	3	None	replace
51	[BUG]  [BUGGY]  int  denominator  =  Math.min(denominator,  epsilon);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =  Math.min(denominator,  epsilon);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =  Math.min(denominator,  epsilon);	      int    denominator    =    Math.min(denominator,    maxIterations);    	non-compiled	[CE]  not  a  statement	4	None	replace
52	[BUG]  [BUGGY]  int  denominator  =(int)Math.floor(denominator  -  overflow);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  int  denominator  =(int)Math.floor(denominator  -  overflow);  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	int  denominator  =(int)Math.floor(denominator  -  overflow);	      int    denominator    =(int)Math.floor(denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
53	[BUG]  [BUGGY]  double  r0  =  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  r0  =  1;  [BUGGY]    long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  r0  =  1;	  double    r0    =    overflow;    	non-compiled	[CE]  not  a  statement	6	None	replace
54	[BUG]  [BUGGY]  double  denominator  =  getDenominator();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    {  long  overflow  =  Integer.MAX_VALUE;    [BUGGY]  double  denominator  =  getDenominator();  [BUGGY]    double  r0  =  value;  long  a0  =  (long)FastMath.floor(r0);  if  (a0  >  overflow)  {  throw  new  FractionConversionException(value,  a0,  1l);  }    if  (FastMath.abs(a0  -  value)  <  epsilon)  {  this.numerator  =  (int)  a0;  this.denominator  =  1;  [CLASS]  Fraction  [METHOD]  <init>  [RETURN_TYPE]  Fraction(double,double,int,int)  double  value  double  epsilon  int  maxDenominator  int  maxIterations  [VARIABLES]  Fraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  boolean  stop  long  a0  a1  overflow  p0  p1  p2  q0  q1  q2  serialVersionUID  int  denominator  maxDenominator  maxIterations  n  numerator  double  convergent  epsilon  r0  r1  value  	projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java	0.35355339059327373	179	179	1	replace	double  denominator  =  getDenominator();	      int    denominator    =    getDenominator();    	non-compiled	[CE]  not  a  statement	11	None	replace
