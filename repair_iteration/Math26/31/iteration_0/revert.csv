projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p2=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p0=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p1=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p1=p0;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p0=p2;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p1=p2+1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p1=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p1=p2+convergent;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216p2=p1;
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216if(n<maxIterations){thrownewFractionConversionException(value,p0,q2);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216if(n<maxIterations){thrownewFractionConversionException(value,p1,q2);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216if(n<maxIterations){thrownewFractionConversionException(value,p2,q2);}
projects/Math26/src/main/java/org/apache/commons/math3/fraction/Fraction.java216n=Math.min(convergent,value);
