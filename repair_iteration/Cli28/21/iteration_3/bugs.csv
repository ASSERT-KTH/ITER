bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ListIterator  it  =  options.findRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.findRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.findRequiredOptions();	  ListIterator    it    =    options.findRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOptions(t,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions(t,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptions(t,  str);	  Option    option    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOptions(t,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions(t,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptions(t,  arguments);	  Option    option    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(str,  it.next());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(str,  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(str,  it.next());	  Option    opt    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
5	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t,  it.next(),  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t,  it.next(),  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t,  it.next(),  str);	  Option    opt    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t,  str.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t,  str.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t,  str.next());	  Option    opt    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
7	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t.next(),  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t.next(),  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t.next(),  str);	  Option    opt    =    options.helpOption(t.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
8	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t.getKey());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t.getKey());	  Option    opt    =    options.helpOption(t.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
9	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t.next(),  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t.next(),  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t.next(),  it.next());	  Option    opt    =    options.helpOption(t.next());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
10	[BUG]  [BUGGY]  Option  opt  =  options.opt(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.opt(t);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.opt(t);	  Option    opt    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  Option  opt  =  options.options();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.options();  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.options();	  Option    opt    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Iterator  it  =  options.getRequiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.getRequiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  it  =  options.getRequiresOptions().iterator();	  ListIterator    it    =    option.getRequiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
13	[BUG]  [BUGGY]  Option  option  =(Option)it.getKey();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getKey();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =(Option)it.getKey();	  Option    option    =(Option)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getRawParameters().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.getRawParameters().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.getRawParameters().iterator();	  Iterator    <    Option>    it    =    options.getRawOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
15	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  arguments,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  arguments,  stopAtNonOption);	  Option    opt    =    options.helpOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
16	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(options.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(options.next(),  arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(options.next(),  arguments);	  Option    opt    =    options.helpOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
17	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  blockAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  blockAtNonOption);	  Option    opt    =    options.helpOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
18	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t.next(),  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t.next(),  stopAtNonOption);	  Option    opt    =    options.helpOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
19	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  stopAtNonOption,  arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  stopAtNonOption,  arguments);	  Option    opt    =    options.helpOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
20	[BUG]  [BUGGY]  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  option  =(Option)it.next();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	option  =(Option)it.next();	  Options    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  ListIterator  it  =  options.requires().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.requires().iterator();	  ListIterator    it    =    options.getRequires().iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  ListIterator  it  =  options.getAllRequires().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getAllRequires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getAllRequires().iterator();	  ListIterator    it    =    options.getRequires().iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  Option  <  Option>  it  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  <  Option>  it  =  options.getRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  <  Option>  it  =  options.getRequiredOptions();	  Option    <    Option>    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  Option  <  Option>  it  =  option.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  <  Option>  it  =  option.getRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  <  Option>  it  =  option.getRequiredOptions().iterator();	  Option    <    Option>    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  Option  <  Option>  it  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  <  Option>  it  =  options.helpOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  <  Option>  it  =  options.helpOptions().iterator();	  Option    <    Option>    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  ListIterator  it  =  options.getAllOps().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getAllOps().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getAllOps().iterator();	  ListIterator    it    =    options.getAllOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
28	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t,  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t,  str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
29	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t,  stopAtNonOption);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
30	[BUG]  [BUGGY]  Option  opt  =  options.getOptions(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOptions(t);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOptions(t);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroup(str);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(t,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroup(t,  str);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(it.next());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroup(it.next());	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups(t);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroups(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroups(t);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
35	[BUG]  [BUGGY]  Option[]  options  =  optionOptions.opts();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  optionOptions.opts();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  options  =  optionOptions.opts();	  Option[]    options    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  arguments);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  argument);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  argument);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  argument);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.requiredOptions();	  Option[]    requiredOptions    =    options.helpRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
40	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.helpRequiredOptions(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.helpRequiredOptions(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.helpRequiredOptions(t);	  Option[]    requiredOptions    =    options.helpRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
41	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.findRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.findRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.findRequiredOptions();	  Iterator    <    Option>    it    =    options.findRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
42	[BUG]  [BUGGY]  Option[]  options  =  options.addOptions(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  options.addOptions(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  options  =  options.addOptions(t);	  Option[]    options    =    options.addOptions();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
43	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOption(str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOption(str);	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
44	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOption(t,  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOption(t,  str);	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
45	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOptions(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOptions(t);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOptions(t);	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
46	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOption(t,  arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOption(t,  arguments);	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.options().iterator();	  Iterator    <    Option>    it    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.getOptionValues();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionValues();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionValues();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroups();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroups();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
50	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  arguments,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  arguments,  stopAtNonOption);	  Option    opt    =    options.getOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  arguments,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  arguments,  blockAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  arguments,  blockAtNonOption);	  Option    opt    =    options.getOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  arguments[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  arguments[0]);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  arguments[0]);	  Option    opt    =    options.getOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(str.next(),  it.next());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(str.next(),  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(str.next(),  it.next());	  Option    opt    =    options.helpOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
54	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(str.next(),  it.hasNext());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(str.next(),  it.hasNext());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(str.next(),  it.hasNext());	  Option    opt    =    options.helpOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
55	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(str.next(),  it);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(str.next(),  it);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(str.next(),  it);	  Option    opt    =    options.helpOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
56	[BUG]  [BUGGY]  Option  opt  =  options.addOption(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.addOption(str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.addOption(str);	  Option    opt    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  Option  opt  =  options.addOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.addOption(t,  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.addOption(t,  str);	  Option    opt    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  Option  opt  =  options.addOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.addOption(t,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.addOption(t,  stopAtNonOption);	  Option    opt    =    options.addOption(t);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  blockAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  blockAtNonOption);	  Option    opt    =    options.getOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
60	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  option);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  option);	  Option    opt    =    options.getOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
61	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  stopAtNonOption,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  stopAtNonOption,  requiredOptions);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  stopAtNonOption,  requiredOptions);	  Option    opt    =    options.getOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
62	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  stopAtNonOption,  arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  stopAtNonOption,  arguments);	  Option    opt    =    options.getOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
63	[BUG]  [BUGGY]  ListIterator  it  =  options.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getAllRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getAllRequiredOptions();	  ListIterator    it    =    options.getAllRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  Option[]  neededOptions  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  neededOptions  =  options.getRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  neededOptions  =  options.getRequiredOptions();	  Option[]    requiredOptions    =    option.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
65	[BUG]  [BUGGY]  Option[]  requiredOptions  =  option.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  option.getAllRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  option.getAllRequiredOptions();	  Option[]    requiredOptions    =    option.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
66	[BUG]  [BUGGY]  Option  opt  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOptionGroup(t);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOptionGroup(t);	  Option    opt    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
67	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequirementOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getRequirementOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getRequirementOptions().iterator();	  ListIterator    it    =    options.getDependencyOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
68	[BUG]  [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  it  =  options.getRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  it  =  options.getRequiredOptions().iterator();	  ListIterator    it    =    option.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
69	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.helpOptions().iterator();	  ListIterator    it    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
70	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getAllRequiredOptions(t);	  Option[]    requiredOptions    =    options.getAllRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptions().iterator();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(str);	  Option    opt    =    options.helpOption(t);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
73	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t,  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t,  str);	  Option    opt    =    options.helpOption(t);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
74	[BUG]  [BUGGY]  Option  opt  =  options.getOption(block.next(),  it.next());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(block.next(),  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(block.next(),  it.next());	  Option    opt    =    options.getOption(it.next(),    block);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
75	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  block,  arguments);	  Option    opt    =    options.getOption(it.next(),    block);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
76	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  null);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  block,  null);	  Option    opt    =    options.getOption(it.next(),    block);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
77	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  argumentList);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  argumentList);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  block,  argumentList);	  Option    opt    =    options.getOption(it.next(),    block);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
78	[BUG]  [BUGGY]  ListIterator  it  =  options.getRawList().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getRawList().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getRawList().iterator();	  ListIterator    it    =    options.getRawOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t.next(),  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t.next(),  str);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t.next(),  str);	  Option    opt    =    options.getOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str.next(),  it.next());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(str.next(),  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(str.next(),  it.next());	  Option    opt    =    options.getOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t.next(),  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t.next(),  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t.next(),  it.next());	  Option    opt    =    options.getOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  it.next());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(str,  it.next());	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
83	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  it.next(),  str);	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  it.next(),  arguments);	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(str);	  Option[]    requiredOptions    =    options.getRequiredOptions(t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
86	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(t,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(t,  str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(t,  str);	  Option[]    requiredOptions    =    options.getRequiredOptions(t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
87	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(t,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(t,  arguments);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(t,  arguments);	  Option[]    requiredOptions    =    options.getRequiredOptions(t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
88	[BUG]  [BUGGY]  Option  <  Option>  it  =  options.getAllRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  <  Option>  it  =  options.getAllRequiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  <  Option>  it  =  options.getAllRequiredOptions().iterator();	  Iterator    <    Option>    it    =    options.getAllRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
89	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getOptions();	  Option[]    requiredOptions    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
90	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.options();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.options();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.options();	  Option[]    requiredOptions    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
91	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.opts();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.opts();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.opts();	  Option[]    requiredOptions    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  this);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  this);	  Option    opt    =    options.getOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getRawValues().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.getRawValues().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.getRawValues().iterator();	  Iterator    <    Option>    it    =    options.getRawOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
94	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOptions();  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOptions();	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
95	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOptionGroup(t);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOptionGroup(t);	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
96	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t.next(),  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t.next(),  stopAtNonOption);	  Option    opt    =    options.getOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it.next(),  stopAtNonOption);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  it.next(),  stopAtNonOption);	  Option    option    =    options.getOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.helpOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.helpOptions();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
99	[BUG]  [BUGGY]  Option[]  requiredOptions  =  option.getRequiredOptions(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  option.getRequiredOptions(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  option.getRequiredOptions(t);	  Option[]    requiredOptions    =    option.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
100	[BUG]  [BUGGY]  Option  <  Option>  it  =  options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  <  Option>  it  =  options.requiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  <  Option>  it  =  options.requiredOptions().iterator();	  Option    <    Option>    it    =    options.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
101	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  it);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  it);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  it);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  Option  option  =(Option)it.getAttribute();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getAttribute();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =(Option)it.getAttribute();	  Option    option    =(Option)it.getNext();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
103	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.requiresOptions().iterator();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
104	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getRequiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.getRequiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.getRequiresOptions().iterator();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
105	[BUG]  [BUGGY]  ListIterator  it  =  options.getRawValues().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getRawValues().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getRawValues().iterator();	  ListIterator    it    =    options.getRawOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
106	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().getOption(str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions().getOption(str);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.helpOptions().getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOptions(t,  it.next());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions(t,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptions(t,  it.next());	  Option    option    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
108	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t,  it.next(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t,  it.next(),  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t,  it.next(),  stopAtNonOption);	  Option    opt    =    options.helpOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(it);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(it);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroup(it);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  Option  opt  =  options.getOptionGroup(it.next());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOptionGroup(it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOptionGroup(it.next());	  Option    opt    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
111	[BUG]  [BUGGY]  ListIterator  it  =  option.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  option.requiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  option.requiresOptions().iterator();	  ListIterator    it    =    options.requiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  ListIterator  it  =  options.optionsOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.optionsOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.optionsOptions().iterator();	  ListIterator    it    =    options.requiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.findRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.findRequiredOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.findRequiredOptions();	  Option[]    requiredOptions    =    options.helpRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
114	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequirements();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequirements();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getRequirements();	  Option[]    requiredOptions    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
115	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequirementOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequirementOptions();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getRequirementOptions();	  Option[]    requiredOptions    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
116	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.addOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.addOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.addOptions().iterator();	  Iterator    <    Option>    it    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
117	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t.next(),  it);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t.next(),  it);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t.next(),  it);	  Option    opt    =    options.helpOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
118	[BUG]  [BUGGY]  Option  option  =(Option)it.getAttributeValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getAttributeValue();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =(Option)it.getAttributeValue();	  Option    option    =(Option)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
119	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t.next(),  it);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t.next(),  it);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t.next(),  it);	  Option    opt    =    options.getOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
120	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  block,  stopAtNonOption);	  Option    opt    =    options.getOption(it.next(),    block);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
121	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.requiredOptions.iterator();	  ListIterator    it    =    option.getRequiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
122	[BUG]  [BUGGY]  ListIterator  it  =  option.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  option.requiredOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  option.requiredOptions().iterator();	  ListIterator    it    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
123	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.addOptions().iterator();	  ListIterator    it    =    options.requiredOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
124	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(t.next(),  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(t.next(),  arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(t.next(),  arguments);	  Option    opt    =    options.helpOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
125	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  block);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  block);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  block);	  Option    opt    =    options.helpOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
126	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  this.stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  this.stopAtNonOption);	  Option    opt    =    options.getOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
127	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  str,  null);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOption(t,  str,  null);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
128	[BUG]  [BUGGY]  Options  option  =(Option)it.getValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Options  option  =(Option)it.getValue();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Options  option  =(Option)it.getValue();	  Options    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
129	[BUG]  [BUGGY]  ListIterator  it  =  option.getAllOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  option.getAllOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  option.getAllOptions().iterator();	  ListIterator    it    =    options.getAllOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
130	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  argument);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  argument);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  argument);	  Option    opt    =    options.helpOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
131	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  this.arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  this.arguments);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  this.arguments);	  Option    opt    =    options.helpOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
132	[BUG]  [BUGGY]  Option  option  =(Option)it.getAssignedValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getAssignedValue();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =(Option)it.getAssignedValue();	  Option    option    =(Option)it.getNext();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
133	[BUG]  [BUGGY]  ListIterator  it  =  option.getDependencyOptions().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  option.getDependencyOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  option.getDependencyOptions().iterator();	  ListIterator    it    =    options.getDependencyOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
134	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(t,  it.next());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(t,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(t,  it.next());	  Option[]    requiredOptions    =    options.getRequiredOptions(t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
135	[BUG]  [BUGGY]  OptionOption  opt  =  options.getOption(t,  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  OptionOption  opt  =  options.getOption(t,  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	OptionOption  opt  =  options.getOption(t,  it.next());	  OptionOption    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
136	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  block,  option);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  block,  option);	  Option    opt    =    options.getOption(it.next(),    block);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
137	[BUG]  [BUGGY]  ListIterator  it  =  options.getRawParameters().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getRawParameters().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getRawParameters().iterator();	  ListIterator    it    =    options.getRawOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().getOption(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.helpOptions().getOption(t);  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.helpOptions().getOption(t);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
139	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  argument);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  argument);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  argument);	  Option    opt    =    options.getOption(it.next(),    str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
140	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptionList().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.getRequiredOptionList().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.getRequiredOptionList().iterator();	  ListIterator    it    =    options.getOptionList().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
141	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(t,  it.next());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(t,  it.next());  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  option  =  options.getOptionGroup(t,  it.next());	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
142	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(it.next(),  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.helpOption(it.next(),  this.stopAtNonOption);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.helpOption(it.next(),  this.stopAtNonOption);	  Option    opt    =    options.helpOption(it.next(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
143	[BUG]  [BUGGY]  ListIterator  it  =  options.options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  options.options.requiresOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  options.options.requiresOptions().iterator();	  ListIterator    it    =    options.requiresOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
144	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  it.next());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(t,  it.next());  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(t,  it.next());	  Option    opt    =    options.helpOption(t,    it.next());    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
145	[BUG]  [BUGGY]  ListIterator  it  =  option.getRequires().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  ListIterator  it  =  option.getRequires().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	ListIterator  it  =  option.getRequires().iterator();	  ListIterator    it    =    options.getRequires().iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
146	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
147	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  option.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Iterator  <  Option>  it  =  option.getOptions().iterator();  [BUGGY]      Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Iterator  <  Option>  it  =  option.getOptions().iterator();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
148	[BUG]  [BUGGY]  Option  opt  =  options.getOption(it.next(),  this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {      [BUGGY]  Option  opt  =  options.getOption(it.next(),  this.options);  [BUGGY]      opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	149	149	1	replace	Option  opt  =  options.getOption(it.next(),  this.options);	  Option    opt    =    options.getOption(it.next(),    arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
