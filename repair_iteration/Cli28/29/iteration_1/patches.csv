bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =  cmd.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  cmd.getOptionGroup(opt);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  cmd.getOptionGroup(opt);	      Option    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOptionGroup(opt,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOptionGroup(opt,  stopAtNonOption);	      Option    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOptionGroup(stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOptionGroup(stopAtNonOption);	      Option    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOptionGroup(arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOptionGroup(arguments);	      Option    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  getOptions(),  opts,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  getOptions(),  opts,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(arguments,  getOptions(),  opts,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(parameters,  getOptions(),  opts,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(parameters,  getOptions(),  opts,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(parameters,  getOptions(),  opts,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  true));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  true));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  true));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  false));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  false));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(arguments,  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  false));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  cmd.getOptionGroup();	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  option.getGroup();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  option.getGroup();	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptionGroup(arguments);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptionGroup(true);	      OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  Option  group  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  cmd.getOptions();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  cmd.getOptions();	      Option    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOption( "group ");  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOption( "group ");	      Option    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  Options  opts  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Options  opts  =  options.getOptions();  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Options  opts  =  options.getOptions();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  cmd.getOptions();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  cmd.getOptions();	      OptionGroup    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption);	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  this));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  this));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  this));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments));	  List    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  argument));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  argument));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  argument));	  List    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  this.stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  this.stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  this.stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  options));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  options));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  options));	  List    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  cmd.getOptionGroup(options);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  opts,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(arguments,  opts,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(arguments,  opts,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
34	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  eatTheRest));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  eatTheRest));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  eatTheRest));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  Option  group  =  cmd.getOptionGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  cmd.getOptionGroup();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  cmd.getOptionGroup();	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  Option  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getGroup();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getGroup();	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOptionGroup(true);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOptionGroup(true);	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOptionGroup(options);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOptionGroup(options);	      Option    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  null));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  null));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  null));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  eatTheRest));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  eatTheRest));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  eatTheRest));	  List    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  List  tokenList  =  options.asList(flatten(options,  getOptions(),  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  options.asList(flatten(options,  getOptions(),  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  options.asList(flatten(options,  getOptions(),  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  opt.getOptionGroup();  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  opt.getOptionGroup();	      OptionGroup    group    =    option.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  Option  group  =  options.getOption(arguments);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOption(arguments);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOption(arguments);	      Option    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  options.asList(flatten(opts,  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  options,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  options,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  Option  tokenList  =  options.getOptionList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  tokenList  =  options.getOptionList();  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  tokenList  =  options.getOptionList();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptionGroup(stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  false));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  false));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  options.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  options.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(opts,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  OptionGroup  group  =  options.getOptions(options);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	OptionGroup  group  =  options.getOptions(options);	      OptionGroup    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  stopAtNonOption));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  null));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(options,  arguments,  null));	  List    tokenList    =    Arrays.asList(flatten(opts,    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  arguments,  false));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(opts,  arguments,  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  false));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	List  tokenList  =  Arrays.asList(flatten(cmd,  getOptions(),  arguments,  false));	  List    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }    [BUGGY]  Option  group  =  options.getOptionGroup(cmd);  [BUGGY]    List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	172	172	1	replace	Option  group  =  options.getOptionGroup(cmd);	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
