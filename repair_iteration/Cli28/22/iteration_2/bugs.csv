bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  opt.addValue(arguments[t],  str);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[t],  str);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[t],  str);	  opt.addValue(arguments[t]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  option.addValue(arguments[t]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  option.addValue(arguments[t]);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	option.addValue(arguments[t]);	  opt.addValue(arguments[t]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  opt.addValue(arguments[t],  t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[t],  t);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[t],  t);	  opt.addValue(arguments[t]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  Option  option  =  opt.helpOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =  opt.helpOptions();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =  opt.helpOptions();	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.helpOption(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =  options.helpOption(opt);  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =  options.helpOption(opt);	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.opts();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =  options.opts();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =  options.opts();	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  option.addValue(arguments[i]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  option.addValue(arguments[i]);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	option.addValue(arguments[i]);	  opt.addValue(arguments[i]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  opt.addValue(arguments[i],  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[i],  str);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[i],  str);	  opt.addValue(arguments[i]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  Options[]  options  =(Option[])opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Options[]  options  =(Option[])opt.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Options[]  options  =(Option[])opt.clone();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.cloneTree();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =(Option[])opt.cloneTree();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =(Option[])opt.cloneTree();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  Option[]  options  =(Option[])option.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =(Option[])option.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =(Option[])option.clone();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  Option  group  =  opt.helpGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  group  =  opt.helpGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  group  =  opt.helpGroup();	      Option    group    =    options.helpGroup();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  Option  group  =  options.helpGroup(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  group  =  options.helpGroup(opt);  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  group  =  options.helpGroup(opt);	      Option    group    =    options.helpGroup();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  Option  group  =  option.helpGroup();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  group  =  option.helpGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  group  =  option.helpGroup();	      Option    group    =    options.helpGroup();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  opt.addValue(t);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(t);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(t);	  opt.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  option.addValue(t);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  option.addValue(t);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	option.addValue(t);	  opt.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  option.addValue(str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  option.addValue(str);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	option.addValue(str);	  opt.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAssignmentGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAssignmentGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)opt.getAssignmentGroup();	      OptionGroup    group    =(OptionGroup)opt.getValueGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getKey();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getKey();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)opt.getKey();	      OptionGroup    group    =(OptionGroup)opt.getValueGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)opt.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)opt.clone();	      Option    option    =(Option)opt.getIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)opt.getOption();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)opt.getOption();	      Option    option    =(Option)opt.getIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =  options.getGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =  options.getGroup();	      OptionGroup    group    =    opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getGroups();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =  opt.getGroups();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =  opt.getGroups();	      OptionGroup    group    =    opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =  option.getGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =  option.getGroup();	      OptionGroup    group    =    opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Options  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Options  option  =(Option)it.next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Options  option  =(Option)it.next();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  option  =(Option)it.next();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  option  =(Option)it.next();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  option  =(Option)it.next();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Options  option  =(Option)it.next();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Options  option  =(Option)it.next();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =  opt.getOptions();  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Options  option  =(Option)it.next();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)opt.getOptionValue();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)opt.getOptionValue();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =(Option[])opt.getOptions();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =(Option[])opt.getOptions();	      Option[]    options    =(Option[])opt.getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  ]);  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  ]);	      Option[]    options    =(Option[])opt.getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  option.addValue(arguments[0]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  option.addValue(arguments[0]);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	option.addValue(arguments[0]);	  opt.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  opt.addValue(arguments[0],  str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[0],  str);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[0],  str);	  opt.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  options.addValue(arguments[0]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  options.addValue(arguments[0]);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	options.addValue(arguments[0]);	  opt.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  opt  =(OptionGroup)opt.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  opt  =(OptionGroup)opt.clone();	      OptionGroup    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  group  =(OptionGroup)opt.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  group  =(OptionGroup)opt.clone();	      OptionGroup    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)option.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)option.clone();	      OptionGroup    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitSecond();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitSecond();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)opt.getImplicitSecond();	      OptionGroup    group    =(OptionGroup)opt.getSecond();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getSecond();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  group  =(OptionGroup)opt.getSecond();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  group  =(OptionGroup)opt.getSecond();	      OptionGroup    group    =(OptionGroup)opt.getSecond();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)opt.getGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  opt  =(OptionGroup)opt.getGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  opt  =(OptionGroup)opt.getGroup();	      OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitStructure();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitStructure();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)opt.getImplicitStructure();	      OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  opt.addValue(arguments[1]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[1]);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[1]);	  opt.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[0],  stopAtNonOption);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[0],  stopAtNonOption);	  opt.addValue(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  options.add(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  options.add(opt);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	options.add(opt);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  options.addOption(opt);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	options.addOption(opt);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =  opt.getOption(t);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =  opt.getOption(t);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  Option[]  options  =  opt.cloneOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =  opt.cloneOptions();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =  opt.cloneOptions();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  opt.addValue(str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(str,  stopAtNonOption);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(str,  stopAtNonOption);	  opt.addValue(str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  Option  group  =  options.helpGroups();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  group  =  options.helpGroups();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  group  =  options.helpGroups();	      Option    group    =    options.helpGroup();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)opt.getOptionGroup();	      Option    option    =(Option)opt.getIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  opt.addValue(arguments[t],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[t],  stopAtNonOption);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[t],  stopAtNonOption);	  opt.addValue(arguments[t]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitReturn();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)opt.getImplicitReturn();	      OptionGroup    group    =(OptionGroup)opt.getValueGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.next();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =(OptionGroup)opt.next();	      OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  opt.addValue(arguments[i],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  opt.addValue(arguments[i],  stopAtNonOption);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	opt.addValue(arguments[i],  stopAtNonOption);	  opt.addValue(arguments[i]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  Option  option  =(Option)opt.get();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)opt.get();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)opt.get();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.helpOptions(opt);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =  options.helpOptions(opt);  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =  options.helpOptions(opt);	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =  options.stopAtNonOption();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =  options.stopAtNonOption();	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option  option  =(Option)opt.getKey();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option  option  =(Option)opt.getKey();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  continue;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  continue;  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  cmd.append(opt.getName());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  cmd.append(opt.getName());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  cmd.append(opt.getName());  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  cmd.append(opt.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  cmd.append(opt.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  if(!stopAtNonOption)  {  cmd.append(opt.getKey());  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  OptionsGroup  group  =(OptionGroup)opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionsGroup  group  =(OptionGroup)opt.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionsGroup  group  =(OptionGroup)opt.clone();	      OptionGroup    group    =(OptionGroup)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  Option[]  options  =  opt.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  Option[]  options  =  opt.clone();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	Option[]  options  =  opt.clone();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  OptionGroup  group  =  opt.group();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();    [BUGGY]  OptionGroup  group  =  opt.group();  [BUGGY]    opt.clearValues();  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	150	150	1	replace	OptionGroup  group  =  opt.group();	      OptionGroup    group    =    opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
