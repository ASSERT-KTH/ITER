projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.clearValues();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.getValues();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.getValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.getIterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=opt.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getValueGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getSecond();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[t]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.helpOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.opts();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[i]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Options[]options=(Option[])opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.cloneTree();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=opt.helpGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroup(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=option.helpGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getAssignmentGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getKey();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.getOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=options.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=opt.getGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=option.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionsoption=(Option)it.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){option=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionsoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.getOptionValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.toArray(newOption[opt.size()]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)option.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getImplicitSecond();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getSecond();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opt.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getImplicitStructure();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[1]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.add(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.cloneOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.getOptionGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getImplicitReturn();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.get();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOptions(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.stopAtNonOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.getKey();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getName());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getKey());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionsGroupgroup=(OptionGroup)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=opt.group();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.stopAtNonOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.stopAtNonOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.stopAtNonOption()?opt.toString():null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[1]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[0],str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(opt,arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getStructure();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getImplicitStructure();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(str,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=opt.helpGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=option.helpGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroups(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str[i],arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],str.t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(opt,arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(opt.getValue());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(opt.options[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroup(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=opt.helpGroup(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroup(opt,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=options.getGroup(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=options.getGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.helpOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOption(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Options[]options=(Option[])option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Options[]options=(Option[])opt.cloneAll();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)option.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opt.getImplicitStructure();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)options.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.opts().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getImplicitSecond();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)option.getImplicitSecond();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)it.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=options.opts().toArray(newOption[options.size()]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionopt=(Option)it.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]opts=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option=(Option)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)options.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.group();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=options.group();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=option.group();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(Option)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.cloneTree();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.options();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.opts();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],stopAtNonOption,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(arguments[i],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],stopAtNonOption,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[i],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=opt.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(opt,arguments[i]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[i],str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.helpOptions(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOptions(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOptions(opt,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[0],str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str[0],arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)options.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opts.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(t,str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(t,str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str,arguments,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getKey();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addOption(opt,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addOption(opt,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.opts();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.opt(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.opt();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.cloneAll();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.clonePosition();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[t],str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){Optionsoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.opts().iterator();it.hasNext();){Optionsoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){Optionsoption=(Option)it.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.add(opt.toString());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.add(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.add(opt,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(Option)opt.helpGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str[t],arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.properties().iterator();it.hasNext();){if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.opts().iterator();it.hasNext();){if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150t.addValue(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.get(0);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],stopAtNonOption,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(arguments[0],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[0],stopAtNonOption,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getImplicitReturn();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.cloneAllOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.addOptions().iterator();it.hasNext();){Optionsoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(arguments[t],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[t],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.helpOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){option=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.opts().iterator();it.hasNext();){option=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.addOptions().iterator();it.hasNext();){option=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionsGroupopt=(OptionGroup)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.toArray();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)option.getValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.getOption(str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.getOption(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[t],t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(opt,arguments[t]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.toArray(newOption[opt.size()-1]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.toArray(newOption[opt.size()+1]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=option.getGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=opt.getGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getAssignmentGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opt.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOptions(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOptions(opt,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.add(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[i],str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.commandLines().iterator();it.hasNext();){if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.cloneTree();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.options().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getName());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getName());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150ListIteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getName());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(option.getName());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Options[]options=opt.cloneOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.helpGroup(opt,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.helpOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addOption(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(option,arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150ListIteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150ListIteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){continue
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150ListIteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(stopAtNonOption){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=opt.options().iterator();it.hasNext();){Optionoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.options().iterator();it.hasNext();){Optionoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.options().iterator();it.hasNext();){Optionoption=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],stopAtNonOption,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(option,arguments[i]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){Optionsoption=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){Optionsoption=(Option)opt.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionsoption=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opt.getImplicitReturn();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getAssignedValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.addOptions().iterator();it.hasNext();){Optionsoption=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.options().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getKey());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getKey());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150ListIteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(opt.getKey());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150for(Iteratorit=options.opts().iterator();it.hasNext();){Optionoption=(Option)it.next();if(!stopAtNonOption){cmd.append(option.getKey());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=opt.helpGroup(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(option,arguments[0]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[0],stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[0],stopAtNonOption,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionopt=(OptionGroup)opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.options().iterator();it.hasNext();){option=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){option=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.addOptions().iterator();it.hasNext();){option=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.requireAtNonOptions().iterator();it.hasNext();){option=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=option.helpGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.stopOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOption(opt,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.helpOption(opt,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=option.cloneOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getAssignmentGroup(0);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=opt.group(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.get();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=(Option[])opt.cloneArray();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.add(opt.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(str,blockAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=option.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){Optionsoption=(Option)opt.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[t+1]);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)option.get();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.getOption(opt.getName());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=options.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=option.getOptions();for(Iteratorit=options.helpOptions().iterator();it.hasNext();){if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=(OptionGroup)opt.getAssignedValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150option.addValue(arguments[i],t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.options();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupopt=(OptionGroup)opt.getAssignmentGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionsGroupgroup=(OptionGroup)option.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.cloneTree();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.allOptions().iterator();it.hasNext();){option=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Options[]options=opt.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=(Option)opt.clone():null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=opt.getOption(t,this);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150options.addValue(opt.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150opt.addValue(arguments[t],str,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=(OptionGroup)opt.getAssignedStructure();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optiongroup=opt.group();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Option[]options=opt.getOptions();for(Iteratorit=options.allOptions().iterator();it.hasNext();){Optionsoption=(Option)it.next();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.getOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150Optionoption=options.options().next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java150OptionGroupgroup=option.getGroup(t);
