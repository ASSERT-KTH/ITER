bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(!stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(!stopAtNonOption  &&  iterator.hasNext())  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  Iterator  it  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  opts.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  opts.values().iterator();	  Iterator    it    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  Iterator  it  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  this.arguments.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  this.arguments.iterator();	  Iterator    it    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  opts.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  opts.keySet().iterator();	  Iterator    <    Option>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  this.requiredOptions.iterator();	  Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  optionOptions.iterator();	  Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  optGroups.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  optGroups.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  optGroups.iterator();	  Iterator    <    Option>    iterator    =    optionGroups.iterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  opt.iterator();	  Iterator    <    String>    iterator    =    t.iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
9	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  this.requiredOptions.iterator();	  Iterator    <    String>    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
10	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  this.options.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  this.options.values().iterator();	  Iterator    iterator    =    this.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
11	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(stopAtNonOption  ||  it.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(stopAtNonOption  ||  it.hasNext())  {	  else    if(stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(!stopAtNonOption  &&  it.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(!stopAtNonOption  &&  it.hasNext())  {	  else    if(stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  Iterator  it  =  t.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  t.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  t.iterator();	  Iterator    it    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  Iterator  it  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  opts.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  opts.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  Iterator  it  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  optionList.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  optionList.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
16	[BUG]  [BUGGY]  Iterator  iterator  =  this.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  this.opts.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  this.opts.keySet().iterator();	  Iterator    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  opts.values().iterator();	  Iterator    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  if(iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(iterator.hasNext())  {	  if(stopAtNonOption    ||    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  opts.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  opts.values().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
20	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	  Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
21	[BUG]  [BUGGY]  Iterator  iterator  =  optionList.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  optionList.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  optionList.iterator();	  Iterator    iterator    =    optionList.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  Iterator  it  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  this.requiredOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  this.requiredOptions.iterator();	  Iterator    it    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  Iterator  it  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  optionOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  optionOptions.iterator();	  Iterator    it    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  Iterator  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  t.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  t.iterator();	  Iterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  t.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  t.iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iterator.hasNext()  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(stopAtNonOption  &&  iterator.hasNext()  ||  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(stopAtNonOption  &&  iterator.hasNext()  ||  iterator.hasNext())  {	  if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  Iterator  iterator  =  options.opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  options.opts.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  options.opts.keySet().iterator();	  Iterator    iterator    =    options.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
28	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  options.options.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  options.options.values().iterator();	  Iterator    iterator    =    options.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
29	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(stopAtNonOption  ||  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(stopAtNonOption  ||  iterator.hasNext())  {	  else    if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  iterator.hasNext()  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(stopAtNonOption  &&  iterator.hasNext()  ||  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(stopAtNonOption  &&  iterator.hasNext()  ||  iterator.hasNext())  {	  else    if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  iterator.next())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(stopAtNonOption  &&  iterator.next())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(stopAtNonOption  &&  iterator.next())  {	  else    if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  else  if(haltAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(haltAtNonOption)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(haltAtNonOption)  {	  else    if(eatTheRest)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
33	[BUG]  [BUGGY]  if(stopAtNonOption  ||!eatTheRest)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(stopAtNonOption  ||!eatTheRest)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(stopAtNonOption  ||!eatTheRest)  {	  if(!eatTheRest)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
34	[BUG]  [BUGGY]  if(stopAtNonOption  &&  group  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(stopAtNonOption  &&  group  ==  null)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(stopAtNonOption  &&  group  ==  null)  {	  if(stopAtNonOption    ||    group    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
35	[BUG]  [BUGGY]  if(group  ||  stopAtNonOption  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(group  ||  stopAtNonOption  ==  null)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(group  ||  stopAtNonOption  ==  null)  {	  if(stopAtNonOption    ||    group    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
36	[BUG]  [BUGGY]  if(stopAtNonOption  ||  group!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(stopAtNonOption  ||  group!=  null)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(stopAtNonOption  ||  group!=  null)  {	  if(stopAtNonOption    ||    group    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
37	[BUG]  [BUGGY]  Iterator  it  =  this.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  this.neededOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  this.neededOptions.iterator();	  Iterator    it    =    neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
38	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  optionGroup.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  optionGroup.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  optionGroup.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  this.requiredOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  this.requiredOptions.iterator();	  Iterator    <    Option>    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
41	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  opt.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  opt.iterator();	  Iterator    <    Option>    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
42	[BUG]  [BUGGY]  else  if(eatTheRest  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(eatTheRest  &&  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(eatTheRest  &&  iterator.hasNext())  {	  else    if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Iterator  it  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  options.options.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  options.options.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
44	[BUG]  [BUGGY]  if(eatTheRest  ||  group  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(eatTheRest  ||  group  ==  null)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(eatTheRest  ||  group  ==  null)  {	  if(stopAtNonOption    ||    group    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
45	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  opt.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  opt.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  this.opts.values().iterator();	  Iterator    <    Option>    iterator    =    this.opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  Iterator  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  opt.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  opt.iterator();	  Iterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  else  if(eatTheRest  &&  it.hasNext())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(eatTheRest  &&  it.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(eatTheRest  &&  it.hasNext())  {	  else    if(stopAtNonOption    &&    it.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  requiredOptions.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  requiredOptions.keySet().iterator();	  Iterator    iterator    =    opts.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  options.options().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  options.options().iterator();	  Iterator    it    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  Iterator  it  =  options.opts.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  options.opts.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  options.opts.iterator();	  Iterator    it    =    this.opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
52	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  options.options.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  options.options.iterator();	  Iterator    iterator    =    options.options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  this.options.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  this.options.values().iterator();	  Iterator    <    Option>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  else  if(!eatTheRest)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(!eatTheRest)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(!eatTheRest)  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  group  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(stopAtNonOption  ||  group  ==  null)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(stopAtNonOption  ||  group  ==  null)  {	  else    if(!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(stopAtNonOption  ||  stopAtNonOption)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(stopAtNonOption  ||  stopAtNonOption)  {	  else    if(eatTheRest)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.opts().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  options.opts().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  options.opts().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
58	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  opt.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  opt.keySet().iterator();	  Iterator    <    Option>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  if(eatTheRest  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(eatTheRest  &&  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(eatTheRest  &&  iterator.hasNext())  {	  if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  Iterator  it  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  this.options.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  this.options.values().iterator();	  Iterator    it    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  Iterator  it  =  options.neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  options.neededOptions.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  options.neededOptions.iterator();	  Iterator    it    =    neededOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
62	[BUG]  [BUGGY]  Iterator  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  options.options().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  options.options().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  if(eatTheRest  ||  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(eatTheRest  ||  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(eatTheRest  ||  iterator.hasNext())  {	  if(stopAtNonOption    ||    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  this.options.values().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  this.options.values().iterator();	  Iterator    <    String>    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
65	[BUG]  [BUGGY]  Iterator  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  opt.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  opt.keySet().iterator();	  Iterator    iterator    =    optionList.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
66	[BUG]  [BUGGY]  else  if(eatTheRest  ||  stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  else  if(eatTheRest  ||  stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	else  if(eatTheRest  ||  stopAtNonOption  &&  iterator.hasNext())  {	  else    if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(eatTheRest  ||  stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(eatTheRest  ||  stopAtNonOption  &&  iterator.hasNext())  {	  if(stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.optionGroups.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  this.optionGroups.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  this.optionGroups.iterator();	  Iterator    <    Option>    iterator    =    optionGroups.iterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
69	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  Option>  iterator  =  options.options().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  Option>  iterator  =  options.options().iterator();	  Iterator    <    Option>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
70	[BUG]  [BUGGY]  Iterator  it  =  optionGroups.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  it  =  optionGroups.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  it  =  optionGroups.keySet().iterator();	  Iterator    it    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  arguments.iterator();	  Iterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  iterator.clear();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  iterator.clear();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	iterator.clear();	  iterator.remove();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.group.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  this.group.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  this.group.iterator();	  Iterator    <    String>    iterator    =    t.iterator();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
74	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  <  String>  iterator  =  this.options.keySet().iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  <  String>  iterator  =  this.options.keySet().iterator();	  Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
75	[BUG]  [BUGGY]  if(!eatTheRest  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(!eatTheRest  &&  iterator.hasNext())  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(!eatTheRest  &&  iterator.hasNext())  {	  if(!stopAtNonOption    &&    iterator.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  if(this.stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  if(this.stopAtNonOption)  {  [BUGGY]      {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	if(this.stopAtNonOption)  {	  if(!eatTheRest)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
77	[BUG]  [BUGGY]  Iterator  iterator  =  options.opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  cmd.addArg(t);  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  }        [BUGGY]  Iterator  iterator  =  options.opts.iterator();  [BUGGY]      if  (eatTheRest)    {  {  while  (iterator.hasNext())  {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	226	227	1	replace	Iterator  iterator  =  options.opts.iterator();	  Iterator    iterator    =    this.opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
