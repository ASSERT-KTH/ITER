bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    requiredOptions.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    requiredOptions.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList  <  String>(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  LinkedList  <  String>(options.getRequiredOptions());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  LinkedList  <  String>(options.getRequiredOptions());	  this.requiredOptions    =    new    ArrayList    <    String>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  String>(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList  <  String>(options.getRequiredOptions(),  options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList  <  String>(options.getRequiredOptions(),  options);	  this.requiredOptions    =    new    ArrayList    <    String>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  String>(options.getAllRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList  <  String>(options.getAllRequiredOptions());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList  <  String>(options.getAllRequiredOptions());	  this.requiredOptions    =    new    ArrayList    <    String>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getQualifiedOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getQualifiedOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  LinkedList(options.getQualifiedOptions());	      this.requiredOptions    =    new    ArrayList(options.getQualifiedOptions());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  cmd.setOptions(options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  cmd.setOptions(options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	cmd.setOptions(options);	      if(options!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  this.cmd  =  cmd.getCmd();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.cmd  =  cmd.getCmd();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.cmd  =  cmd.getCmd();	      this.cmd    =    cmd.getParser();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  this.cmd  =  cmd.getCmdLine();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.cmd  =  cmd.getCmdLine();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.cmd  =  cmd.getCmdLine();	      this.cmd    =    cmd.getParser();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  this.cmd  =  cmd.getParser(),  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.cmd  =  cmd.getParser(),  options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.cmd  =  cmd.getParser(),  options);	      this.cmd    =    cmd.getParser();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  options.getRequiredOptions(options);	      this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getAllRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getAllRequiredOptions(),  options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList(options.getAllRequiredOptions(),  options);	  this.requiredOptions    =    new    ArrayList(options.getAllRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getAllRequiredOptions());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getAllRequiredOptions());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  LinkedList(options.getAllRequiredOptions());	  this.requiredOptions    =    new    ArrayList(options.getAllRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  This.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  This.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	This.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  this.requiredOptions    =    new    ArrayList(options.getRequiredOptions()    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  this.requiredOptions.clear();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions.clear();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions.clear();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  this.requiredOptions.add(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions.add(options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions.add(options);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList  <  Option>(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  LinkedList  <  Option>(options.getRequiredOptions());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  LinkedList  <  Option>(options.getRequiredOptions());	  this.requiredOptions    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getRequiredOptions(),  options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList  <  Option>(options.getRequiredOptions(),  options);	  this.requiredOptions    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getAllRequiredOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getAllRequiredOptions());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList  <  Option>(options.getAllRequiredOptions());	  this.requiredOptions    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  this.options  =  options.getOptions(true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.options  =  options.getOptions(true);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.options  =  options.getOptions(true);	      this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  this.options  =  options.getOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.options  =  options.getOptions(this.commandLine);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.options  =  options.getOptions(this.commandLine);	      this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    cmd.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    cmd.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
24	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions(),  options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  LinkedList(options.getRequiredOptions(),  options);	  this.requiredOptions    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList(options.size()  -  1);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList(options.size()  -  1);	  this.requiredOptions    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.size()  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList(options.size()  +  1);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList(options.size()  +  1);	  this.requiredOptions    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.size()  -  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList(options.size()  -  2);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList(options.size()  -  2);	  this.requiredOptions    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addChangeListener(this);  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addChangeListener(this);  }	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addChangeListener(this);  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addChangeListener(this);  }	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  if(options!=  null)  {  cmd  =  new  CommandLine();  cmd.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  cmd  =  new  CommandLine();  cmd.setOptions(options);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  cmd  =  new  CommandLine();  cmd.setOptions(options);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  if(options!=  null)  {  cmd.addOption(options);  }  else  {  cmd.addOption(options);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  cmd.addOption(options);  }  else  {  cmd.addOption(options);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  cmd.addOption(options);  }  else  {  cmd.addOption(options);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  this.cmd  =  cmd.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.cmd  =  cmd.clone();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.cmd  =  cmd.clone();	      this.cmd    =    cmd.getParser();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  this.options  =  options.getOptions(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.options  =  options.getOptions(options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.options  =  options.getOptions(options);	      this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  this.options  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.options  =  options.getRequiredOptions();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.options  =  options.getRequiredOptions();	      this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getQualifiedOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getQualifiedOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList  <  Option>(options.getQualifiedOptions());	      this.requiredOptions    =    new    ArrayList(options.getQualifiedOptions());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.size());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.size());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList  <  Option>(options.size());	  this.requiredOptions    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
37	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(this.options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  options.getRequiredOptions(this.options);	      this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  else  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  else  {  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  else  {	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    requiredOptions.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  else  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  else  {  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  cmd.addAll(options.getRequiredOptions());  }  else  {	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    cmd.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
40	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(),  options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  options.getRequiredOptions(),  options);	      this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  this.cmd  =  cmd.getNext();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.cmd  =  cmd.getNext();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.cmd  =  cmd.getNext();	      this.cmd    =    cmd.getParser();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(null);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  this.requiredOptions  =  options;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  options;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  options;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList(options.size());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  LinkedList(options.size());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  LinkedList(options.size());	  this.requiredOptions    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  if(options.getQualifiedOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getQualifiedOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options.getQualifiedOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getQualifiedOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options.getQualifiedOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getQualifiedOptions());  }	      this.requiredOptions    =    new    ArrayList(options.getQualifiedOptions());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  if(options.getQualifiedOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getQualifiedOptions());  }  else  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options.getQualifiedOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getQualifiedOptions());  }  else  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options.getQualifiedOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getQualifiedOptions());  }  else  {  requiredOptions.addAll(options.getRequiredOptions());  }	      this.requiredOptions    =    new    ArrayList(options.getQualifiedOptions());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  this.options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.options  =  option.getOptions();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.options  =  option.getOptions();	      this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getAllRequiredOptions()  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getAllRequiredOptions()  +  1);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	this.requiredOptions  =  new  ArrayList(options.getAllRequiredOptions()  +  1);	  this.requiredOptions    =    new    ArrayList(options.getAllRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  else  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {  this.options  =  options;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  else  {  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	49	49	1	replace	if(options.getRequiredOptions()!=  null)  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  requiredOptions.addAll(options.getRequiredOptions());  }  else  {	      this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    requiredOptions.addAll(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
