projects/Cli28/src/java/org/apache/commons/cli/Parser.java48
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalCommandLinecmd:options.getCommandLines()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Collections.emptyList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options<null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options<null?null:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}else{cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}else{cmd.setOptions(null);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getOptions()+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Options.emptyList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getParser(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=this.options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?null:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options<null?null:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalCommandLinecmd:options.getCommandLines()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();if(requiredOptions!=null){cmd.setOptions(requiredOptions);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48options.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?null:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newArrayList(options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newArrayList(options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options>=null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){super.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){super.setOptions(options);}else{cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.size());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&this.requiredOptions.size()>0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);this.requiredOptions=options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){cmd.removeChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newLinkedList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Options.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newArrayList(options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCommandLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalCommandLinecmd:options.getRequiredOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.removeAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newArrayList(options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST||options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Set<Option>requiredOptions=Sets.newHashSet(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArguments();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null&&options.getRequiredOptions()!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&options.getRequiredOptions().size()>0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){this.requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){this.requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newArrayList(options.getOptions(),options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newLinkedList(options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null&&options.getRequiredOptions()==null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")&&options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionoption=options.getOption("required")||options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()!=1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList(options.getRequiredOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList(options.getRequiredOptions()+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOption[]requiredOptions=options.getRequiredOptions();if(requiredOptions!=null){cmd.setOptions(requiredOptions);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();if(requiredOptions!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getAllRequiredOptions();if(requiredOptions!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList<Option>(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getOptions()+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48options.setOptions(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){this.requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){super.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options.getOptions()!=null){super.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){this.requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")&&options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionoption=options.getOption("required")||options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&this.requiredOptions.size()==0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&this.requiredOptions.size()>1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArguments();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){this.requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(this.options,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options,this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){super.setOptions(options);this.requiredOptions=options;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&options.getRequiredOptions().size()==0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&options.getRequiredOptions().size()!=0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&options.getRequiredOptions().size()>1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options.clear();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options.add(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options.addAll(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:Options.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList(options.getOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAllRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:Collections.EMPTY_LIST+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:Collections.EMPTY_LIST+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getOptionParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:options.requiredOptions;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST||options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST||options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){requiredOptions.removeAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=this.commandLine.getParser(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getParser(this.commandLine,this.requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=this.commandLine.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?null:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions.addAll(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){this.requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){this.requiredOptions.addAll(options.getRowOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Option.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Options.EMPTY_LIST|Options.MULTIPLIER;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOption[]requiredOptions=options.getRequiredOptions();this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgument();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentParameters();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCommandLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAllOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48For(finalOptionoption:options.getOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newArrayList(options.getOptions(),options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newLinkedList(options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Super.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newLinkedList(options.getRequiredOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=this.options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newArrayList(options.getOptions(),options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Set<Option>requiredOptions=Sets.newHashSet(options,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalSet<Option>requiredOptions=Sets.newHashSet(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48List<Option>requiredOptions=Sets.newHashSet(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList<Option>();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions.add(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions.clear();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.emptyList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getAllOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalCommandLinecmd:options.getRequiredOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.setOptions(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}else{this.requiredOptions=newArrayList(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("options");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentCommandLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCommandLine(),this.requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getOptions(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getOptions(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAllRequiredOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAllOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:Options.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options.getRequiredOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options.getRequiredOptions(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentParser(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newArrayList(options.getOptions(),options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAssignedOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAssignedOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getAllOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("Required");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList(options.size());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.size()+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions(this.cmd);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getAllRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalCommandLinecmd:this.options.getCommandLines()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48For(finalCommandLinecmd:options.getCommandLines()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){this.requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST+2;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArgumentOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getAssignedOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionsoptions=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required",options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Options.EMPTY_ARRAY;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()>1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()!=1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST||options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getOwnerOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getAllOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentArgumentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48This.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentArguments();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArguments(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.removeAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newLinkedList(options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&this.requiredOptions.size()!=0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAllOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOptions(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48This.requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options.clearOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getParser(this.commandLine-1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList<Option>(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){this.requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&options.getRequiredOptions().size()>=0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getAllRequiredOptions();if(requiredOptions!=null){cmd.setOptions(requiredOptions);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null||options.getRequiredOptions()!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalCommandLinecmd:options.getCommandLines()){cmd.setChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.cloneTree());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentOption();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=Arrays.asList(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){cmd.setChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){cmd.removeChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){cmd.setChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getRequiredOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentArgumentLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentArgument();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){neededOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption:options.getOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48ArrayList<Option>requiredOptions=Sets.newHashSet(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.addOption(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.addOption(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options==null){super.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options?null:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options==null){super.setOptions(options);this.requiredOptions=options;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()>1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=this.options.getCurrentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){this.requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newTreeList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=option.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(this.options);this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArguments(options.getArguments());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArguments(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()>=1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options.getRequiredOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options.getRequiredOptions()!=null){super.setOptions(options);this.requiredOptions=options;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options.getRequiredOptions()==null){super.setOptions(options);this.requiredOptions=options;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Option.UNKNOWN;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentParser(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalCommandLinecmd:options.getParameters()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&this.requiredOptions.size()>=0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newLinkedList(options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Set<Option>requiredOptions=Sets.newHashSet();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required_options");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.cmd.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentLine(options.getArgumentLine());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentLine(),options.getArgumentLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options.isAll()){super.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getAllRequiredOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()>=1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions.add(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.setOption(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.setOption(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);this.requiredOptions=newLinkedList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST,options.getRequiredOptions()+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST,options.getOptions()+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getAllRequiredOptions();this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST,options.getRequiredOptions()+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST,options.getOptions()+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentSelection();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArgumentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentParser(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalfor(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions(options);
