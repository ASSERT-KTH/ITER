bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList();	  this.options    =    options    ==    null?    new    ArrayList(options.getOptions()):    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
2	[BUG]  [BUGGY]  this.options  =  options  ==  null?  new  LinkedList(options.getOptions()):  new  ArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  new  LinkedList(options.getOptions()):  new  ArrayList();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  new  LinkedList(options.getOptions()):  new  ArrayList();	  this.options    =    options    ==    null?    new    ArrayList(options.getOptions()):    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
3	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  new  ArrayList(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  new  ArrayList(options.getOptions());	  this.options    =    options    ==    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
4	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options.getOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options.getOptions();	  this.options    =    options    ==    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
5	[BUG]  [BUGGY]  if(options!=  null  &&  options.getRequiredOptions()  ==  null)  {  cmd.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null  &&  options.getRequiredOptions()  ==  null)  {  cmd.setOptions(options);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null  &&  options.getRequiredOptions()  ==  null)  {  cmd.setOptions(options);  }	  if(options!=    null    &&    options.getRequiredOptions()!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
6	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")&&  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")&&  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")&&  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
8	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()!=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()!=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()!=  1)  {  requiredOptions.addAll(options.getAssignedOptions());	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
9	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions(),  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  ArrayList(options.getRequiredOptions(),  options);	  this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions()  +  1);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  ArrayList(options.getRequiredOptions()  +  1);	  this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  final  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }	  Option[]    requiredOptions    =    options.getRequiredOptions();    if(requiredOptions!=    null)    {    cmd.setOptions(requiredOptions);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
12	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(options);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(options);  }	  Option[]    requiredOptions    =    options.getRequiredOptions();    if(requiredOptions!=    null)    {    cmd.setOptions(requiredOptions);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
13	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(options);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getAllRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(options);  }	  Option[]    requiredOptions    =    options.getRequiredOptions();    if(requiredOptions!=    null)    {    cmd.setOptions(requiredOptions);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
14	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>(options.getOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  LinkedList  <  Option>(options.getOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList  <  Option>(options.getOptions());	  this.options    =    new    ArrayList    <    Option>(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
15	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions(),  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions(),  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOptions(),  options);	  this.options    =    new    ArrayList    <    Option>(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
16	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions()  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions()  +  1);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOptions()  +  1);	  this.options    =    new    ArrayList    <    Option>(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
17	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  new  ArrayList(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  ArrayList(options);	  this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
18	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  new  ArrayList();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  ArrayList();	  this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
19	[BUG]  [BUGGY]  options.setOptions(this.options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  options.setOptions(this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	options.setOptions(this.options);	  options.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
20	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.add(option);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.add(option);  }	  for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
21	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }	  for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
22	[BUG]  [BUGGY]  if(options!=  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }	  super.setOptions(options);    this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
23	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options.getOptions()!=  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options.getOptions()!=  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }	  super.setOptions(options);    this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
24	[BUG]  [BUGGY]  final  Option  option  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getRequiredOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getRequiredOptions();	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
25	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.addAll(options.getAssignedOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
26	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")&&  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")&&  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")&&  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
28	[BUG]  [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()  ==  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()  ==  0;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  this.requiredOptions.size()  ==  0;	  super.setOptions(options)&&    this.requiredOptions.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
29	[BUG]  [BUGGY]  super.setOptions(options)  &&  this.requiredOptions.size()  >  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)  &&  this.requiredOptions.size()  >  1;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)  &&  this.requiredOptions.size()  >  1;	  super.setOptions(options)&&    this.requiredOptions.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getArguments();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArguments();	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
31	[BUG]  [BUGGY]  Options  cmd  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getOptions();	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
32	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCurrentOption();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentOption();	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
33	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.add(option);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.add(option);  }	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
34	[BUG]  [BUGGY]  super.setOptions(this.options,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(this.options,  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(this.options,  options);	  super.setOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
35	[BUG]  [BUGGY]  super.setOptions(options,  this.options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options,  this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options,  this.options);	  super.setOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
36	[BUG]  [BUGGY]  if(options!=  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }	  super.setOptions(options);    this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
37	[BUG]  [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  ==  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  ==  0;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  options.getRequiredOptions().size()  ==  0;	  super.setOptions(options)&&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
38	[BUG]  [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()!=  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()!=  0;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  options.getRequiredOptions().size()!=  0;	  super.setOptions(options)&&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
39	[BUG]  [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  >  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  >  1;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  options.getRequiredOptions().size()  >  1;	  super.setOptions(options)&&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
40	[BUG]  [BUGGY]  this.options.clear();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options.clear();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options.clear();	  this.options.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
41	[BUG]  [BUGGY]  this.options.add(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options.add(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options.add(options);	  this.options.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
42	[BUG]  [BUGGY]  this.options.addAll(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options.addAll(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options.addAll(options);	  this.options.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
43	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Options.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Options.EMPTY_LIST;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Options.EMPTY_LIST;	  this.options    =    options    >=    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
44	[BUG]  [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options.getOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options.getOptions();	  this.options    =    options    >=    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
45	[BUG]  [BUGGY]  this.options  =  new  LinkedList(options.getOptions(),  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  LinkedList(options.getOptions(),  options);  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList(options.getOptions(),  options);	  this.options    =    new    LinkedList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
47	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
48	[BUG]  [BUGGY]  final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;	  this.options    =    options    ==    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
50	[BUG]  [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;	  this.options    =    options    ==    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionParser();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getOptionParser();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getOptionParser();	  Option    cmd    =    options.getArgumentParser();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
52	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  null  :  options.getOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  options.getOptions();	  this.options    =    options    ==    null?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  options.requiredOptions;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  null  :  options.requiredOptions;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  options.requiredOptions;	  this.options    =    options    ==    null?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  ||  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  ||  options.getRequiredOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  ||  options.getRequiredOptions();	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST    ||    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
55	[BUG]  [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  ||  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  ||  options.getOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  ||  options.getOptions();	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST    ||    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
56	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.removeAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  this.commandLine.getParser(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  this.commandLine.getParser(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  this.commandLine.getParser(options);	  Option    cmd    =    options.getParser(this.commandLine);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getParser(this.commandLine,  this.requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getParser(this.commandLine,  this.requiredOptions);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getParser(this.commandLine,  this.requiredOptions);	  Option    cmd    =    options.getParser(this.commandLine);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  this.commandLine.getParser();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  this.commandLine.getParser();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  this.commandLine.getParser();	  Option    cmd    =    options.getParser(this.commandLine);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  this.options  =  options!=  null?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  null  :  options.getOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  null  :  options.getOptions();	  this.options    =    options    <    null?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
61	[BUG]  [BUGGY]  this.requiredOptions.addAll(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions.addAll(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions.addAll(options.getRequiredOptions());	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
62	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
63	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRowOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRowOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRowOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
64	[BUG]  [BUGGY]  this.options  =  Option.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  Option.EMPTY_LIST;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Option.EMPTY_LIST;	  this.options    =    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
65	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_LIST  |  Options.MULTIPLIER;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  Options.EMPTY_LIST  |  Options.MULTIPLIER;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Options.EMPTY_LIST  |  Options.MULTIPLIER;	  this.options    =    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
66	[BUG]  [BUGGY]  final  Option[]  requiredOptions  =  options.getRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option[]  requiredOptions  =  options.getRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option[]  requiredOptions  =  options.getRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  Option[]    requiredOptions    =    options.getRequiredOptions();    this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
67	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getArgument();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgument();	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentParameters();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getArgumentParameters();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgumentParameters();	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =  options.getCommandLine();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getCommandLine();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCommandLine();	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAllOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAllOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAllOptions())  {  cmd.addChangeListener(this);  }	  for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  For(final  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  For(final  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	For(final  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	  for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList(options.getOptions());	  this.options    =    options    ==    null?    new    ArrayList(options.getOptions()):    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
73	[BUG]  [BUGGY]  this.options  =  options  ==  null?  new  LinkedList(options.getOptions()):  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  new  LinkedList(options.getOptions()):  new  ArrayList(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  new  LinkedList(options.getOptions()):  new  ArrayList(options.getOptions());	  this.options    =    options    ==    null?    new    ArrayList(options.getOptions()):    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
74	[BUG]  [BUGGY]  Super.setOptions(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Super.setOptions(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Super.setOptions(options);	  if(options!=    null)    {    super.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions(),  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  LinkedList(options.getRequiredOptions(),  options);	  this.requiredOptions    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
76	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
77	[BUG]  [BUGGY]  Option  cmd  =  this.options.getParser();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  this.options.getParser();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  this.options.getParser();	  Options    cmd    =    this.options.getParser();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    new    ArrayList(options.getOptions()):    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
79	[BUG]  [BUGGY]  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options,  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Set  <  Option>  requiredOptions  =  Sets.newHashSet(options,  options);	  Set    <    Option>    requiredOptions    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
80	[BUG]  [BUGGY]  final  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options);	  Set    <    Option>    requiredOptions    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
81	[BUG]  [BUGGY]  List  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  List  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	List  <  Option>  requiredOptions  =  Sets.newHashSet(options);	  Set    <    Option>    requiredOptions    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
82	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
83	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options);	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
84	[BUG]  [BUGGY]  this.requiredOptions.add(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions.add(option);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions.add(option);	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
85	[BUG]  [BUGGY]  this.requiredOptions.clear();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions.clear();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions.clear();	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
86	[BUG]  [BUGGY]  this.options  =  options.emptyList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options.emptyList();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.emptyList();	  this.options    =    Options.emptyList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getOptions();	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
88	[BUG]  [BUGGY]  this.options  =  options.getAllOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options.getAllOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getAllOptions();	  this.options    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.clear();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.clear();  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.clear();  }	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.clear();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
90	[BUG]  [BUGGY]  for(final  CommandLine  cmd  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  CommandLine  cmd  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  CommandLine  cmd  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }	  if(options!=    null)    {    for(final    CommandLine    cmd    :    options.getRequiredOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
91	[BUG]  [BUGGY]  cmd.setOptions(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  cmd.setOptions(this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.setOptions(this.options);	  cmd.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
92	[BUG]  [BUGGY]  if(options!=  null)  {  cmd.setOptions(options);  }  else  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  cmd.setOptions(options);  }  else  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  cmd.setOptions(options);  }  else  {  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }	  cmd.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
93	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption(this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption(this.options);	  final    Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
94	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this.commandLine);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption(this.commandLine);	  final    Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
95	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "options ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "options ");  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "options ");	  final    Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
96	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentCommandLine();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCurrentCommandLine();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentCommandLine();	  Options    cmd    =    options.getCommandLine();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
97	[BUG]  [BUGGY]  Options  cmd  =  options.getCommandLine(),  this.requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCommandLine(),  this.requiredOptions);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCommandLine(),  this.requiredOptions);	  Options    cmd    =    options.getCommandLine();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
98	[BUG]  [BUGGY]  this.options  =  options.getOptions(true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options.getOptions(true);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getOptions(true);	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
99	[BUG]  [BUGGY]  this.options  =  options.getOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options.getOptions(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getOptions(this.commandLine);	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
100	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  null  :  Collections.EMPTY_LIST;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  Collections.EMPTY_LIST;	  this.options    =    options    ==    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.add(option);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.add(option);  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
102	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAllOptions())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAllOptions())  {  requiredOptions.add(option);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAllOptions())  {  requiredOptions.add(option);  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
103	[BUG]  [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Options.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Options.EMPTY_LIST;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Options.EMPTY_LIST;	  this.options    =    options!=    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
104	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  options.getRequiredOptions(options);	  this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(true);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  options.getRequiredOptions(true);	  this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser(this.commandLine);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCurrentParser(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentParser(this.commandLine);	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
107	[BUG]  [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  new  ArrayList(options.getOptions(),  options.getOptions()):  new  ArrayList();	  this.options    =    options!=    null?    new    ArrayList(options.getOptions()):    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
108	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
109	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
110	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
111	[BUG]  [BUGGY]  this.options  =  new  LinkedList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  LinkedList(options.getRequiredOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList(options.getRequiredOptions());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
112	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getAllOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList(options.getAllOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.getAllOptions());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
113	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "Required ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "Required ");  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "Required ");	  final    Option    option    =    options.getOption(   "required   ");    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
114	[BUG]  [BUGGY]  this.options  =  new  LinkedList(options.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  LinkedList(options.size());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList(options.size());	  this.options    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
115	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.size()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList(options.size()  +  1);  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.size()  +  1);	  this.options    =    new    ArrayList(options.size());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
116	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(this.cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(this.cmd);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(this.cmd);	  Option[]    requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
117	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(this.options);	  Option[]    requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
118	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getAllRequiredOptions();	  Option[]    requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
119	[BUG]  [BUGGY]  for(final  CommandLine  cmd  :  this.options.getCommandLines())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  CommandLine  cmd  :  this.options.getCommandLines())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  CommandLine  cmd  :  this.options.getCommandLines())  {  cmd.addChangeListener(this);  }	  for(final    CommandLine    cmd    :    options.getCommandLines())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
120	[BUG]  [BUGGY]  For(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  For(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	For(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.addChangeListener(this);  }	  for(final    CommandLine    cmd    :    options.getCommandLines())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
121	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.add(option);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.add(option);  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
122	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  +  2;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  +  2;	  this.options    =    options    ==    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
123	[BUG]  [BUGGY]  Options  cmd  =  options.getArgumentOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getArgumentOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getArgumentOptions();	  Options    cmd    =    options.getCommandLine();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
124	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getAssignedOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
125	[BUG]  [BUGGY]  Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  options  =  options.getOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  options  =  options.getOptions();	  options.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
126	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(this.commandLine);	  Option[]    requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
127	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ",  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ",  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ",  options);	  final    Option    option    =    options.getOption(   "required   ");    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
128	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_ARRAY;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  Options.EMPTY_ARRAY;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Options.EMPTY_ARRAY;	  this.options    =    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
129	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
130	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()!=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()!=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()!=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  ||  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  ||  options.getOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  ||  options.getOptions();	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST    ||    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
132	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOwnerOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOwnerOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOwnerOptions());	  this.options    =    new    ArrayList    <    Option>(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
133	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getAllOptions());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getAllOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options.getAllOptions());	  this.options    =    new    ArrayList    <    Option>(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentArgumentParser();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getCurrentArgumentParser();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCurrentArgumentParser();	  Option    cmd    =    options.getArgumentParser();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
135	[BUG]  [BUGGY]  This.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  This.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	This.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  this.requiredOptions    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
136	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentArguments();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCurrentArguments();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentArguments();	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
137	[BUG]  [BUGGY]  Options  cmd  =  options.getArguments(this.commandLine);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getArguments(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getArguments(this.commandLine);	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
138	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.removeAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
139	[BUG]  [BUGGY]  this.options  =  options!=  null?  new  LinkedList(options.getOptions()):  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  new  LinkedList(options.getOptions()):  new  ArrayList(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  new  LinkedList(options.getOptions()):  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    new    ArrayList(options.getOptions()):    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
140	[BUG]  [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()!=  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()!=  0;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  this.requiredOptions.size()!=  0;	  super.setOptions(options)&&    this.requiredOptions.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
141	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAllOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAllOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAllOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
142	[BUG]  [BUGGY]  final  Option  option  =  options.getOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOptions(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOptions(this.commandLine);	  final    Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
143	[BUG]  [BUGGY]  This.requiredOptions  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  This.requiredOptions  =  options.getRequiredOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	This.requiredOptions  =  options.getRequiredOptions();	  this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
144	[BUG]  [BUGGY]  this.options.clearOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options.clearOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options.clearOptions();	  this.options.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
145	[BUG]  [BUGGY]  Option  cmd  =  options.getParser(this.commandLine  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getParser(this.commandLine  -  1);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getParser(this.commandLine  -  1);	  Option    cmd    =    options.getParser(this.commandLine);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
146	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  ArrayList  <  Option>(options.getRequiredOptions());	  this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
147	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
148	[BUG]  [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  >=  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  >=  0;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  options.getRequiredOptions().size()  >=  0;	  super.setOptions(options)&&    options.getRequiredOptions().size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
149	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getAllRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }	  Option[]    requiredOptions    =    options.getRequiredOptions();    if(requiredOptions!=    null)    {    cmd.setOptions(requiredOptions);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
150	[BUG]  [BUGGY]  if(options!=  null  ||  options.getRequiredOptions()!=  null)  {  cmd.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null  ||  options.getRequiredOptions()!=  null)  {  cmd.setOptions(options);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null  ||  options.getRequiredOptions()!=  null)  {  cmd.setOptions(options);  }	  if(options!=    null    &&    options.getRequiredOptions()!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
151	[BUG]  [BUGGY]  for(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.setChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.setChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.setChangeListener(this);  }	  for(final    CommandLine    cmd    :    options.getCommandLines())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
152	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.cloneTree());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList(options.cloneTree());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.cloneTree());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
153	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getCurrentOption();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCurrentOption();	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
154	[BUG]  [BUGGY]  this.options  =  new  List(options.getOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  List(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  List(options.getOptions());	  this.options    =    new    LinkedList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
155	[BUG]  [BUGGY]  this.requiredOptions  =  Arrays.asList(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  Arrays.asList(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  Arrays.asList(options);	  this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
156	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  new  ArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  null  :  new  ArrayList();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  new  ArrayList();	  this.options    =    options    ==    null?    null    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
157	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.removeChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
158	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.removeChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.removeChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.removeChangeListener(this);  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.removeChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
159	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  cmd.setChangeListener(this);  }	  for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
160	[BUG]  [BUGGY]  this.options  =  options.getRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options.getRequiredOptions(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getRequiredOptions(options);	  this.options    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
161	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentArgumentLine();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getCurrentArgumentLine();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCurrentArgumentLine();	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
162	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentArgument();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getCurrentArgument();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCurrentArgument();	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
163	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  neededOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  neededOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  neededOptions.addAll(options.getRequiredOptions());  }	  if(options!=    null)    {    for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
164	[BUG]  [BUGGY]  final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.clear();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
165	[BUG]  [BUGGY]  ArrayList  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  ArrayList  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	ArrayList  <  Option>  requiredOptions  =  Sets.newHashSet(options);	  Set    <    Option>    requiredOptions    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
166	[BUG]  [BUGGY]  cmd.addOption(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  cmd.addOption(this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.addOption(this.options);	  cmd.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
167	[BUG]  [BUGGY]  cmd.addOption(this.commandLine);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  cmd.addOption(this.commandLine);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.addOption(this.commandLine);	  cmd.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
168	[BUG]  [BUGGY]  if(options  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }	  super.setOptions(options);    this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
169	[BUG]  [BUGGY]  this.options  =  options?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options?  null  :  options.getOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options?  null  :  options.getOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
170	[BUG]  [BUGGY]  this.options  =  options.getOptions(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options.getOptions(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getOptions(options);	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
171	[BUG]  [BUGGY]  if(options  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }	  super.setOptions(options);    this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
172	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >  1)  {  requiredOptions.addAll(options.getAssignedOptions());	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
173	[BUG]  [BUGGY]  Options  cmd  =  this.options.getCurrentParser();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  this.options.getCurrentParser();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  this.options.getCurrentParser();	  Options    cmd    =    this.options.getParser();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
174	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.clear();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.clear();  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.clear();  }	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.clear();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
175	[BUG]  [BUGGY]  this.options  =  new  TreeList(options.getOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  TreeList(options.getOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  TreeList(options.getOptions());	  this.options    =    new    LinkedList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
176	[BUG]  [BUGGY]  this.options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  option.getOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  option.getOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
177	[BUG]  [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options.getRequiredOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options.getRequiredOptions();	  this.options    =    options!=    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
178	[BUG]  [BUGGY]  super.setOptions(this.options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(this.options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(this.options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  super.setOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
179	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  null  :  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  new  ArrayList(options.getRequiredOptions());	  this.options    =    options    ==    null?    null    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
180	[BUG]  [BUGGY]  Options  cmd  =  options.getArguments(options.getArguments());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getArguments(options.getArguments());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getArguments(options.getArguments());	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
181	[BUG]  [BUGGY]  Options  cmd  =  options.getArguments(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getArguments(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getArguments(options);	  Options    cmd    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
182	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >=  1)  {  requiredOptions.addAll(options.getAssignedOptions());	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
183	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions  =  options.getRequiredOptions(),  options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  options.getRequiredOptions(),  options);	  this.requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
184	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options.getRequiredOptions()!=  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }	  super.setOptions(options);    this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
185	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options.getRequiredOptions()  ==  null)  {  super.setOptions(options);  this.requiredOptions  =  options;  }	  super.setOptions(options);    this.requiredOptions    =    options;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
186	[BUG]  [BUGGY]  this.options  =  Option.UNKNOWN;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  Option.UNKNOWN;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Option.UNKNOWN;	  this.options    =    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
187	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getCurrentParser(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCurrentParser(options);	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
188	[BUG]  [BUGGY]  for(final  CommandLine  cmd  :  options.getParameters())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  CommandLine  cmd  :  options.getParameters())  {  cmd.addChangeListener(this);  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  CommandLine  cmd  :  options.getParameters())  {  cmd.addChangeListener(this);  }	  for(final    CommandLine    cmd    :    options.getCommandLines())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
189	[BUG]  [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()  >=  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()  >=  0;  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  this.requiredOptions.size()  >=  0;	  super.setOptions(options)&&    this.requiredOptions.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
190	[BUG]  [BUGGY]  this.options  =  options!=  null?  new  LinkedList(options.getOptions()):  new  ArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  new  LinkedList(options.getOptions()):  new  ArrayList();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  new  LinkedList(options.getOptions()):  new  ArrayList();	  this.options    =    options!=    null?    new    ArrayList(options.getOptions()):    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
191	[BUG]  [BUGGY]  Set  <  Option>  requiredOptions  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Set  <  Option>  requiredOptions  =  Sets.newHashSet();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Set  <  Option>  requiredOptions  =  Sets.newHashSet();	  Set    <    Option>    requiredOptions    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
192	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required_options ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required_options ");  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required_options ");	  final    Option    option    =    options.getOption(   "required   ");    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
193	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getArgumentOptions();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgumentOptions();	  Option    cmd    =    options.getArgumentParser();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
194	[BUG]  [BUGGY]  cmd.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  cmd.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  if(options!=    null    &&    options.getRequiredOptions()!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
195	[BUG]  [BUGGY]  this.cmd.setOptions(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.cmd.setOptions(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.cmd.setOptions(options);	  if(options!=    null    &&    options.getRequiredOptions()!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
196	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentLine(options.getArgumentLine());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getArgumentLine(options.getArgumentLine());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgumentLine(options.getArgumentLine());	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
197	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentLine(),  options.getArgumentLine();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option  cmd  =  options.getArgumentLine(),  options.getArgumentLine();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgumentLine(),  options.getArgumentLine();	  Option    cmd    =    options.getArgumentLine();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
198	[BUG]  [BUGGY]  if(options.isAll())  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  if(options.isAll())  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options.isAll())  {  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }	  super.setOptions(options);    this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
199	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  null  :  options.getRequiredOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  options.getRequiredOptions();	  this.options    =    options    ==    null?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
200	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options.getRequiredOptions();  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options.getRequiredOptions();	  this.options    =    options    ==    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
201	[BUG]  [BUGGY]  for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getAllRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
202	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());	  this.options    =    new    ArrayList    <    Option>(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
203	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  >=  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }	  final    Option    option    =    options.getOption(   "required   ")||    options.getOptions().size()    ==    1)    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
204	[BUG]  [BUGGY]  this.requiredOptions.add(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.requiredOptions.add(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions.add(options.getRequiredOptions());	  if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    this.requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
205	[BUG]  [BUGGY]  cmd.setOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  cmd.setOption(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.setOption(options);	  cmd.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
206	[BUG]  [BUGGY]  cmd.setOption(this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  cmd.setOption(this.options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.setOption(this.options);	  cmd.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
207	[BUG]  [BUGGY]  super.setOptions(options);  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  super.setOptions(options);  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options);  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions());	  if(options!=    null)    {    super.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
208	[BUG]  [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST,  options.getRequiredOptions()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST,  options.getRequiredOptions()  +  1;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST,  options.getRequiredOptions()  +  1;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
209	[BUG]  [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST,  options.getOptions()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST,  options.getOptions()  +  1;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST,  options.getOptions()  +  1;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
210	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getAllRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getAllRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  Option[]    requiredOptions    =    options.getRequiredOptions();    this.requiredOptions    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
211	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST,  options.getRequiredOptions()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST,  options.getRequiredOptions()  +  1;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST,  options.getRequiredOptions()  +  1;	  this.options    =    options    ==    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
212	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST,  options.getOptions()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST,  options.getOptions()  +  1;  [BUGGY]      this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST,  options.getOptions()  +  1;	  this.options    =    options    ==    null?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
213	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentSelection();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCurrentSelection();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentSelection();	  Options    cmd    =    options.getCommandLine();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
214	[BUG]  [BUGGY]  Options  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getArgumentParser();  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getArgumentParser();	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
215	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Options  cmd  =  options.getCurrentParser(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentParser(options);	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
216	[BUG]  [BUGGY]  final  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  final  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	  for(final    Option    option    :    options.getRequiredOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
217	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  void  setOptions(final  Options  options)  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions(options);  [BUGGY]      this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions(options);	  Option[]    requiredOptions    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
