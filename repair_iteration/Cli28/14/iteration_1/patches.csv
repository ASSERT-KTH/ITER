bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  for(final  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  cmd.addChangeListener(this);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  this.options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options.getOptions();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getOptions();	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  this.options  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options.getRequiredOptions();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options.getRequiredOptions();	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  this.options  =  new  LinkedList(options.getOptions());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  LinkedList(options.getOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList(options.getOptions());	  this.options    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptions(),  options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  ArrayList(options.getOptions(),  options);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.getOptions(),  options);	  this.options    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptions()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  ArrayList(options.getOptions()  +  1);  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.getOptions()  +  1);	  this.options    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  this.options  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  Collections.EMPTY_LIST;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Collections.EMPTY_LIST;	  this.options    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  this.options  =  Options.emptyList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  Options.emptyList();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Options.emptyList();	  this.options    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option  cmd  =  options.getCurrentParser();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getCurrentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentLine();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option  cmd  =  options.getArgumentLine();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgumentLine();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getParser(this.commandLine);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option  cmd  =  options.getParser(this.commandLine);  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getParser(this.commandLine);	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions();	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  this.requiredOptions  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.requiredOptions  =  options.getRequiredOptions();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  options.getRequiredOptions();	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Options  cmd  =  options.getCurrentParser();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCurrentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Options  cmd  =  this.options.getParser();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Options  cmd  =  this.options.getParser();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  this.options.getParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getRequiredOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  options;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  null  :  options;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  options;	  this.options    =    options    <    null?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  this.options  =  options!=  null?  null  :  options;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  null  :  options;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  null  :  options;	  this.options    =    options    <    null?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  this.options  =  options  <  null?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  <  null?  null  :  options.getOptions();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  <  null?  null  :  options.getOptions();	  this.options    =    options    <    null?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.add(option);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.add(option);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  for(final  Option  option  :  options.getOptions())  {  requiredOptions.add(option);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getOptions())  {  requiredOptions.add(option);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  final  Option  option  =  options.getOption( "required ");  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ");	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOption( "required ")||  options.getOptions().size()  ==  1)  {  requiredOptions.addAll(options.getAssignedOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
31	[BUG]  [BUGGY]  for(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  for(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.addChangeListener(this);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	for(final  CommandLine  cmd  :  options.getCommandLines())  {  cmd.addChangeListener(this);  }	      if(options!=    null)    {    for(final    CommandLine    cmd    :    options.getCommandLines())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions();  if(requiredOptions!=  null)  {  cmd.setOptions(requiredOptions);  }	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(null);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option[]  requiredOptions  =  options.getRequiredOptions();  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(null);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOptions());	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  options.setOptions(options);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  options.setOptions(options);  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	options.setOptions(options);	      if(options!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  cmd.setOptions(options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  cmd.setOptions(options);  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	cmd.setOptions(options);	      if(options!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  this.options.setOptions(options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options.setOptions(options);  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options.setOptions(options);	      if(options!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  this.options  =  options  ==  null?  null  :  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  null  :  new  ArrayList(options.getOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  null  :  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  this.options  =  options!=  null?  null  :  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  null  :  new  ArrayList(options.getOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  null  :  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions()):  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions()):  new  ArrayList(options.getOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  new  ArrayList(options.getOptions()):  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions()):  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions()):  new  ArrayList(options.getOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  new  ArrayList(options.getOptions()):  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  Collections.EMPTY_LIST  :  options;	  this.options    =    options    <    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  Collections.EMPTY_LIST  :  options;	  this.options    =    options    <    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  this.options  =  options  >=  null?  Collections.EMPTY_LIST  :  options;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  >=  null?  Collections.EMPTY_LIST  :  options;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  >=  null?  Collections.EMPTY_LIST  :  options;	  this.options    =    options    <    null?    Collections.EMPTY_LIST    :    options;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  if(options!=  null)  {  super.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  super.setOptions(options);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  super.setOptions(options);  }	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  if(options!=  null)  {  super.setOptions(options);  }  else  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  super.setOptions(options);  }  else  {  cmd.addChangeListener(this);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  super.setOptions(options);  }  else  {  cmd.addChangeListener(this);  }	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  super.setOptions(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  super.setOptions(this.options);  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(this.options);	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  this.options  =  new  LinkedList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  LinkedList();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  LinkedList();	  this.options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  ArrayList(options.size());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.size());	  this.options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.add(option);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.add(option);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  requiredOptions.clear();  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.clear();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.clear();  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.clear();  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
53	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  requiredOptions.addAll(options.getAssignedOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getAssignedOptions());    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Option  cmd  =  options.getArgumentParser();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Option  cmd  =  options.getArgumentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options);  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()  >  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  super.setOptions(options)&&  this.requiredOptions.size()  >  0;  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  this.requiredOptions.size()  >  0;	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  super.setOptions(options);  this.requiredOptions  =  options;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  super.setOptions(options);  this.requiredOptions  =  options;  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options);  this.requiredOptions  =  options;	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  final  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  final  Option  option  =  options.getOptions();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	final  Option  option  =  options.getOptions();	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
60	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  cmd.removeChangeListener(this);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  this.requiredOptions  =  options;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.requiredOptions  =  options;  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  options;	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.requiredOptions  =  new  LinkedList(options.getRequiredOptions());  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.requiredOptions  =  new  LinkedList(options.getRequiredOptions());	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  Options.EMPTY_LIST;  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  Options.EMPTY_LIST;	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
64	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  options  :  new  ArrayList(options.getOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  new  ArrayList(options.getOptions());	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions()):  new  ArrayList();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  new  ArrayList(options.getOptions()):  new  ArrayList();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  new  ArrayList(options.getOptions()):  new  ArrayList();	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  Options  cmd  =  options.getCommandLine();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Options  cmd  =  options.getCommandLine();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getCommandLine();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
67	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  CommandLine  cmd  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  CommandLine  cmd  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  CommandLine  cmd  :  options.getRequiredOptions())  {  cmd.addChangeListener(this);  }	      if(options!=    null)    {    for(final    CommandLine    cmd    :    options.getCommandLines())    {    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  +  1;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  +  1;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  +  1;  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options  ==  null?  options  :  Collections.EMPTY_LIST  +  1;	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
70	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  requiredOptions.removeAll(options.getRequiredOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions()):  new  ArrayList();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  new  ArrayList(options.getOptions()):  new  ArrayList();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  new  ArrayList(options.getOptions()):  new  ArrayList();	  this.options    =    options!=    null?    options    :    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
72	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList(options.getRequiredOptions());	  this.options    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  ||  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  ||  options.getRequiredOptions();  [BUGGY]    this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  options!=  null?  options  :  Collections.EMPTY_LIST  ||  options.getRequiredOptions();	  this.options    =    options!=    null?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
74	[BUG]  [BUGGY]  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Set  <  Option>  requiredOptions  =  Sets.newHashSet(options);  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Set  <  Option>  requiredOptions  =  Sets.newHashSet(options);	      if(options!=    null)    {    cmd.setOptions(options);    }    else    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
75	[BUG]  [BUGGY]  Options  cmd  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  Options  cmd  =  options.getArguments();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	Options  cmd  =  options.getArguments();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  if(options!=  null  &&  options.getRequiredOptions()!=  null)  {  cmd.setOptions(options);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null  &&  options.getRequiredOptions()!=  null)  {  cmd.setOptions(options);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null  &&  options.getRequiredOptions()!=  null)  {  cmd.setOptions(options);  }	      if(options!=    null)    {    cmd.setOptions(options);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
77	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	this.options  =  new  ArrayList  <  Option>();	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  >  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  super.setOptions(options)&&  options.getRequiredOptions().size()  >  0;  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	super.setOptions(options)&&  options.getRequiredOptions().size()  >  0;	      super.setOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.addAll(options.getRequiredOptions());  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.addAll(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
80	[BUG]  [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  void  setOptions(final  Options  options)  {    [BUGGY]  if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.add(option);  }  [BUGGY]    this.options  =  options;  this.requiredOptions  =  new  ArrayList(options.getRequiredOptions());  }  [CLASS]  Parser  [METHOD]  setOptions  [RETURN_TYPE]  void  Options  options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	48	48	1	replace	if(options!=  null)  {  for(final  Option  option  :  options.getOptions())  {  this.requiredOptions.add(option);  }	      if(options!=    null)    {    for(final    Option    option    :    options.getOptions())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
