projects/Cli28/src/java/org/apache/commons/cli/Parser.java48
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalCommandLinecmd:options.getCommandLines()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Collections.emptyList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options<null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options<null?null:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}else{cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){cmd.setOptions(options);}else{cmd.setOptions(null);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getOptions(),options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getOptions()+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Collections.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Options.emptyList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getCurrentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getParser(this.commandLine);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCurrentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=this.options.getParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?null:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options<null?null:options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOption("required")||options.getOptions().size()==1){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48for(finalCommandLinecmd:options.getCommandLines()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();if(requiredOptions!=null){cmd.setOptions(requiredOptions);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Option[]requiredOptions=options.getRequiredOptions();this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48options.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48cmd.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options.setOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?null:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?null:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newArrayList(options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newArrayList(options.getOptions()):newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options>=null?Collections.EMPTY_LIST:options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){super.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){super.setOptions(options);}else{cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newLinkedList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.size());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.add(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.clear();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){requiredOptions.addAll(options.getAssignedOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optioncmd=options.getArgumentParser();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);this.requiredOptions=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&this.requiredOptions.size()>0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options);this.requiredOptions=options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getRequiredOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48finalOptionoption=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){cmd.removeChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=options;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.requiredOptions=newLinkedList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=Options.EMPTY_LIST;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:newArrayList(options.getOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?newArrayList(options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getCommandLine();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalCommandLinecmd:options.getRequiredOptions()){cmd.addChangeListener(this);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options==null?options:Collections.EMPTY_LIST+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){requiredOptions.removeAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?newArrayList(options.getOptions()):newArrayList();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList(options.getRequiredOptions());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=options!=null?options:Collections.EMPTY_LIST||options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Set<Option>requiredOptions=Sets.newHashSet(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48Optionscmd=options.getArguments();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null&&options.getRequiredOptions()!=null){cmd.setOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48this.options=newArrayList<Option>();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48super.setOptions(options)&&options.getRequiredOptions().size()>0;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){this.requiredOptions.addAll(options.getRequiredOptions());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java48if(options!=null){for(finalOptionoption:options.getOptions()){this.requiredOptions.add(option);}
