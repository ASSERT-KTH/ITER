bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(4);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(4);	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(1);	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
3	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  this.cmd.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  this.cmd.getAllRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  this.cmd.getAllRequiredOptions();	  List    <    RequiredOption>    requiredOptions    =    cmd.getAllRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  cmd.getAllRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  cmd.getAllRequiredOptions(this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  cmd.getAllRequiredOptions(this.options);	  List    <    RequiredOption>    requiredOptions    =    cmd.getAllRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(requiredOptions.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(requiredOptions.size());	  List    <    RequiredOption>    requiredOptions    =    new    LinkedList    <    RequiredOption>();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
6	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.toArray(new  ArrayList());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.toArray(new  ArrayList());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  neededOptions.toArray(new  ArrayList());	  return(requiredOptions    ==    null)?    null    :    requiredOptions.toArray(new    ArrayList());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
7	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.toArray(new  LinkedList());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.toArray(new  LinkedList());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  requiredOptions.toArray(new  LinkedList());	  return(requiredOptions    ==    null)?    null    :    requiredOptions.toArray(new    ArrayList());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
8	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  expectedOptions.toArray(new  ArrayList());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  expectedOptions.toArray(new  ArrayList());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  expectedOptions.toArray(new  ArrayList());	  return(requiredOptions    ==    null)?    null    :    requiredOptions.toArray(new    ArrayList());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
9	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  LinkedList  <  String>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  LinkedList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  LinkedList  <  String>();	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
10	[BUG]  [BUGGY]  List  requiredOptions  =  getRequiredOptions(false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  getRequiredOptions(false);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  getRequiredOptions(false);	  List    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  List  requiredOptions  =  getRequiredOptions(false,  cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  getRequiredOptions(false,  cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  getRequiredOptions(false,  cmd);	  List    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  List  requiredOptions  =  getRequiredOptions(false,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  getRequiredOptions(false,  true);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  getRequiredOptions(false,  true);	  List    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  List  requiredOptions  =  getRequiredOptions(false,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  getRequiredOptions(false,  false);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  getRequiredOptions(false,  false);	  List    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  return  new  ArrayList  <  RequiredOption>(RequiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  RequiredOption>(RequiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  RequiredOption>(RequiredOptions.size());	  return    new    ArrayList    <    RequiredOption>(requiredOptions.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
15	[BUG]  [BUGGY]  return  new  LinkedList  <  RequiredOption>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  LinkedList  <  RequiredOption>(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  LinkedList  <  RequiredOption>(requiredOptions.size());	  return    new    ArrayList    <    RequiredOption>(requiredOptions.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
16	[BUG]  [BUGGY]  Return  new  ArrayList  <  RequiredOption>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Return  new  ArrayList  <  RequiredOption>(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Return  new  ArrayList  <  RequiredOption>(requiredOptions.size());	  return    new    ArrayList    <    RequiredOption>(requiredOptions.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
17	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(0);	  return(this.requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
18	[BUG]  [BUGGY]  return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  -  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  -  1);	  return    new    ArrayList    <    RequiredOption>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
19	[BUG]  [BUGGY]  return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  +  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  +  1);	  return    new    ArrayList    <    RequiredOption>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
20	[BUG]  [BUGGY]  return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  -  2);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  RequiredOption>(this.requiredOptions.size()  -  2);	  return    new    ArrayList    <    RequiredOption>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
21	[BUG]  [BUGGY]  return  new  ArrayList  <  String>(this.requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  String>(this.requiredOptions.size()  -  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  String>(this.requiredOptions.size()  -  1);	  return    new    ArrayList    <    String>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
22	[BUG]  [BUGGY]  return  new  ArrayList  <  String>(this.requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  String>(this.requiredOptions.size()  +  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  String>(this.requiredOptions.size()  +  1);	  return    new    ArrayList    <    String>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
23	[BUG]  [BUGGY]  List  requiredOptions  =  cmd.getRequiredOptions(options,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  cmd.getRequiredOptions(options,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  cmd.getRequiredOptions(options,  options);	  List    requiredOptions    =    cmd.getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  List  requiredOptions  =  options.getRequiredOptions(cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  options.getRequiredOptions(cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  options.getRequiredOptions(cmd);	  List    requiredOptions    =    cmd.getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  List  requiredOptions  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  options.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  options.getRequiredOptions();	  List    requiredOptions    =    cmd.getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  this.requiredOptions  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  this.requiredOptions  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  this.requiredOptions  :  Collections.EMPTY_LIST;	  return(this.requiredOptions!=    null)?    this.requiredOptions    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
27	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  requiredOptions  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  requiredOptions  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  requiredOptions  :  Collections.EMPTY_LIST;	  return(this.requiredOptions!=    null)?    this.requiredOptions    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
28	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  this.requiredOptions  :  Lists.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  this.requiredOptions  :  Lists.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  this.requiredOptions  :  Lists.EMPTY_LIST;	  return(this.requiredOptions!=    null)?    this.requiredOptions    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
29	[BUG]  [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
30	[BUG]  [BUGGY]  Collection  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collection  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collection  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  if(this.cmd!=  null)  {  return  this.cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(this.cmd!=  null)  {  return  this.cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(this.cmd!=  null)  {  return  this.cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }	  return    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  if(this.cmd!=  null)  {  return  this.cmd.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(this.cmd!=  null)  {  return  this.cmd.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(this.cmd!=  null)  {  return  this.cmd.getRequiredOptions();  }	  return    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  return  this.requiredOptions.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.requiredOptions.getAllRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.requiredOptions.getAllRequiredOptions();	  return    this.requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  return  this.requiredOptions.get(this.commandLine);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.requiredOptions.get(this.commandLine);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.requiredOptions.get(this.commandLine);	  return    this.requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  cmd.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  requiredOptions  =  cmd.getAllRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  requiredOptions  =  cmd.getAllRequiredOptions();	  ArrayList    requiredOptions    =    cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
36	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  cmd.getRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  requiredOptions  =  cmd.getRequiredOptions(options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  requiredOptions  =  cmd.getRequiredOptions(options);	  ArrayList    requiredOptions    =    cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
37	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.size();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.size();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  neededOptions.size();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.get(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.get(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  requiredOptions.get(requiredOptions.size());	  return(requiredOptions    ==    null)?    null    :    requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  return(requiredOptions!=  null)?  null  :  requiredOptions.size();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions!=  null)?  null  :  requiredOptions.size();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions!=  null)?  null  :  requiredOptions.size();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions);	  List    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
41	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList(requiredOptions.size()  -  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList(requiredOptions.size()  -  1);	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
42	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList(this.requiredOptions.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList(this.requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList(this.requiredOptions.size());	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
43	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.values();	  return(this.requiredOptions    ==    null)?    null    :    this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
44	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.size();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.size();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.size();	  return(this.requiredOptions    ==    null)?    null    :    this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
45	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.get(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  null  :  this.requiredOptions.get(0);	  return(this.requiredOptions    ==    null)?    null    :    this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
46	[BUG]  [BUGGY]  return(List)this.requiredOptions.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)this.requiredOptions.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)this.requiredOptions.clone();	  return(List)this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
47	[BUG]  [BUGGY]  return(List)this.requiredOptions.values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)this.requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)this.requiredOptions.values();	  return(List)this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
48	[BUG]  [BUGGY]  if(this.requiredOptions!=  null)  {  return(List)this.requiredOptions;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(this.requiredOptions!=  null)  {  return(List)this.requiredOptions;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(this.requiredOptions!=  null)  {  return(List)this.requiredOptions;  }	  return(List)this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
49	[BUG]  [BUGGY]  Collections.sort(this.requiredOptions,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.requiredOptions,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.requiredOptions,  options);	  Collections.sort(requiredOptions,    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
50	[BUG]  [BUGGY]  Collections.sort(options,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(options,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(options,  requiredOptions);	  Collections.sort(requiredOptions,    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
51	[BUG]  [BUGGY]  Collections.sort(this.cmd,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.cmd,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.cmd,  requiredOptions);	  Collections.sort(requiredOptions,    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
52	[BUG]  [BUGGY]  Collections.sort(this.requiredOptions,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.requiredOptions,  cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.requiredOptions,  cmd);	  Collections.sort(requiredOptions,    cmd);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
53	[BUG]  [BUGGY]  Collections.sort(cmd,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(cmd,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(cmd,  requiredOptions);	  Collections.sort(requiredOptions,    cmd);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
54	[BUG]  [BUGGY]  Collections.sort(requiredOptions,  commandLine);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(requiredOptions,  commandLine);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(requiredOptions,  commandLine);	  Collections.sort(requiredOptions,    cmd);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
55	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  cmd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  cmd);	  List    <    String>    requiredOptions    =    getRequiredOptions(defaultValues);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
56	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  options);	  List    <    String>    requiredOptions    =    getRequiredOptions(defaultValues);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
57	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  -  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  -  1);	  ArrayList    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
58	[BUG]  [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  -  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  -  1);	  ArrayList    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
59	[BUG]  [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions.size());	  ArrayList    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
60	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions.size());	  ArrayList    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
61	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  this.cmd.getAllRequiredOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  this.cmd.getAllRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  this.cmd.getAllRequiredOptions();	  List    <    String>    requiredOptions    =    cmd.getAllRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  cmd.getAllRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  cmd.getAllRequiredOptions(this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  cmd.getAllRequiredOptions(this.options);	  List    <    String>    requiredOptions    =    cmd.getAllRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  Collections.sort(this.requiredOptions,  this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.requiredOptions,  this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.requiredOptions,  this.options);	  Collections.sort(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
64	[BUG]  [BUGGY]  Collections.sort(this.requiredOptions,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.requiredOptions,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.requiredOptions,  requiredOptions);	  Collections.sort(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
65	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }	  return    requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  cmd.addChangeListener(this);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  cmd.addChangeListener(this);  }	  return    requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
67	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  this.requiredOptions.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  this.requiredOptions.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  this.requiredOptions.getRequiredOptions();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
68	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  Collections.emptyList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  Collections.emptyList();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
69	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  cmd.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  cmd.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  cmd.getRequiredOptions();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
70	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  neededOptions.clone();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.toArray(new  List[requiredOptions.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.toArray(new  List[requiredOptions.size()  ]);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  requiredOptions.toArray(new  List[requiredOptions.size()  ]);	  return(requiredOptions    ==    null)?    null    :    requiredOptions.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null)  {  return  cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
73	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null)  {  return  cmd.getRequiredOptions();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
74	[BUG]  [BUGGY]  ||(cmd!=  null  &&  cmd.getRequiredOptions().size()  >  0))  {  requiredOptions  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ||(cmd!=  null  &&  cmd.getRequiredOptions().size()  >  0))  {  requiredOptions  =  Lists.newArrayList();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	||(cmd!=  null  &&  cmd.getRequiredOptions().size()  >  0))  {  requiredOptions  =  Lists.newArrayList();	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
75	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(cmd  ==  null)  {  return  cmd.getRequiredOptions();  }  else  {  requiredOptions  =  Lists.newArrayList();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
76	[BUG]  [BUGGY]  return(List)requiredOptions.values().clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)requiredOptions.values().clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)requiredOptions.values().clone();	  return(List)requiredOptions.clone();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
77	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  neededOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  neededOptions.values();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  specifiedOptions.values();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  specifiedOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  specifiedOptions.values();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  return(requiredOptions!=  null)?  null  :  requiredOptions.values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions!=  null)?  null  :  requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions!=  null)?  null  :  requiredOptions.values();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  if(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  LinkedList  <  String>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  LinkedList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  LinkedList  <  String>();	  if(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
81	[BUG]  [BUGGY]  if(requiredOptions!=  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();	  if(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
82	[BUG]  [BUGGY]  if(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(1);	  if(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
83	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(false);	  List    <    String>    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false,  cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(false,  cmd);	  List    <    String>    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
85	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false,  true);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(false,  true);	  List    <    String>    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  return(List)this.requiredOptions.size();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)this.requiredOptions.size();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)this.requiredOptions.size();	  return(List)requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
87	[BUG]  [BUGGY]  return(List)requiredOptions.get(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)requiredOptions.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)requiredOptions.get(0);	  return(List)requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
88	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayListIfNull(requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayListIfNull(requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayListIfNull(requiredOptions);	  List    <    RequiredOption>    requiredOptions    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
89	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  this.cmd.getRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  this.cmd.getRequiredOptions(this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  this.cmd.getRequiredOptions(this.options);	  List    <    RequiredOption>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  Collection  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collection  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collection  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions();	  List    <    RequiredOption>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
91	[BUG]  [BUGGY]  Collections.reverse(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.reverse(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.reverse(this.requiredOptions);	  Collections.reverse(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
92	[BUG]  [BUGGY]  Collections.reverse(getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.reverse(getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.reverse(getRequiredOptions());	  Collections.reverse(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
93	[BUG]  [BUGGY]  Collections.reverse(this.options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.reverse(this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.reverse(this.options);	  Collections.reverse(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
94	[BUG]  [BUGGY]  Collections.reverse(this.commandLine,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.reverse(this.commandLine,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.reverse(this.commandLine,  requiredOptions);	  Collections.reverse(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
95	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());	  return    new    ArrayList    <    String>(requiredOptions.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
96	[BUG]  [BUGGY]  return  new  ArrayList  <  String>(RequiredOptions.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  String>(RequiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  String>(RequiredOptions.size());	  return    new    ArrayList    <    String>(requiredOptions.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);	  List    <    String>    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
98	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  this.options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  this.options.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  this.options.getRequiredOptions();	  List    <    String>    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
99	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);	  List    <    String>    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size());	  ArrayList    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
101	[BUG]  [BUGGY]  List  requiredOptions  =  getRequiredOptions(options,  cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  getRequiredOptions(options,  cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  getRequiredOptions(options,  cmd);	  List    requiredOptions    =    getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  getRequiredOptions(options);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  requiredOptions  =  getRequiredOptions(options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  requiredOptions  =  getRequiredOptions(options);	  List    requiredOptions    =    getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =(List)requiredOptions.values();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =(List)requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =(List)requiredOptions.values();	  return(List)requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
104	[BUG]  [BUGGY]  return(List)requiredOptions.keySet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)requiredOptions.keySet();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)requiredOptions.keySet();	  return(List)requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
105	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    else    {    requiredOptions.addAll(cmd.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
106	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    else    {    requiredOptions.addAll(cmd.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
107	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null)  {  return  requiredOptions.getRequiredOptions();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    else    {    requiredOptions.addAll(cmd.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
108	[BUG]  [BUGGY]  return  new  LinkedList  <  String>(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  LinkedList  <  String>(requiredOptions.size()  -  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  LinkedList  <  String>(requiredOptions.size()  -  1);	  return    new    LinkedList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
109	[BUG]  [BUGGY]  return  new  LinkedList  <  String>(requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  LinkedList  <  String>(requiredOptions.size()  +  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  LinkedList  <  String>(requiredOptions.size()  +  1);	  return    new    LinkedList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
110	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  -  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  -  1);	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
111	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  +  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  +  1);	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
112	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  -  2);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(requiredOptions.size()  -  2);	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
113	[BUG]  [BUGGY]  return  this.md.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.md.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.md.getRequiredOptions();	  return    this.md.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
114	[BUG]  [BUGGY]  return(this.md  ==  null)?  null  :  this.md.requiredOptions;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.md  ==  null)?  null  :  this.md.requiredOptions;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.md  ==  null)?  null  :  this.md.requiredOptions;	  return    this.md.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
115	[BUG]  [BUGGY]  Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;	  Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
116	[BUG]  [BUGGY]  Collections.EMPTY_LIST  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.EMPTY_LIST  =  Lists.newArrayList();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.EMPTY_LIST  =  Lists.newArrayList();	  Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
117	[BUG]  [BUGGY]  Collections.EMPTY_LIST  ||  requiredOptions.size()  ==  0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.EMPTY_LIST  ||  requiredOptions.size()  ==  0;  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.EMPTY_LIST  ||  requiredOptions.size()  ==  0;	  Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
118	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size()  /  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size()  /  2);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size()  /  2);	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(size()    *    2);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
119	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size();	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(size()    *    2);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
120	[BUG]  [BUGGY]  List  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);	  List    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
121	[BUG]  [BUGGY]  List  requiredOptions  =  this.options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  this.options.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  this.options.getRequiredOptions();	  List    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
122	[BUG]  [BUGGY]  List  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);	  List    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
123	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(size()  -  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(size()  -  1);	  List    <    RequiredOption>    requiredOptions    =    new    LinkedList    <    RequiredOption>(size());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
124	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(size()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(size()  +  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(size()  +  1);	  List    <    RequiredOption>    requiredOptions    =    new    LinkedList    <    RequiredOption>(size());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
125	[BUG]  [BUGGY]  List  requiredOptions  =  new  ArrayList(cmd.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  new  ArrayList(cmd.getRequiredOptions(),  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  new  ArrayList(cmd.getRequiredOptions(),  options);	  List    requiredOptions    =    new    ArrayList(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
126	[BUG]  [BUGGY]  List  requiredOptions  =  new  ArrayList(cmd.getAllRequiredOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  new  ArrayList(cmd.getAllRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  new  ArrayList(cmd.getAllRequiredOptions());	  List    requiredOptions    =    new    ArrayList(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
127	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  new  ArrayList(cmd.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  requiredOptions  =  new  ArrayList(cmd.getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  requiredOptions  =  new  ArrayList(cmd.getRequiredOptions());	  List    requiredOptions    =    new    ArrayList(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
128	[BUG]  [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(this.requiredOptions);	  ArrayList    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
129	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newHashSet();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newHashSet();	  List    <    RequiredOption>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
130	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newLinkedList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newLinkedList(requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newLinkedList(requiredOptions);	  List    <    RequiredOption>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
131	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
132	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collection.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collection.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collection.EMPTY_LIST  :  Collections.EMPTY_LIST;	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
133	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.EMPTY_LIST;	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
134	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  Collections.EMPTY_LIST;  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  Collections.EMPTY_LIST;	  List    <    String>    requiredOptions    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
135	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>();	  List    <    String>    requiredOptions    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
136	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(Collections.emptyList());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(Collections.emptyList());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(Collections.emptyList());	  List    <    String>    requiredOptions    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
137	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  this.cmd.getRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  this.cmd.getRequiredOptions(this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  this.cmd.getRequiredOptions(this.options);	  List    <    String>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
138	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  cmd.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  cmd.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  String>  requiredOptions  =  cmd.getRequiredOptions();	  List    <    String>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
139	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Lists.EMPTY_LIST  :  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Lists.EMPTY_LIST  :  Lists.newArrayList();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Lists.EMPTY_LIST  :  Lists.newArrayList();	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
140	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.newArrayList(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.newArrayList(0);	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
141	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.newArrayList();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Lists.newArrayList();	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
142	[BUG]  [BUGGY]  return  cmd.values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  cmd.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  cmd.values();	  return    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
143	[BUG]  [BUGGY]  return  this.requiredOptions.values();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.requiredOptions.values();	  return    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
144	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  +  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(requiredOptions.size()  +  1);	  List    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
145	[BUG]  [BUGGY]  Collections.emptyList(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.emptyList(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.emptyList(this.requiredOptions);	  Collections.emptyList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
146	[BUG]  [BUGGY]  return  requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  requiredOptions.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  requiredOptions.getOptions();	  return    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
147	[BUG]  [BUGGY]  return  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.options.getOptions();	  return    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
148	[BUG]  [BUGGY]  return  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  cmd.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  cmd.getOptions();	  return    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
149	[BUG]  [BUGGY]  return  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  options.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  options.getRequiredOptions();	  return    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
150	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(requiredOptions.size());	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>(0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
151	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(2);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(2);	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>(0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
152	[BUG]  [BUGGY]  Return  new  ArrayList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Return  new  ArrayList  <  String>(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Return  new  ArrayList  <  String>(requiredOptions.size());	  return    new    ArrayList    <    String>(requiredOptions.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
153	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(options,  cmd);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(options,  cmd);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(options,  cmd);	  List    <    String>    requiredOptions    =    getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
154	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(options,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(options,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(options,  options);	  List    <    String>    requiredOptions    =    getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
155	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions(this.options,  options);	  List    <    RequiredOption>    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
156	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  this.options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  this.options.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  this.options.getRequiredOptions();	  List    <    RequiredOption>    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
157	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  cmd.getRequiredOptions(this.options,  this.options);	  List    <    RequiredOption>    requiredOptions    =    cmd.getRequiredOptions(this.options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
158	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(cmd,  options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(cmd,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(cmd,  options);	  List    <    String>    requiredOptions    =    getRequiredOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
159	[BUG]  [BUGGY]  List  requiredOptions  =  this.cmd.getRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  this.cmd.getRequiredOptions(this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  this.cmd.getRequiredOptions(this.options);	  List    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
160	[BUG]  [BUGGY]  Set  <  RequiredOption>  requiredOptions  =  new  HashSet  <  RequiredOption>(size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Set  <  RequiredOption>  requiredOptions  =  new  HashSet  <  RequiredOption>(size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Set  <  RequiredOption>  requiredOptions  =  new  HashSet  <  RequiredOption>(size());	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
161	[BUG]  [BUGGY]  return  new  ArrayList  <  String>(reachedOptions.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  String>(reachedOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  String>(reachedOptions.size());	  return    new    ArrayList    <    String>(requiredOptions.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
162	[BUG]  [BUGGY]  Collections.EMPTY_LIST  ||  Arrays.asList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.EMPTY_LIST  ||  Arrays.asList(requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.EMPTY_LIST  ||  Arrays.asList(requiredOptions);	  Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
163	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getCmd().getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getCmd().getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getCmd().getRequiredOptions();	  List    <    String>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
164	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST  +  1;	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
165	[BUG]  [BUGGY]  Collections.sort(this.options,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.options,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.options,  requiredOptions);	  Collections.sort(requiredOptions,    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
166	[BUG]  [BUGGY]  return(List)getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(List)getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(List)getRequiredOptions();	  return(List)requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
167	[BUG]  [BUGGY]  return  new  ArrayList  <  RequiredOption>(reaquiredOptions.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  RequiredOption>(reaquiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  RequiredOption>(reaquiredOptions.size());	  return    new    ArrayList    <    RequiredOption>(requiredOptions.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
168	[BUG]  [BUGGY]  return  new  ArrayList  <  String>(this.requiredOptions.size()  -  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  String>(this.requiredOptions.size()  -  2);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  String>(this.requiredOptions.size()  -  2);	  return    new    ArrayList    <    String>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
169	[BUG]  [BUGGY]  return  parameters.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  parameters.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  parameters.getRequiredOptions();	  return    requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
170	[BUG]  [BUGGY]  List  requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  new  ArrayList(options.getRequiredOptions());	  List    requiredOptions    =    new    ArrayList(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
171	[BUG]  [BUGGY]  List  requiredOptions  =  new  ArrayList(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  new  ArrayList(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  new  ArrayList(this.requiredOptions);	  List    requiredOptions    =    new    ArrayList(cmd.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
172	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  Lists.newArrayList();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
173	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  Collections.EMPTY_LIST.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  Collections.EMPTY_LIST.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  Collections.EMPTY_LIST.getRequiredOptions();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
174	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(cmd  ==  null)  {  return  Lists.newArrayList();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
175	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  cmd.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  cmd.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(cmd  ==  null)  {  return  cmd.getRequiredOptions();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
176	[BUG]  [BUGGY]  if(cmd!=  null)  {  return  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(cmd!=  null)  {  return  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(cmd!=  null)  {  return  Lists.newArrayList();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
177	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(this.cmd.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(this.cmd.getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(this.cmd.getRequiredOptions());	  List    <    RequiredOption>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
178	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newLinkedList(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newLinkedList(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newLinkedList(this.requiredOptions);	  List    <    RequiredOption>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
179	[BUG]  [BUGGY]  return  parameters.values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  parameters.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  parameters.values();	  return    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
180	[BUG]  [BUGGY]  return(this.requiredOptions!=  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions!=  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions!=  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();	  return(this.requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
181	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  this.cmd.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  requiredOptions  =  this.cmd.getRequiredOptions();  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  requiredOptions  =  this.cmd.getRequiredOptions();	  List    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
182	[BUG]  [BUGGY]  Collections.sort(requiredOptions,  this.options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(requiredOptions,  this.options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(requiredOptions,  this.options);	  Collections.sort(requiredOptions,    cmd);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
183	[BUG]  [BUGGY]  Collections.sort(requiredOptions,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(requiredOptions,  null);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(requiredOptions,  null);	  Collections.sort(requiredOptions,    cmd);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
184	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(options);	  List    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
185	[BUG]  [BUGGY]  if(requiredOptions  ==  null  ||  requiredOptions.size()  ==  0)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions  ==  null  ||  requiredOptions.size()  ==  0)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions  ==  null  ||  requiredOptions.size()  ==  0)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();	  if(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
186	[BUG]  [BUGGY]  Set  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Set  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Set  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(size());	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
187	[BUG]  [BUGGY]  Collections.reverse(this.mv.requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.reverse(this.mv.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.reverse(this.mv.requiredOptions);	  Collections.reverse(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
188	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(this.defaultValues);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(this.defaultValues);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(this.defaultValues);	  List    <    String>    requiredOptions    =    getRequiredOptions(defaultValues);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
189	[BUG]  [BUGGY]  return  this.requiredOptions.getRequiredOptions(this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.requiredOptions.getRequiredOptions(this.options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.requiredOptions.getRequiredOptions(this.options);	  return    this.requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
190	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Lists.EMPTY_LIST  :  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Lists.EMPTY_LIST  :  Lists.newArrayList(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Lists.EMPTY_LIST  :  Lists.newArrayList(0);	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
191	[BUG]  [BUGGY]  return  this.neededOptions;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.neededOptions;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.neededOptions;	  return    neededOptions;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
192	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  requiredOptions;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  null  :  requiredOptions;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  null  :  requiredOptions;	  return(this.requiredOptions!=    null)?    null    :    this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
193	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(options!=  null)  {  return  options.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(options!=  null)  {  return  options.getOptions();  }	  return    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
194	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Arrays.asList(requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  Arrays.asList(requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  Arrays.asList(requiredOptions);	  List    <    String>    requiredOptions    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
195	[BUG]  [BUGGY]  List  requiredOptions  =  getRequiredOptions(options,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  getRequiredOptions(options,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  getRequiredOptions(options,  options);	  List    requiredOptions    =    getRequiredOptions(options);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
196	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(requiredOptions.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(requiredOptions.length);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(requiredOptions.length);	  List    <    RequiredOption>    requiredOptions    =    new    LinkedList    <    RequiredOption>();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
197	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false,  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(false,  false);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(false,  false);	  List    <    String>    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
198	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(this.requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(this.requiredOptions.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList  <  RequiredOption>(this.requiredOptions.size());	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList    <    RequiredOption>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
199	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.get(0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  requiredOptions.get(0);	  return(requiredOptions    ==    null)?    null    :    requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
200	[BUG]  [BUGGY]  return(this.md!=  null)?  null  :  this.md.requiredOptions;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.md!=  null)?  null  :  this.md.requiredOptions;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.md!=  null)?  null  :  this.md.requiredOptions;	  return    this.md.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
201	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(options.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(options.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayList(options.size());	  List    <    RequiredOption>    requiredOptions    =    Lists.newArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
202	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  expectedOptions.values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  expectedOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  expectedOptions.values();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
203	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  this.requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  this.requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  this.requiredOptions.getRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    else    {    requiredOptions.addAll(cmd.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
204	[BUG]  [BUGGY]  return  new  ArrayList  <  String>(redequiredOptions.size());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  ArrayList  <  String>(redequiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  ArrayList  <  String>(redequiredOptions.size());	  return    new    ArrayList    <    String>(requiredOptions.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
205	[BUG]  [BUGGY]  if(cmd!=  null)  {  requiredOptions  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(cmd!=  null)  {  requiredOptions  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(cmd!=  null)  {  requiredOptions  =  Lists.newArrayList();  }	  if(cmd!=    null)    {    return    cmd.getRequiredOptions();    }    else    {    requiredOptions    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
206	[BUG]  [BUGGY]  return  requiredOptions  ==  null?  null  :  requiredOptions.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  requiredOptions  ==  null?  null  :  requiredOptions.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  requiredOptions  ==  null?  null  :  requiredOptions.getRequiredOptions();	  return    requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
207	[BUG]  [BUGGY]  return  requiredOptions  ==  null?  Collections.EMPTY_LIST  :  requiredOptions.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  requiredOptions  ==  null?  Collections.EMPTY_LIST  :  requiredOptions.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  requiredOptions  ==  null?  Collections.EMPTY_LIST  :  requiredOptions.getRequiredOptions();	  return    requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
208	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  requiredOptions.getRequiredOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(cmd  ==  null)  {  return  requiredOptions.getRequiredOptions();  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
209	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayListWithCapacity(size()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  Lists.newArrayListWithCapacity(size()  -  1);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  Lists.newArrayListWithCapacity(size()  -  1);	  List    <    RequiredOption>    requiredOptions    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
210	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getAllRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(requiredOptions!=  null)  {  return  requiredOptions.getAllRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(requiredOptions!=  null)  {  return  requiredOptions.getAllRequiredOptions();  }  else  {  requiredOptions.addAll(cmd.getRequiredOptions());  }	  if(cmd!=    null)    {    return    requiredOptions.getRequiredOptions();    }    else    {    requiredOptions.addAll(cmd.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
211	[BUG]  [BUGGY]  return  this.requiredOptions!=  null?  this.requiredOptions.getRequiredOptions()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.requiredOptions!=  null?  this.requiredOptions.getRequiredOptions()  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.requiredOptions!=  null?  this.requiredOptions.getRequiredOptions()  :  Collections.EMPTY_LIST;	  return    this.requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
212	[BUG]  [BUGGY]  return  this.requiredOptions!=  null?  this.requiredOptions.getRequiredOptions()  :  Collections.EMPTY;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  this.requiredOptions!=  null?  this.requiredOptions.getRequiredOptions()  :  Collections.EMPTY;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  this.requiredOptions!=  null?  this.requiredOptions.getRequiredOptions()  :  Collections.EMPTY;	  return    this.requiredOptions.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
213	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(Arrays.asList(requiredOptions));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(Arrays.asList(requiredOptions));  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  LinkedList  <  RequiredOption>(Arrays.asList(requiredOptions));	  List    <    RequiredOption>    requiredOptions    =    new    LinkedList    <    RequiredOption>();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
214	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList(requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =  new  ArrayList(requiredOptions.size()  +  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =  new  ArrayList(requiredOptions.size()  +  1);	  List    <    RequiredOption>    requiredOptions    =    new    ArrayList(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
215	[BUG]  [BUGGY]  return  new  TreeSet  <  RequiredOption>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  TreeSet  <  RequiredOption>(requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  TreeSet  <  RequiredOption>(requiredOptions.size());	  return    new    ArrayList    <    RequiredOption>(requiredOptions.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
216	[BUG]  [BUGGY]  return  requiredOptions  ==  null?  Collections.EMPTY_LIST  :  requiredOptions.values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  requiredOptions  ==  null?  Collections.EMPTY_LIST  :  requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  requiredOptions  ==  null?  Collections.EMPTY_LIST  :  requiredOptions.values();	  return    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
217	[BUG]  [BUGGY]  Collections.EMPTY_LIST  ||  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.EMPTY_LIST  ||  Collections.EMPTY_LIST;  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.EMPTY_LIST  ||  Collections.EMPTY_LIST;	  Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
218	[BUG]  [BUGGY]  Collections.EMPTY_LIST  =  new  ArrayList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.EMPTY_LIST  =  new  ArrayList  <  String>(requiredOptions.size());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.EMPTY_LIST  =  new  ArrayList  <  String>(requiredOptions.size());	  Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
219	[BUG]  [BUGGY]  Collections.reverse(this.cmd,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.reverse(this.cmd,  requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.reverse(this.cmd,  requiredOptions);	  Collections.reverse(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
220	[BUG]  [BUGGY]  return  new  LinkedList  <  RequiredOption>(this.requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return  new  LinkedList  <  RequiredOption>(this.requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return  new  LinkedList  <  RequiredOption>(this.requiredOptions.size());	  return    new    ArrayList    <    RequiredOption>(this.requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
221	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.values().size();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  null  :  requiredOptions.values().size();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  null  :  requiredOptions.values().size();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.size();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
222	[BUG]  [BUGGY]  List  <  RequiredOption>  requiredOptions  =(List)this.requiredOptions.values();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  RequiredOption>  requiredOptions  =(List)this.requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  RequiredOption>  requiredOptions  =(List)this.requiredOptions.values();	  return(List)requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
223	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  requiredOptions.values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  requiredOptions.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  requiredOptions.values();	  return(requiredOptions    ==    null)?    null    :    requiredOptions.values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
224	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Collections.synchronizedList(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  Collections.synchronizedList(this.requiredOptions);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  Collections.synchronizedList(this.requiredOptions);	  List    <    String>    requiredOptions    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
225	[BUG]  [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(7);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(7);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(7);	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
226	[BUG]  [BUGGY]  Collections.sort(this.md,  requiredOptions,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(this.md,  requiredOptions,  options);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(this.md,  requiredOptions,  options);	  Collections.sort(requiredOptions,    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
227	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(this.cmd.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(this.cmd.getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(this.cmd.getRequiredOptions());	  List    <    String>    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
228	[BUG]  [BUGGY]  List  requiredOptions  =  new  ArrayList(this.cmd.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  requiredOptions  =  new  ArrayList(this.cmd.getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  requiredOptions  =  new  ArrayList(this.cmd.getRequiredOptions());	  List    requiredOptions    =    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
229	[BUG]  [BUGGY]  Collections.emptyList(getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.emptyList(getRequiredOptions());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.emptyList(getRequiredOptions());	  Collections.emptyList(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
230	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  getRequiredOptions(true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  getRequiredOptions(true);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  <  String>  requiredOptions  =  getRequiredOptions(true);	  List    <    String>    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
231	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  getRequiredOptions(true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  ArrayList  requiredOptions  =  getRequiredOptions(true);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	ArrayList  requiredOptions  =  getRequiredOptions(true);	  List    requiredOptions    =    getRequiredOptions(true);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
232	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  defaultValues);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  defaultValues);  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	List  <  String>  requiredOptions  =  getRequiredOptions(defaultValues,  defaultValues);	  List    <    String>    requiredOptions    =    getRequiredOptions(defaultValues);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
233	[BUG]  [BUGGY]  return(this.md!=  null?  this.md.requiredOptions  :  Collections.EMPTY_LIST);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.md!=  null?  this.md.requiredOptions  :  Collections.EMPTY_LIST);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.md!=  null?  this.md.requiredOptions  :  Collections.EMPTY_LIST);	  return    this.md.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
234	[BUG]  [BUGGY]  return(this.md  ==  null)?  this.md.requiredOptions  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.md  ==  null)?  this.md.requiredOptions  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.md  ==  null)?  this.md.requiredOptions  :  Collections.EMPTY_LIST;	  return    this.md.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
235	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.cmd  ==  null)?  null  :  this.cmd.getRequiredOptions();	  return    this.cmd.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
236	[BUG]  [BUGGY]  Return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Return(requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>();	  return(requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
237	[BUG]  [BUGGY]  if(this.requiredOptions!=  null)?  null  :  this.requiredOptions;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  if(this.requiredOptions!=  null)?  null  :  this.requiredOptions;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	if(this.requiredOptions!=  null)?  null  :  this.requiredOptions;	  return(this.requiredOptions!=    null)?    null    :    this.requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
238	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  new  ArrayList  <  String>()  :  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  new  ArrayList  <  String>()  :  new  ArrayList  <  String>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  new  ArrayList  <  String>()  :  new  ArrayList  <  String>();	  return(this.requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
239	[BUG]  [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(8);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	return(this.requiredOptions  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  String>(8);	  return(this.requiredOptions    ==    null)?    Collections.EMPTY_LIST    :    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
240	[BUG]  [BUGGY]  Collections.sort(requiredOptions,  new  LinkedList  <  CommandLine>());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  List  getRequiredOptions()  {      [BUGGY]  Collections.sort(requiredOptions,  new  LinkedList  <  CommandLine>());  [BUGGY]      return  requiredOptions;  }  [CLASS]  Parser  [METHOD]  getRequiredOptions  [RETURN_TYPE]  List  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	59	59	1	replace	Collections.sort(requiredOptions,  new  LinkedList  <  CommandLine>());	  Collections.sort(requiredOptions,    cmd);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
