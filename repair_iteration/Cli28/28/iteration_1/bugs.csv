bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  options.getOptionGroup();  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	60	None	add
2	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(opt);  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  options.getOptionGroup(opt);		non-compiled	[CE]  illegal  start  of  type	60	None	add
3	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  options.getOptions();  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	60	None	add
4	[BUG]  [BUGGY]    OptionGroup  group  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  cmd.getOptions();  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  cmd.getOptions();		non-compiled	[CE]  illegal  start  of  type	60	None	add
5	[BUG]  [BUGGY]    OptionGroup  group  =(OptionGroup)opts.get(group);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =(OptionGroup)opts.get(group);  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =(OptionGroup)opts.get(group);		non-compiled	[CE]  illegal  start  of  type	60	None	add
6	[BUG]  [BUGGY]  if(arguments!=  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]  if(arguments!=  null)  {  [BUGGY]  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	if(arguments!=  null)  {	if  (arguments  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	59	None	replace
7	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]  if(arguments  ==  null  ||  arguments.length  ==  0)  {  [BUGGY]  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	if(arguments  ==  null  ||  arguments.length  ==  0)  {	if  (arguments  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	59	None	replace
8	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(cmd);  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  options.getOptionGroup(cmd);		non-compiled	[CE]  illegal  start  of  type	60	None	add
9	[BUG]  [BUGGY]    OptionGroup  group  =  cmd.getOptionGroup();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  cmd.getOptionGroup();  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  cmd.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	60	None	add
10	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]  if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	    OptionGroup  group  =  options.getOptionGroup(true);		non-compiled	[CE]  illegal  start  of  type	60	None	add
11	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  2)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  2)  {  [BUGGY]  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	167	168	1	replace	if(arguments  ==  null  ||  arguments.length  <  2)  {	if  (arguments  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	59	None	replace
