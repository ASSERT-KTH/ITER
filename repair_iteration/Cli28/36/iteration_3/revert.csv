projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!getOptions().hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!getOptions().hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||!getOptions().hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!getOptions().hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!getOptions().hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.getIterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.nextToken();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=t.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||!getOptions().hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith("--")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith("-)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(arguments[t.toString()])){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=t.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&it.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.startsWith("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=t.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=t.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!opts.isEmpty()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!opts.hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.lastIndexOf("-"));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.previous();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&options.hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()).trim();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203OptionGroupgroup=options.getOptionGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!getOptions().isEmpty(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(".")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||group.equals(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.remove();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||!getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=preferredOptions.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||iterator.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&iterator.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.hasNext()||it.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith("--)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&options.isEmpty()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!opts.isEmpty()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!options.isEmpty()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=opt.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!opts.hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!opts.contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&options.hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=str.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=opts.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||arguments.startsWith(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-2);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=opts.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=this.options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.lastIndexOf("-")+1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.lastIndexOf("-$"));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.lastIndexOf("-")));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(":")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=optionList.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!opts.contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&it.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!getOptions().isEmpty(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||!getOptions().isEmpty(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&!getOptions().isEmpty(t)||eatTheRest){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=opts.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&options.hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&options.hasOption(t)||stopAtNonOption){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption||options.hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.startsWith("--")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.startsWith("-")||iterator.startsWith("--")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||iterator.startsWith("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=opt.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=this.requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203OptionGroupgroup=options.getOptionGroup(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203OptionGroupgroup=options.getOptionGroup(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203OptionGroupgroup=options.getOptionGroup(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().contains(t)||arguments.length>0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption||getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.first();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=this.requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||arguments[t.toString()].equals("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||arguments[t.toString()].startsWith("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(arguments[t.toString()+1])){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=this.arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=t.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&group.equals(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(group||stopAtNonOption.equals(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||arguments.equals(group)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&group.equals(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.nextToken().trim();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.nextToken().toString();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-1));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-2));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||getOptions().contains(t)&&arguments.length>0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.getIterator(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-1).trim();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-2).trim();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-1,t.length()).trim();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||it.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&getOptions().contains(t)||arguments.length>0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&getOptions().contains(t,iterator)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=opt.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(opts.hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.nextToken()+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.getToken();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&getOptions().hasArg(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().hasOption(t,str)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().contains(t,iterator)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(opts.isEmpty()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||!opts.isEmpty()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=arguments.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.startsWith("-")||stopAtNonOption){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.startsWith("--")||stopAtNonOption){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(group||stopAtNonOption&&arguments.equals(group)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(group||stopAtNonOption&&group.equals(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(arguments["--")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=requiredOptions.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=opt.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||options.hasOption(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=requiredOptions.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=option.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(eatTheRest&&iterator.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!eatTheRest){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&!opts.contains("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=getOptions().keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-4);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.getIterator(0);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(eatTheRest||getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||getOptions().contains(t)||arguments.length==0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=neededOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(eatTheRest||stopAtNonOption&&iterator.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<String>iterator=this.opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.peek();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=options.getOptions().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&options.hasOption(t,str)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&options.hasOption(t,iterator)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&options.hasOption(t)&&iterator.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(eatTheRest||stopAtNonOption&&it.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(eatTheRest&&it.hasNext()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().hasOption(t)||stopAtNonOption){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=this.opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.firstToken();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().contains(t)||str.startsWith("-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&getOptions().isEmpty(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption||getOptions().isEmpty(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(!stopAtNonOption&&getOptions().isEmpty(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(stopAtNonOption&&iterator.startsWith(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203OptionGroupgroup=options.getOptionGroup(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203OptionGroupgroup=options.getOptionGroup(t,this);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203||t.startsWith(".-")){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Stringstr=t.substring(0,t.length()-3);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(opt.stopAtNonOption||getOptions().contains(t)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iteratoriterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.requires();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203t=iterator.toString();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203if(eatTheRest||group.equals(arguments)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java203Iterator<Option>iterator=preferredOptions.keySet().iterator();
