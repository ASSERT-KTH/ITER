bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  [BUGGY]  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {	else  if  (!( "yes ".equalsIgnoreCase(value)    ||   "true ".equalsIgnoreCase(value)      ||   "1 ".equalsIgnoreCase(value)))  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  [BUGGY]  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	else  if(!( "yes ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {	else  if  (!( "yes ".equalsIgnoreCase(value)    ||   "true ".equalsIgnoreCase(value)      ||   "1 ".equalsIgnoreCase(value)))  	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    [BUGGY]  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	  	else  if  (!( "yes ".equalsIgnoreCase(value)    ||   "true ".equalsIgnoreCase(value)      ||   "1 ".equalsIgnoreCase(value)))  	non-compiled	[CE]  not  a  statement	1	None	replace
4	[BUG]  [BUGGY]    e.printStackTrace();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    e.printStackTrace();  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    e.printStackTrace();		non-compiled	[CE]  	2	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(opt);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  cmd  =  options.getOption(opt);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  cmd  =  options.getOption(opt);		non-compiled	[CE]  	2	None	add
6	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  [FE]        AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  	2	None	add
7	[BUG]  [BUGGY]    Option  cmd  =  getOption(opt);  [CE]  [FE]          AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  cmd  =  getOption(opt);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  cmd  =  getOption(opt);		non-compiled	[CE]  	2	None	add
8	[BUG]  [BUGGY]    Option  option  =  getOption(opt);  [CE]  [FE]            AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  option  =  getOption(opt);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  option  =  getOption(opt);		non-compiled	[CE]  	2	None	add
9	[BUG]  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [CE]  [FE]    AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase  [BUGGY]  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase	else  if  (!( "yes ".equalsIgnoreCase(value)    ||   "true ".equalsIgnoreCase(value)      ||   "1 ".equalsIgnoreCase(value)))  	non-compiled	[CE]  	1	None	replace
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(value);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  option  =  options.getOption(value);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  option  =  options.getOption(value);		non-compiled	[CE]  	2	None	add
11	[BUG]  [BUGGY]    Option  cmd  =  option.getOption(opt);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  cmd  =  option.getOption(opt);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  cmd  =  option.getOption(opt);		non-compiled	[CE]  	2	None	add
12	[BUG]  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]  else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {  [BUGGY]  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	else  if(!( "yes ".equalsIgnoreCase(value)||   "true ".equalsIgnoreCase(value)||   "false ".equalsIgnoreCase(value)||   "1 ".equalsIgnoreCase(value)))  {	else  if  (!( "yes ".equalsIgnoreCase(value)    ||   "true ".equalsIgnoreCase(value)      ||   "1 ".equalsIgnoreCase(value)))  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]    Option  option  =  options.getOption(option);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Option  option  =  options.getOption(option);  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Option  option  =  options.getOption(option);		non-compiled	[CE]  	2	None	add
14	[BUG]  [BUGGY]    Context.reportCodeChange();  [CE]  [FE]      AssertionFailedError  [CONTEXT]  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  }  }  }  [BUGGY]    Context.reportCodeChange();  [BUGGY]  else  if  (!( "yes ".equalsIgnoreCase(value)      ||   "true ".equalsIgnoreCase(value)            ||   "1 ".equalsIgnoreCase(value)))  ||   "true ".equalsIgnoreCase(value)  ||   "1 ".equalsIgnoreCase(value)))  {    break;  }  cmd.addOption(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	1.0	284	286	1	replace	    Context.reportCodeChange();		non-compiled	[CE]  	2	None	add
