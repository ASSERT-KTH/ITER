bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Option  cmd  =  options.getOption(option);  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Option  cmd  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	26	None	add
2	[BUG]  [BUGGY]    Option  cmd  =  e.getOption(option);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Option  cmd  =  e.getOption(option);  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Option  cmd  =  e.getOption(option);		non-compiled	[CE]  illegal  start  of  type	26	None	add
3	[BUG]  [BUGGY]    Option  cmd  =  e.getOption();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Option  cmd  =  e.getOption();  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Option  cmd  =  e.getOption();		non-compiled	[CE]  illegal  start  of  type	26	None	add
4	[BUG]  [BUGGY]    String  cmd  =  e.getCmd();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    String  cmd  =  e.getCmd();  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    String  cmd  =  e.getCmd();		non-compiled	[CE]  illegal  start  of  type	26	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  getOption(option);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Option  cmd  =  getOption(option);  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Option  cmd  =  getOption(option);		non-compiled	[CE]  illegal  start  of  type	26	None	add
6	[BUG]  [BUGGY]  if(option!=  null  ||!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(option!=  null  ||!cmd.hasOption(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(option!=  null  ||!cmd.hasOption(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
7	[BUG]  [BUGGY]  if(!cmd.hasArg())  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(!cmd.hasArg())  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(!cmd.hasArg())  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  if(!cmd.hasOption(option)&&!properties.containsKey(option))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(!cmd.hasOption(option)&&!properties.containsKey(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(!cmd.hasOption(option)&&!properties.containsKey(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
9	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  e.getCmd();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Enumeration  <  String>  cmd  =  e.getCmd();  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Enumeration  <  String>  cmd  =  e.getCmd();		non-compiled	[CE]  illegal  start  of  type	26	None	add
10	[BUG]  [BUGGY]    Enumeration  <  String>  options  =  e.getOptions();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Enumeration  <  String>  options  =  e.getOptions();  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Enumeration  <  String>  options  =  e.getOptions();		non-compiled	[CE]  illegal  start  of  type	26	None	add
11	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  e.getArgs();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Enumeration  <  String>  cmd  =  e.getArgs();  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Enumeration  <  String>  cmd  =  e.getArgs();		non-compiled	[CE]  illegal  start  of  type	26	None	add
12	[BUG]  [BUGGY]  if(option  ==  null  ||!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(option  ==  null  ||!cmd.hasOption(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(option  ==  null  ||!cmd.hasOption(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
13	[BUG]  [BUGGY]  if(option!=  null  &&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(option!=  null  &&!cmd.hasOption(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(option!=  null  &&!cmd.hasOption(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  if(cmd  ==  null  ||!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(cmd  ==  null  ||!cmd.hasOption(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(cmd  ==  null  ||!cmd.hasOption(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
15	[BUG]  [BUGGY]  if(cmd!=  null  &&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(cmd!=  null  &&!cmd.hasOption(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(cmd!=  null  &&!cmd.hasOption(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
16	[BUG]  [BUGGY]  if(!cmd.hasOption(option)||!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]  if(!cmd.hasOption(option)||!cmd.hasOption(option))  {  [BUGGY]  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	if(!cmd.hasOption(option)||!cmd.hasOption(option))  {	if  (!cmd.hasOption(option))  {  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
17	[BUG]  [BUGGY]    Option  cmd  =(Option)e.nextElement();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  [BUGGY]    Option  cmd  =(Option)e.nextElement();  [BUGGY]  if  (!cmd.hasOption(option))    {  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5	263	264	1	replace	    Option  cmd  =(Option)e.nextElement();		non-compiled	[CE]  illegal  start  of  type	26	None	add
