bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(Options)options;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)options;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)options;	  return(Options)requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  return(Options)this.requiredOptions;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.requiredOptions;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.requiredOptions;	  return(Options)requiredOptions;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "_options ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "_options ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "_options ");	  Option    options    =    cmd.getOption(   ".options   ");    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  return(Options)this.options.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.options.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.options.get(0);	  return(Options)this.options.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ", "required ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ", "required ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ", "required ");	  Option    option    =    cmd.getOption(   "options   ",    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  Options  options  =  getOptions(false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(false);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(false);	  Options    options    =    getOptions(true);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
7	[BUG]  [BUGGY]  Options  options  =  getOptions(false,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(false,  cmd);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(false,  cmd);	  Options    options    =    getOptions(true);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  Option  options  =  getOptions(false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(false);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(false);	  Options    options    =    getOptions(true);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
9	[BUG]  [BUGGY]  Option  options  =  getOptions(false,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(false,  cmd);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(false,  cmd);	  Options    options    =    getOptions(true);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
10	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ",  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ",  null);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ",  null);	  Option    option    =    cmd.getOption(   "options   ",    options);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
11	[BUG]  [BUGGY]  Option  options  =  this.requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  this.requiredOptions.getOptions();  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  this.requiredOptions.getOptions();	  Option    options    =    requiredOptions.getOptions();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
12	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions(requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions(requiredOptions);	  Option    options    =    requiredOptions.getOptions();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
13	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions(this.options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  cmd.getOptions(this.options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  cmd.getOptions(this.options);	  Options    options    =    cmd.getOptions(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
14	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions(this.options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions(this.options);	  Options    options    =    cmd.getOptions(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
15	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  cmd.getOptions(this.commandLine);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  cmd.getOptions(this.commandLine);	  Options    options    =    cmd.getOptions(requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
16	[BUG]  [BUGGY]  For(Option  option  :  options.values())  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  For(Option  option  :  options.values())  {  cmd.addOption(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	For(Option  option  :  options.values())  {  cmd.addOption(option);  }	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
17	[BUG]  [BUGGY]  Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
18	[BUG]  [BUGGY]  Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions!=  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions!=  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions!=  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
19	[BUG]  [BUGGY]  Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option,  requiredOptions);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option,  requiredOptions);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  getRequiredOptions();  if(requiredOptions  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option,  requiredOptions);  }	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
20	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  options.get(0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  options.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  options.get(0);	  return(options    ==    null)?    options    :    options.size();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  options.get(options.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  options.get(options.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  options.get(options.size());	  return(options    ==    null)?    options    :    options.size();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  options.values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  options.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  options.values();	  return(options    ==    null)?    options    :    options.size();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  cmd.getOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  cmd.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd  ==  null)  {  return  cmd.getOptions();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
24	[BUG]  [BUGGY]  if(cmd!=  null)  {  return  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(cmd!=  null)  {  return  options.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd!=  null)  {  return  options.getOptions();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
25	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_LIST  +  1;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Options.EMPTY_LIST  +  1;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
26	[BUG]  [BUGGY]  Return(options  ==  null)?  null  :  options.values();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Return(options  ==  null)?  null  :  options.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Return(options  ==  null)?  null  :  options.values();	  return(options!=    null)?    null    :    options.values();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  requiredOptions.size());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  requiredOptions.size());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  requiredOptions.size());  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  options.size());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  options.size());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  options.size());  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  options.size());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  options.size());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  options.size());  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_ARRAY;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Options.EMPTY_ARRAY;	  return(options    ==    null)?    options    :    Collections.EMPTY_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
31	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  options.getOptions();	  return(options    ==    null)?    options    :    Collections.EMPTY_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
32	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  neededOptions.size());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  neededOptions.size());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  neededOptions.size());  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    neededOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "opts ",  requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "opts ",  requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "opts ",  requiredOptions);	  Option    options    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "opt ",  requiredOptions);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "opt ",  requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "opt ",  requiredOptions);	  Option    options    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  Option  options  =(Option)this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =(Option)this.cmd.getOptions();  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =(Option)this.cmd.getOptions();	  Option    options    =    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
36	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "_options ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "_options ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "_options ");	  Option    option    =    cmd.getOption(   ".options   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  Options  options  =  this.requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  this.requiredOptions.getOptions();  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  this.requiredOptions.getOptions();	  Options    options    =    requiredOptions.getOptions();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getValue();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getValue();	  return(options    ==    null)?    null    :    options.required();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
39	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ",  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ",  true);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ",  true);	  Option    option    =    cmd.getOption(   "options   ",    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ", "false ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ", "false ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ", "false ");	  Option    option    =    cmd.getOption(   "options   ",    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "options "  + ",  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "options "  + ",  requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "options "  + ",  requiredOptions);	  Option    options    =    cmd.getOption(   "options   ",    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions(this.commandLine,  this.requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  cmd.getOptions(this.commandLine,  this.requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  cmd.getOptions(this.commandLine,  this.requiredOptions);	  Options    options    =    cmd.getOptions(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
43	[BUG]  [BUGGY]  Options  options  =  this.requiredOptions.getOptions(cmd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  this.requiredOptions.getOptions(cmd);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  this.requiredOptions.getOptions(cmd);	  Options    options    =    cmd.getOptions(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
44	[BUG]  [BUGGY]  Option  options  =  getOptions(true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(true);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(true);	  Option    options    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
45	[BUG]  [BUGGY]  return  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return  this.options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return  this.options.getOptions();	  return    this.mad.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
46	[BUG]  [BUGGY]  return  this.requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return  this.requiredOptions.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return  this.requiredOptions.getOptions();	  return    this.mad.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
47	[BUG]  [BUGGY]  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  options  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	options  =  options.getOptions();	  if(options    ==    null)    {    requiredOptions    =    options.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
48	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  options.getOptions();	  if(options    ==    null)    {    requiredOptions    =    options.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
49	[BUG]  [BUGGY]  Option  requiredOptions  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  requiredOptions  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  requiredOptions  =  options.getOptions();	  if(options    ==    null)    {    requiredOptions    =    options.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.getOptions();	  if(options    ==    null)    {    requiredOptions    =    options.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
51	[BUG]  [BUGGY]  this.options  =(Options)this.options.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  this.options  =(Options)this.options.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	this.options  =(Options)this.options.clone();	  if(this.options!=    null)    {    return(Options)this.options;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
52	[BUG]  [BUGGY]  options  =(Options)this.options.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  options  =(Options)this.options.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	options  =(Options)this.options.clone();	  if(this.options!=    null)    {    return(Options)this.options;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
53	[BUG]  [BUGGY]  this.options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  this.options  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	this.options  =  options.getOptions();	  if(this.options!=    null)    {    return(Options)this.options;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
54	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  +  1]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  +  1]);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  +  1]);	  return(options    ==    null)?    null    :    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
55	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  -  1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  -  1]);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  -  1]);	  return(options    ==    null)?    null    :    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
56	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  ],  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  ],  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  ],  requiredOptions);	  return(options    ==    null)?    null    :    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
57	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.size()  +  1;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.size()  +  1;	  return(options    ==    null)?    null    :    options.size();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getRequiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getRequiredOptions();	  return(options    ==    null)?    null    :    options.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
59	[BUG]  [BUGGY]  return(Options)requiredOptions.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)requiredOptions.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)requiredOptions.get(0);	  return(Options)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
60	[BUG]  [BUGGY]  return(Options)this.options.get(1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.options.get(1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.options.get(1);	  return(Options)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
61	[BUG]  [BUGGY]  Option[]  options  =  options.values();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  options  =  options.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  options  =  options.values();	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
62	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  options  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  options  =  options.getOptions();	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
63	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.values();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  options.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  options.values();	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
64	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.get(option);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  options.get(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  options.get(option);	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
65	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions(options);	  Options    options    =    requiredOptions.getOptions(options);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
66	[BUG]  [BUGGY]  options  =  cmd.getOptions(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  options  =  cmd.getOptions(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	options  =  cmd.getOptions(options);	  Options    options    =    requiredOptions.getOptions(options);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
67	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.get(1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.get(1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.get(1);	  return(options    ==    null)?    null    :    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
68	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  null  :  options.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  null  :  options.get(0);	  return(options    ==    null)?    null    :    options.get(0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
69	[BUG]  [BUGGY]  Options  options  =  getOptions(commandLine);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(commandLine);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(commandLine);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
70	[BUG]  [BUGGY]  Options  options  =  getOptions(defaultOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(defaultOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(defaultOptions);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
71	[BUG]  [BUGGY]  Options  options  =  getOptions(defaultOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(defaultOption);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(defaultOption);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
72	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    else    {    requiredOptions    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
73	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(requiredOptions  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    else    {    requiredOptions    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
74	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getOptions();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(requiredOptions  ==  null)  {  return  cmd.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(requiredOptions  ==  null)  {  return  cmd.getOptions();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    else    {    requiredOptions    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
75	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.get(options.size()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.get(options.size()  -  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.get(options.size()  -  1);	  return(options    ==    null)?    null    :    options.get(options.size());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
76	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.get(options.size()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.get(options.size()  +  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.get(options.size()  +  1);	  return(options    ==    null)?    null    :    options.get(options.size());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
77	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  requiredOptions.length);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  requiredOptions.length);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  requiredOptions,  0,  requiredOptions.length);  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
78	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.toArray(new  Option[requiredOptions.size()  ]);  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  options.toArray(new  Option[requiredOptions.size()  ]);  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  options.toArray(new  Option[requiredOptions.size()  ]);  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
79	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.get(0);  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  options.get(0);  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  options.get(0);  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
80	[BUG]  [BUGGY]  return(Options)this.super.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.super.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.super.getOptions();	  return(Options)super.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  return(Options)this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.options.getOptions();	  return(Options)super.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  return(Options)this.requiredOptions.get();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.requiredOptions.get();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.requiredOptions.get();	  return(Options)super.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
83	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  null  :  options.keySet();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  null  :  options.keySet();	  return(options    ==    null)?    null    :    options.keySet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ".toString());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ".toString());  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ".toString());	  Option    option    =    cmd.getOption(   "options.   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
85	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options, ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options, ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options, ");	  Option    option    =    cmd.getOption(   "options.   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
86	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getSelectedOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getSelectedOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getSelectedOptions();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
87	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getParser();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getParser();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getParser();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
88	[BUG]  [BUGGY]  return(Options)this.requiredOptions.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.requiredOptions.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.requiredOptions.clone();	  return(Options)requiredOptions.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Option.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  Option.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Option.EMPTY_LIST;	  return(options    ==    null)?    options    :    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_PREFIX;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_PREFIX;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Options.EMPTY_PREFIX;	  return(options    ==    null)?    options    :    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  return(options!=  null)?  options  :  Options.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  options  :  Options.EMPTY_LIST;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  options  :  Options.EMPTY_LIST;	  return(options    ==    null)?    options    :    Options.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options!=  null)  {  return  options.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options!=  null)  {  return  options.getOptions();  }	  return    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
93	[BUG]  [BUGGY]  Option  options  =  this.cmd.getOptions();  requiredOptions.add(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  this.cmd.getOptions();  requiredOptions.add(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  this.cmd.getOptions();  requiredOptions.add(options);	  Option    options    =    cmd.getOptions();    requiredOptions.add(options);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions();  requiredOptions.addAll(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions();  requiredOptions.addAll(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions();  requiredOptions.addAll(options);	  Option    options    =    cmd.getOptions();    requiredOptions.add(options);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "opt ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "opt ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "opt ");	  Option    option    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
96	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "required_options ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "required_options ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "required_options ");	  Option    option    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
97	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  cmd  =  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  cmd  =  options.getOptions();	  Option    cmd    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
98	[BUG]  [BUGGY]  Option  cmd  =  getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  cmd  =  getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  cmd  =  getOptions();	  Option    cmd    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
99	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  cmd  =  this.options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  cmd  =  this.options.getOptions();	  Option    cmd    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
100	[BUG]  [BUGGY]  Option  cmd  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  cmd  =  option.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  cmd  =  option.getOptions();	  Option    cmd    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
101	[BUG]  [BUGGY]  Option  options  =  getOptions(commandLine);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(commandLine);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(commandLine);	  Option    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
102	[BUG]  [BUGGY]  Option  options  =  getOptions(cmd,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(cmd,  requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(cmd,  requiredOptions);	  Option    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
103	[BUG]  [BUGGY]  Option  options  =  getOptions(defaultOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(defaultOption);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(defaultOption);	  Option    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
104	[BUG]  [BUGGY]  options  =  new  ArrayList  <  Option>();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  options  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	options  =  new  ArrayList  <  Option>();	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
105	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
106	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions(this.commandLine);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions(this.commandLine);	  Option    options    =    cmd.getOptions(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
107	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(this.commandLine,  this.requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions(this.commandLine,  this.requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions(this.commandLine,  this.requiredOptions);	  Option    options    =    cmd.getOptions(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
108	[BUG]  [BUGGY]  Option  options  =  this.requiredOptions.getOptions(cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  this.requiredOptions.getOptions(cmd);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  this.requiredOptions.getOptions(cmd);	  Option    options    =    cmd.getOptions(this.requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
109	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options,  cmd);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null)?  options  :  new  Options(this.options,  cmd);	  return(this.options    ==    null)?    options    :    new    Options(this.options);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
110	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null)?  options  :  new  Options(this.options,  requiredOptions);	  return(this.options    ==    null)?    options    :    new    Options(this.options);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
111	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options,  this.options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options,  this.options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null)?  options  :  new  Options(this.options,  this.options);	  return(this.options    ==    null)?    options    :    new    Options(this.options);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
112	[BUG]  [BUGGY]  return(this.options  ==  null?  this.options  :  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options  ==  null?  this.options  :  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null?  this.options  :  options);	  return(this.options    ==    null?    options    :    this.options);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
113	[BUG]  [BUGGY]  return(this.options!=  null?  options  :  this.options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options!=  null?  options  :  this.options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options!=  null?  options  :  this.options);	  return(this.options    ==    null?    options    :    this.options);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
114	[BUG]  [BUGGY]  if(this.cmd!=  null)  {  return  this.cmd.getOptions();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(this.cmd!=  null)  {  return  this.cmd.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(this.cmd!=  null)  {  return  this.cmd.getOptions();  }	  return    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
115	[BUG]  [BUGGY]  if(this.cmd!=  null)  {  return  cmd.getOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(this.cmd!=  null)  {  return  cmd.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(this.cmd!=  null)  {  return  cmd.getOptions();  }	  return    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
116	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "options ",  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "options ",  null);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "options ",  null);	  Option    options    =    cmd.getOption(   "options   ",    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
117	[BUG]  [BUGGY]  Options  options  =  this.requiredOptions.getOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  this.requiredOptions.getOptions(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  this.requiredOptions.getOptions(options);	  Options    options    =    requiredOptions.getOptions(options);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  if(cmd  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.EMPTYList();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(cmd  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.EMPTYList();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd  ==  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.EMPTYList();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    else    {    requiredOptions    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
119	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_OBJECT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_OBJECT;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Collections.EMPTY_OBJECT;	  return(options    ==    null)?    options    :    Collections.EMPTY_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
120	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  null  :  options.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  null  :  options.getOptions();	  return(options!=    null)?    null    :    options.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
121	[BUG]  [BUGGY]  Option  options  =  getOptions(defaultOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(defaultOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(defaultOptions);	  Option    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
122	[BUG]  [BUGGY]  Option  options  =  getOptions(options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(options);	  Option    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
123	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  expectedOptions,  0,  requiredOptions.length);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  expectedOptions,  0,  requiredOptions.length);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  expectedOptions,  0,  requiredOptions.length);  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
124	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  options,  0,  requiredOptions.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  options  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  options,  0,  requiredOptions.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  options  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  options,  0,  requiredOptions.length);	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
125	[BUG]  [BUGGY]  return(Options)requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)requiredOptions.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)requiredOptions.getOptions();	  return(Options)super.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
126	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions( "options ",  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOptions( "options ",  requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions( "options ",  requiredOptions);	  Option    options    =    cmd.getOptions(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
127	[BUG]  [BUGGY]  requiredOptions  =  new  ArrayList  <  Option>();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  requiredOptions  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	requiredOptions  =  new  ArrayList  <  Option>();	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
128	[BUG]  [BUGGY]  return(this.options!=  null?  this.options  :  options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options!=  null?  this.options  :  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options!=  null?  this.options  :  options);	  return(this.options    ==    null?    options    :    this.options);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
129	[BUG]  [BUGGY]  if(options  ==  null)  {  Options  options  =  cmd.getOptions();  requiredOptions.add(options);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  Options  options  =  cmd.getOptions();  requiredOptions.add(options);  }  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  Options  options  =  cmd.getOptions();  requiredOptions.add(options);  }	  if(options!=    null)    {    Options    options    =    cmd.getOptions();    requiredOptions.add(options);    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
130	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_LIST  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_LIST  +  2;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Collections.EMPTY_LIST  +  2;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
131	[BUG]  [BUGGY]  return(options!=  null)?  options  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  options  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  options  :  Collections.EMPTY_LIST  +  1;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST    +    1;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
132	[BUG]  [BUGGY]  Options  options  =  getOptions(false,  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(false,  false);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(false,  false);	  Options    options    =    getOptions(true);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
133	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  null  :  options.toArray(new  Option[options.size()  ]);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  null  :  options.toArray(new  Option[options.size()  ]);	  return(options    ==    null)?    null    :    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
134	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "opts ",  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "opts ",  false);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "opts ",  false);	  Option    option    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
135	[BUG]  [BUGGY]  if(this.options  ==  null)  {  return(Options)this.options;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(this.options  ==  null)  {  return(Options)this.options;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(this.options  ==  null)  {  return(Options)this.options;  }	  if(this.options!=    null)    {    return(Options)this.options;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
136	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	for(Option  option  :  options.values())  {  cmd.addOption(option);  }	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.values();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.values();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.values();	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.values()?  options.getOption(option):  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.values()?  options.getOption(option):  null;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.values()?  options.getOption(option):  null;	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
139	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  cmd.removeOption(option);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  for(Option  option  :  options.values())  {  cmd.removeOption(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	for(Option  option  :  options.values())  {  cmd.removeOption(option);  }	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
140	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( ".opts ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( ".opts ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( ".opts ");	  Option    options    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
141	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "opts ",  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "opts ",  false);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "opts ",  false);	  Option    options    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
142	[BUG]  [BUGGY]  Options  options  =  getOptions(options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(options);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
143	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ".toArray(new  Option[cmd.size()  ]));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ".toArray(new  Option[cmd.size()  ]));  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ".toArray(new  Option[cmd.size()  ]));	  Option    option    =    cmd.getOption(   "options.   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
144	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ".clone());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ".clone());  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ".clone());	  Option    option    =    cmd.getOption(   "options.   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
145	[BUG]  [BUGGY]  if(options!=  null)  {  requiredOptions  =  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options!=  null)  {  requiredOptions  =  options.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options!=  null)  {  requiredOptions  =  options.getOptions();  }	  if(options    ==    null)    {    requiredOptions    =    options.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
146	[BUG]  [BUGGY]  return(this.cmd!=  null)?  null  :  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.cmd!=  null)?  null  :  this.cmd.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.cmd!=  null)?  null  :  this.cmd.getOptions();	  return    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
147	[BUG]  [BUGGY]  return(this.cmd!=  null?  null  :  this.cmd.getOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.cmd!=  null?  null  :  this.cmd.getOptions());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.cmd!=  null?  null  :  this.cmd.getOptions());	  return    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
148	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getArgumentOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getArgumentOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getArgumentOptions();	  return(options    ==    null)?    null    :    options.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
149	[BUG]  [BUGGY]  return(this.options!=  null)?  options  :  new  Options(this.options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options!=  null)?  options  :  new  Options(this.options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options!=  null)?  options  :  new  Options(this.options);	  return(this.options    ==    null)?    options    :    new    Options(this.options);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
150	[BUG]  [BUGGY]  return(this.options  ==  null)?  this.options  :  new  Options(this.options);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.options  ==  null)?  this.options  :  new  Options(this.options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null)?  this.options  :  new  Options(this.options);	  return(this.options    ==    null)?    options    :    new    Options(this.options);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.getOption( "option ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.getOption( "option ");  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.getOption( "option ");	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
152	[BUG]  [BUGGY]  Option  options  =  this.cmd.getOptions(this.commandLine);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  this.cmd.getOptions(this.commandLine);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  this.cmd.getOptions(this.commandLine);	  Option    options    =    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
153	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.get();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.get();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.get();	  return(options    ==    null)?    null    :    options.required();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
154	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.getOption(option);	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    requiredOptions.add(option);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
155	[BUG]  [BUGGY]  Option  option  =  options.getOption( "options ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.getOption( "options ");  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.getOption( "options ");	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
157	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
158	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.length);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.getOption(this.options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.getOption(this.options);	  if(this.options!=    null)    {    return(Options)this.options;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
160	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ".asList());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ".asList());  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ".asList());	  Option    option    =    cmd.getOption(   "options.   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
161	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ".cloneTree());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ".cloneTree());  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ".cloneTree());	  Option    option    =    cmd.getOption(   "options.   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
162	[BUG]  [BUGGY]  if(options  ==  null)?  options  :  Collections.EMPTY_LIST;  if(options!=  null)  {  return  options;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)?  options  :  Collections.EMPTY_LIST;  if(options!=  null)  {  return  options;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)?  options  :  Collections.EMPTY_LIST;  if(options!=  null)  {  return  options;  }	  return(options!=    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
163	[BUG]  [BUGGY]  if(options  ==  null)?  options  :  Collections.EMPTY_LIST;  if(options  ==  null)  {  return  options;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)?  options  :  Collections.EMPTY_LIST;  if(options  ==  null)  {  return  options;  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)?  options  :  Collections.EMPTY_LIST;  if(options  ==  null)  {  return  options;  }	  return(options!=    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
164	[BUG]  [BUGGY]  Option  options  =  getOptions(defaultModule);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(defaultModule);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(defaultModule);	  Option    options    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
165	[BUG]  [BUGGY]  Option[]  options  =  cmd.getOptions();  requiredOptions.add(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  options  =  cmd.getOptions();  requiredOptions.add(options);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  options  =  cmd.getOptions();  requiredOptions.add(options);	  if(options!=    null)    {    Options    options    =    cmd.getOptions();    requiredOptions.add(options);    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  Option[]  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  options  =  cmd.getOptions();  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  options  =  cmd.getOptions();	  if(options!=    null)    {    Options    options    =    cmd.getOptions();    requiredOptions.add(options);    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
167	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getAllOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getAllOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getAllOptions();	  return(options    ==    null)?    null    :    options.size();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
168	[BUG]  [BUGGY]  return(options!=  null)?  options  :  Collections.EMPTY_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options!=  null)?  options  :  Collections.EMPTY_ARRAY;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  options  :  Collections.EMPTY_ARRAY;	  return(options    ==    null)?    options    :    Collections.EMPTY_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
169	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.cmd  ==  null)?  null  :  this.cmd.getOptions();	  return    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
170	[BUG]  [BUGGY]  return(this.cmd  ==  null?  null  :  this.cmd.getOptions());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(this.cmd  ==  null?  null  :  this.cmd.getOptions());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.cmd  ==  null?  null  :  this.cmd.getOptions());	  return    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
171	[BUG]  [BUGGY]  Options  options  =  getOptions(defaultModule);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(defaultModule);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(defaultModule);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
172	[BUG]  [BUGGY]  Options  options  =  getOptions(cmd,  requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(cmd,  requiredOptions);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(cmd,  requiredOptions);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
173	[BUG]  [BUGGY]  Options  options  =  getOptions(defaultCmd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(defaultCmd);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(defaultCmd);	  Options    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
174	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "default-options ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "default-options ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "default-options ");	  Option    option    =    cmd.getOption(   ".options   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
175	[BUG]  [BUGGY]  if(cmd!=  null)  {  return  this.cmd.getOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(cmd!=  null)  {  return  this.cmd.getOptions();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd!=  null)  {  return  this.cmd.getOptions();  }	  if(cmd!=    null)    {    return    cmd.getOptions();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
176	[BUG]  [BUGGY]  Return(options  ==  null)?  null  :  options.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Return(options  ==  null)?  null  :  options.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Return(options  ==  null)?  null  :  options.clone();	  return(options!=    null)?    null    :    options.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
177	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getArguments();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(options  ==  null)?  null  :  options.getArguments();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getArguments();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
178	[BUG]  [BUGGY]  return  this.mapping.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return  this.mapping.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return  this.mapping.getOptions();	  return    this.mad.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
179	[BUG]  [BUGGY]  Options  options  =  getOptions(false,  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Options  options  =  getOptions(false,  true);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(false,  true);	  Options    options    =    getOptions(true);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
180	[BUG]  [BUGGY]  return(Options)this.requiredOptions.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  return(Options)this.requiredOptions.get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.requiredOptions.get(0);	  return(Options)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
181	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "opts ",  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "opts ",  true);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "opts ",  true);	  Option    options    =    cmd.getOption(   "opts   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
182	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "options ", "required ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  cmd.getOption( "options ", "required ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "options ", "required ");	  Option    options    =    cmd.getOption(   "options   ",    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
184	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option[]  requiredOptions  =  options.getOptions();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
185	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  LinkedList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  }	  if(options    ==    null)    {    requiredOptions    =    new    ArrayList    <    Option>();    System.arraycopy(requiredOptions,    0,    requiredOptions,    0,    requiredOptions.size());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
186	[BUG]  [BUGGY]  Option  options  =  getOptions(defaultCmd);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  options  =  getOptions(defaultCmd);  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(defaultCmd);	  Option    options    =    getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
187	[BUG]  [BUGGY]  Option  option  =  options.values()?  options.removeOption(option):  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  options.values()?  options.removeOption(option):  null;  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  options.values()?  options.removeOption(option):  null;	  if(options    ==    null)    {    for(Option    option    :    options.values())    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
188	[BUG]  [BUGGY]  Option  cmd  =  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  cmd  =  this.cmd.getOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  cmd  =  this.cmd.getOptions();	  Option    cmd    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
189	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ", "true ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  Options  getOptions()  {      [BUGGY]  Option  option  =  cmd.getOption( "options ", "true ");  [BUGGY]      return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ", "true ");	  Option    option    =    cmd.getOption(   "options   ",    options);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
