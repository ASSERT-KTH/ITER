bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  options  =  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  options  =  this.cmd.getOptions();  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	options  =  this.cmd.getOptions();	      options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  Options  options  =  requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  requiredOptions.getOptions();  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  requiredOptions.getOptions();	      options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  return(Options)this.options.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(Options)this.options.clone();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)this.options.clone();	  return(Options)options.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  return(Options)requiredOptions.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(Options)requiredOptions.clone();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)requiredOptions.clone();	  return(Options)options.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  return(Options)super.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(Options)super.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)super.getOptions();	  return(Options)options.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  options  :  Options.EMPTY_LIST;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Options.EMPTY_LIST;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  options.size();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  options  :  options.size();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  options.size();	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions();  requiredOptions.add(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  cmd.getOptions();  requiredOptions.add(options);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions();  requiredOptions.add(options);	      Options    options    =    cmd.getOptions();    requiredOptions.add(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.values();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options!=  null)?  null  :  options.values();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  null  :  options.values();	  return(options    ==    null)?    null    :    options.values();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.keySet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.keySet();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.keySet();	  return(options    ==    null)?    null    :    options.values();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "options ",  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  cmd.getOption( "options ",  requiredOptions);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "options ",  requiredOptions);	      Option    options    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( "opts ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  cmd.getOption( "opts ");  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( "opts ");	      Option    options    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  Option  options  =  cmd.getOption( ".options ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  cmd.getOption( ".options ");  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOption( ".options ");	      Option    options    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.clone();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options!=  null)?  null  :  options.clone();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  null  :  options.clone();	  return(options    ==    null)?    null    :    options.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  return(Options)requiredOptions;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(Options)requiredOptions;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)requiredOptions;	  return(Options)this.options;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ",  requiredOptions);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  option  =  cmd.getOption( "options ",  requiredOptions);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ",  requiredOptions);	      Option    option    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( ".options ");  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  option  =  cmd.getOption( ".options ");  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( ".options ");	      Option    option    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ",  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  option  =  cmd.getOption( "options ",  false);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ",  false);	      Option    option    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Options  options  =  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  this.cmd.getOptions();  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  this.cmd.getOptions();	      Options    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  Options  options  =  getOptions(true);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  getOptions(true);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(true);	      Options    options    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.getOptions();	  return(options    ==    null)?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.requiredOptions;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.requiredOptions;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.requiredOptions;	  return(options    ==    null)?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.size();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.size();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.size();	  return(options    ==    null)?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.size());  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  neededOptions.size());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  neededOptions.size());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  neededOptions.size());  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  System.arraycopy(requiredOptions,  0,  requiredOptions,  0,  requiredOptions.length);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  return  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return  this.cmd.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return  this.cmd.getOptions();	  return    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  if(cmd!=  null)  {  return  cmd.getOptions();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(cmd!=  null)  {  return  cmd.getOptions();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd!=  null)  {  return  cmd.getOptions();  }	  return    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  if(cmd!=  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(cmd!=  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(cmd!=  null)  {  return  cmd.getOptions();  }  else  {  requiredOptions  =  Collections.emptyList();  }	  return    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  Option  options  =  this.cmd.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  this.cmd.getOptions();  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  this.cmd.getOptions();	      Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  Option  options  =  requiredOptions.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  requiredOptions.getOptions();  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  requiredOptions.getOptions();	      Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  cmd.getOptions(this.requiredOptions);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions(this.requiredOptions);	      Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions(requiredOptions);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  cmd.getOptions(requiredOptions);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  cmd.getOptions(requiredOptions);	      Options    options    =    cmd.getOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions(this.requiredOptions);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  cmd.getOptions(this.requiredOptions);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  cmd.getOptions(this.requiredOptions);	      Options    options    =    cmd.getOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  Options  options  =  requiredOptions.getOptions(options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  requiredOptions.getOptions(options);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  requiredOptions.getOptions(options);	      Options    options    =    cmd.getOptions(options);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  return  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return  options.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return  options.getOptions();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  new  ArrayList  <  Option>();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  if(options  ==  null)  {  requiredOptions  =  options.getOptions();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  requiredOptions  =  options.getOptions();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  requiredOptions  =  options.getOptions();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.requiredOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.requiredOptions();	  return(options    ==    null)?    null    :    options.values();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  return(Options)options.get(0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(Options)options.get(0);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(Options)options.get(0);	  return(Options)options.clone();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.get(options.size());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.get(options.size());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.get(options.size());	  return(options    ==    null)?    null    :    options.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  Option  options  =  getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  getOptions();  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions();	      Options    options    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "opts ");  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  option  =  cmd.getOption( "opts ");  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "opts ");	      Option    option    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options ",  options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  option  =  cmd.getOption( "options ",  options);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options ",  options);	      Option    option    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_ARRAY;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Collections.EMPTY_ARRAY;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  if(options!=  null)  {  Options  options  =  cmd.getOptions();  requiredOptions.add(options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options!=  null)  {  Options  options  =  cmd.getOptions();  requiredOptions.add(options);  }  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options!=  null)  {  Options  options  =  cmd.getOptions();  requiredOptions.add(options);  }	      Options    options    =    cmd.getOptions();    requiredOptions.add(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  cmd  =  cmd.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  cmd  =  cmd.getOptions();	  return    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  ]);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.toArray(new  Option[options.size()  ]);	  return(options    ==    null)?    null    :    options.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.get(0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.get(0);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.get(0);	  return(options    ==    null)?    null    :    options.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions( "options ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  cmd.getOptions( "options ");  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  cmd.getOptions( "options ");	      Option    options    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  Options  options  =  getOptions(cmd);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Options  options  =  getOptions(cmd);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Options  options  =  getOptions(cmd);	      Options    options    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  Option  option  =  cmd.getOption( "options. ");  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  option  =  cmd.getOption( "options. ");  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  option  =  cmd.getOption( "options. ");	      Option    option    =    cmd.getOption(   "options   ");    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(this.options  ==  null)?  options  :  new  Options(this.options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null)?  options  :  new  Options(this.options);	  return    this.options;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  return(this.options  ==  null?  options  :  this.options);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(this.options  ==  null?  options  :  this.options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(this.options  ==  null?  options  :  this.options);	  return    this.options;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Option  option  :  options.values())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  for(Option  option  :  options.values())  {  requiredOptions.add(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  for(Option  option  :  options.values())  {  requiredOptions.add(option);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(options  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(options  ==  null)  {  for(Option  option  :  options.values())  {  cmd.addOption(option);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  return  this.mad.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return  this.mad.getOptions();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return  this.mad.getOptions();	  return    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.required();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  null  :  options.required();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  null  :  options.required();	  return(options    ==    null)?    null    :    options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  if(this.options!=  null)  {  return(Options)this.options;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  if(this.options!=  null)  {  return(Options)this.options;  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	if(this.options!=  null)  {  return(Options)this.options;  }	  return(Options)this.options;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  Option  options  =  getOptions(cmd);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  Option  options  =  getOptions(cmd);  [BUGGY]    return  options;  }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	Option  options  =  getOptions(cmd);	      Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options  ==  null)?  options  :  Collections.EMPTY_LIST  +  1;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options  ==  null)?  options  :  Collections.EMPTY_LIST  +  1;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
62	[BUG]  [BUGGY]  return(options!=  null)?  options  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  Options  getOptions()  {    [BUGGY]  return(options!=  null)?  options  :  Collections.EMPTY_LIST;  [BUGGY]    }  [CLASS]  Parser  [METHOD]  getOptions  [RETURN_TYPE]  Options  [VARIABLES]  Options  options  CommandLine  cmd  List  requiredOptions  boolean  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	54	54	1	replace	return(options!=  null)?  options  :  Collections.EMPTY_LIST;	  return(options    ==    null)?    options    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
