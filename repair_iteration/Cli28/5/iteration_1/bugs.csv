bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt.hasValue())  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if(opt.hasValue())  {  [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	if(opt.hasValue())  {	if  (opt.hasArg())  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
2	[BUG]  [BUGGY]  if(opt.hasValues())  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if(opt.hasValues())  {  [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	if(opt.hasValues())  {	if  (opt.hasArg())  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
3	[BUG]  [BUGGY]  if(opt.getValues().length  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if(opt.getValues().length  ==  0)  {  [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	if(opt.getValues().length  ==  0)  {	if  (opt.hasArg())  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
4	[BUG]  [BUGGY]  if(opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if(opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	if(opt.hasArg()  ||  value.length()  ==  0)  {	if  (opt.hasArg())  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
5	[BUG]  [BUGGY]    [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	  	if  (opt.hasArg())  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
6	[BUG]  [BUGGY]    Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	add
7	[BUG]  [BUGGY]    Option  cmd  =  getOptions().getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    Option  cmd  =  getOptions().getOption(option);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    Option  cmd  =  getOptions().getOption(option);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	add
8	[BUG]  [BUGGY]    Option  opt  =  getOptions().getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    Option  opt  =  getOptions().getOption(option);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    Option  opt  =  getOptions().getOption(option);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	add
9	[BUG]  [BUGGY]    String  value  =  properties.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    String  value  =  properties.getProperty(option);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    String  value  =  properties.getProperty(option);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	add
10	[BUG]  [BUGGY]    Option  opt  =  getOptions().getOption(option);  String  option  =  properties.getProperty(option);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    Option  opt  =  getOptions().getOption(option);  String  option  =  properties.getProperty(option);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    Option  opt  =  getOptions().getOption(option);  String  option  =  properties.getProperty(option);		non-compiled	[CE]  illegal  start  of  expression	11	None	add
11	[BUG]  [BUGGY]    Option  opt  =  getOptions().getOption(value);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    Option  opt  =  getOptions().getOption(value);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    Option  opt  =  getOptions().getOption(value);		non-compiled	[CE]  illegal  start  of  expression	11	None	add
12	[BUG]  [BUGGY]  if(opt.hasArg()  &&  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if(opt.hasArg()  &&  value.length()  ==  0)  {  [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	if(opt.hasArg()  &&  value.length()  ==  0)  {	if  (opt.hasArg())  {  	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  if(opt.hasArg()  &&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]  if(opt.hasArg()  &&  value.equals(value))  {  [BUGGY]  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	if(opt.hasArg()  &&  value.equals(value))  {	if  (opt.hasArg())  {  	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]    Option  option  =  getOptions().getOption(option);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    Option  option  =  getOptions().getOption(option);  [BUGGY]  if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	270	271	1	replace	    Option  option  =  getOptions().getOption(option);		non-compiled	[CE]  illegal  start  of  expression	11	None	add
