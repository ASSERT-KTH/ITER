bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  this.opts.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  this.opts.iterator();	      Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  properties.iterator();	      Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  t.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  t.iterator();	      Iterator    <    String>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  this.opts.iterator();	      Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  Iterator  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  properties.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  properties.iterator();	      Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  arguments.iterator();	      Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  tehnicătehnică  stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  tehnicătehnică  stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	tehnicătehnică  stopAtNonOption)  {  checkRequiredOptions();  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  log.warning( "msg.bad.required.properties ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  log.warning( "msg.bad.required.properties ");  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  log.warning( "msg.bad.required.properties ");  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequireOptions();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  checkRequireOptions();  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  checkRequireOptions();  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  Iterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  options.values().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  options.values().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  opts.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  this.options.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(t);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingException(t);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingException(t);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  options.addArg(str);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  options.addArg(str);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	options.addArg(str);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	OptionGroup  group  =  options.getOptionGroup();	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  opts.values().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  opts.values().iterator();	      Iterator    <    String>    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequireOptions();  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  checkRequireOptions();  }  else  {  cmd.addArg(t);  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  checkRequireOptions();  }  else  {  cmd.addArg(t);  }	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd.addArg(test);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd.addArg(test);  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd.addArg(test);  }	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  group  =  options.getOptionGroup();  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  group  =  options.getOptionGroup();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  options.addArg(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  options.addArg(t);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	options.addArg(t);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  this.options.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(t,  stopAtNonOption);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(str);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(str);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(t,  eatTheRest);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(t,  eatTheRest);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingArguments(t);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingArguments(t);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  checkRequiredOptions();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  ||  stopAtNonOption)  {  checkRequiredOptions();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	||  stopAtNonOption)  {  checkRequiredOptions();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  ||  stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	||  stopAtNonOption)  {  checkRequiredOptions();  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequireOptions();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(!stopAtNonOption)  {  checkRequireOptions();  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(!stopAtNonOption)  {  checkRequireOptions();  }	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  parse(iterator,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parse(iterator,  opt);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parse(iterator,  opt);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  parse(opt,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parse(opt,  iterator,  arguments);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parse(opt,  iterator,  arguments);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  parse(opt,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parse(opt,  iterator,  requiredOptions);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parse(opt,  iterator,  requiredOptions);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  parse(opt,  iterator,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parse(opt,  iterator,  options);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parse(opt,  iterator,  options);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  opts.keySet().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  opts.keySet().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(t,  stopAtNonOption);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(t,  eatTheRest);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(str);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(t,  str);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  this.options.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  Option  group  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  group  =  options.getOptions();  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  group  =  options.getOptions();	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  Option  group  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  group  =  options.getOption(opt);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  group  =  options.getOption(opt);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(t,  this);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(t,  this);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  parse(opt,  iterator,  neededOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parse(opt,  iterator,  neededOptions);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parse(opt,  iterator,  neededOptions);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  parse(opt,  iterator,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parse(opt,  iterator,  t);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parse(opt,  iterator,  t);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  group  =  options.getOptionGroup(opt);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  Iterator  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  iterator  =  opt.keySet().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  iterator  =  opt.keySet().iterator();	      Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  requiredOptions  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  requiredOptions  =  stopAtNonOption;  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	requiredOptions  =  stopAtNonOption;	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  requiredOptions  =  stopAtNonOption?  getRequiredOptions()  :  null;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  requiredOptions  =  stopAtNonOption?  getRequiredOptions()  :  null;  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	requiredOptions  =  stopAtNonOption?  getRequiredOptions()  :  null;	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  requiredOptions  =  stopAtNonOption?  checkRequiredOptions()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  requiredOptions  =  stopAtNonOption?  checkRequiredOptions()  :  null;  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	requiredOptions  =  stopAtNonOption?  checkRequiredOptions()  :  null;	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  Option  group  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  group  =  options.getOption(t);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  group  =  options.getOption(t);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(t,  blockAtNonOption);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(t,  blockAtNonOption);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  opt.keySet().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  opt.keySet().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  Option  opt  =  options.getOption( "opt ");  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption( "opt ");  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption( "opt ");	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	OptionGroup  group  =  options.getOptionGroup(t);	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  if(!stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	OptionGroup  group  =  options.getOptionGroup(opt);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  iterator.remove();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  iterator.remove();  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	iterator.remove();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(msg,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingArguments(msg,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingArguments(msg,  stopAtNonOption);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingArguments(cmd,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingArguments(cmd,  stopAtNonOption);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArguments(cmd,  str);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingArguments(cmd,  str);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingArguments(cmd,  str);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(t,  iterator);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  option  =  options.getOption(t,  arguments);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  parseOption(opt,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  parseOption(opt,  iterator);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	parseOption(opt,  iterator);	      parse(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(t,  iterator);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(t,  iterator);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
68	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(t,  str);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(t,  str);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Option  opt  =  options.getOption(t,  this);  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Option  opt  =  options.getOption(t,  this);	      Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  Iterator  <  String>  iterator  =  this.options.keySet().iterator();  [BUGGY]    checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	Iterator  <  String>  iterator  =  this.options.keySet().iterator();	      Iterator    <    String>    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  aughtExceptionHandler.handleMissingClass(t);  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	aughtExceptionHandler.handleMissingClass(t);	  if(stopAtNonOption)    {    checkRequiredOptions();    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  tryFailedToParse(opt,  stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  tryFailedToParse(opt,  stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	tryFailedToParse(opt,  stopAtNonOption)  {  checkRequiredOptions();  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  if(stopAtNonOption)  {  log.warning( "msg.bad.required.option ",  str);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }  }  processProperties(properties);    [BUGGY]  if(stopAtNonOption)  {  log.warning( "msg.bad.required.option ",  str);  }  [BUGGY]      return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	242	242	1	replace	if(stopAtNonOption)  {  log.warning( "msg.bad.required.option ",  str);  }	  if(stopAtNonOption)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
