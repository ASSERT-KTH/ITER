projects/Cli28/src/java/org/apache/commons/cli/Parser.java242checkRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequiredOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(opt,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(!stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(t);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(str);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=properties.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=t.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=properties.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242tehnicătehnicăstopAtNonOption){checkRequiredOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){log.warning("msg.bad.required.properties");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequireOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingException(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242options.addArg(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242OptionGroupgroup=options.getOptionGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingException("");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=opts.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequireOptions();}else{cmd.addArg(t);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){checkRequiredOptions();}else{cmd.addArg(test);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optiongroup=options.getOptionGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242options.addArg(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingArguments(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242||stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242||stopAtNonOption){checkRequiredOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(!stopAtNonOption){checkRequireOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(iterator,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(opt,iterator,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(opt,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(opt,iterator,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optiongroup=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optiongroup=options.getOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t,this);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(opt,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parse(opt,iterator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optiongroup=options.getOptionGroup(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iteratoriterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242requiredOptions=stopAtNonOption;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242requiredOptions=stopAtNonOption?getRequiredOptions():null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242requiredOptions=stopAtNonOption?checkRequiredOptions():null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optiongroup=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t,blockAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption("opt");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242OptionGroupgroup=options.getOptionGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242OptionGroupgroup=options.getOptionGroup(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242iterator.remove();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingArguments(msg,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingArguments(cmd,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingArguments(cmd,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionoption=options.getOption(t,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242parseOption(opt,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Optionopt=options.getOption(t,this);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242Iterator<String>iterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242aughtExceptionHandler.handleMissingClass(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242tryFailedToParse(opt,stopAtNonOption){checkRequiredOptions();}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java242if(stopAtNonOption){log.warning("msg.bad.required.option",str);}
