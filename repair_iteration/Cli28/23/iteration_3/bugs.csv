bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requiredOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requiredOptions().iterator();	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
2	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions.toArray(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions.toArray(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  requiredOptions  =  options.requiredOptions.toArray(opt);	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  opt.clearValues().add(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  opt.clearValues().add(option);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  opt.clearValues().add(option);	  Option    option    =(Option)it.next();    opt.clearValues().add(option);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.clearValues().add(opt);	  Option    option    =(Option)it.next();    opt.clearValues().add(option);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
5	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
6	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions.toArray(new  Option[requiredOptions.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions.toArray(new  Option[requiredOptions.size()  ]);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  requiredOptions  =  options.requiredOptions.toArray(new  Option[requiredOptions.size()  ]);	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
7	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu	  Option    option    =(Option)it.next();    if(opt!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
8	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu	  Option    option    =(Option)it.next();    if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues()    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
9	[BUG]  [BUGGY]  Option  option  =  opt.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  opt.helpOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  opt.helpOptions().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.opts().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.opts().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.opts().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.options().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.options().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
12	[BUG]  [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.opts.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
13	[BUG]  [BUGGY]  Option  option  =(Option)options.opts().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.opts().iterator();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.opts().iterator();	  for(Iterator    it    =    options.opts.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
14	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)this.options.get(0);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)this.options.get(0);	  Option    opt    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
15	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)options.get(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.get(opt);	  Option    opt    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(opt.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)options.get(opt.size()  -  1);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.get(opt.size()  -  1);	  Option    opt    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  Option  option  =(Option)options.requiresOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requiresOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requiresOptions().iterator();	  for(Iterator    it    =    options.requiresOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
18	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.requiresOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  requiredOptions  =  options.requiresOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  requiredOptions  =  options.requiresOptions();	  for(Iterator    it    =    options.requiresOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
19	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.requiresOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
20	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.getOption(str);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.getOption(str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.getOption(t,  str);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.getOption(t,  str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
22	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.getOption(t,  stopAtNonOption);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
23	[BUG]  [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();	  Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
25	[BUG]  [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  opt.clearValues();  }	  Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
26	[BUG]  [BUGGY]  Option  option  =(Option)options.addOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOptionGroups().iterator();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOptionGroups().iterator();	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
27	[BUG]  [BUGGY]  Option[]  options  =  options.addOptionGroups();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  options  =  options.addOptionGroups();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  options  =  options.addOptionGroups();	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.addOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.addOptionGroups().iterator();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.addOptionGroups().iterator();	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
29	[BUG]  [BUGGY]  Option  option  =(Option)options.get(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.get(0);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.get(0);	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  Option[]  options  =  opt.opts();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  options  =  opt.opts();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  options  =  opt.opts();	  Option[]    options    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
31	[BUG]  [BUGGY]  Option[]  options  =  option.opts();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  options  =  option.opts();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  options  =  option.opts();	  Option[]    options    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
32	[BUG]  [BUGGY]  Option[]  options  =  opt.options();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  options  =  opt.options();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  options  =  opt.options();	  Option[]    options    =    options.opts();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  it.remove();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  it.remove();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  it.remove();	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.helpRequires();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.helpRequires();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.helpRequires();	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
35	[BUG]  [BUGGY]  Option  option  =(Option)options.requiredOptions().next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requiredOptions().next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requiredOptions().next();	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  requiredOptions  =  options.requiredOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  requiredOptions  =  options.requiredOptions();	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
38	[BUG]  [BUGGY]  Option  option  =(Option)options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }	  Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }	  Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
40	[BUG]  [BUGGY]  Option  option  =(Option)options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();	  Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
41	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions().iterator();	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
42	[BUG]  [BUGGY]  Option  option  =(Option)options.requireAtNonOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireAtNonOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireAtNonOptions().iterator();	  for(Iterator    it    =    options.requireAtNonOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
43	[BUG]  [BUGGY]  Option  option  =(Option)options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireAtNonOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
44	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(opt.getKey());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(opt.getKey());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.addValue(opt.getKey());	  Option    option    =(Option)it.next();    opt.addValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  opt.addValue(option.getKey());	  Option    option    =(Option)it.next();    opt.addValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
48	[BUG]  [BUGGY]  Option  option  =(Option)options.tokenList().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.tokenList().iterator();  it.hasNext();)  {  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.tokenList().iterator();  it.hasNext();)  {	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
49	[BUG]  [BUGGY]  Option[]  arguments  =  options.addOptions().toArray(new  Option[arguments.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  options.addOptions().toArray(new  Option[arguments.size()  ]);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.addOptions().toArray(new  Option[arguments.size()  ]);	  ListIterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.tokenList().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.tokenList().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.tokenList().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
52	[BUG]  [BUGGY]  Option  option  =(Option)opt.options().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.options().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.options().iterator();	  Option    option    =(Option)options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  Option  option  =(Option)option.options().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)option.options().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)option.options().iterator();	  Option    option    =(Option)options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
54	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  opt.removeValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)it.next();  opt.removeValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  opt.removeValues();	  Option    opt    =(Option)it.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
55	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  opt.addValue(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)it.next();  opt.addValue(t);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  opt.addValue(t);	  Option    opt    =(Option)it.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
56	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.removeValues();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  opt.removeValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.removeValues();	  Option    option    =(Option)it.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  Option  option  =(Option)opt.addOption();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.addOption();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.addOption();	  Option    option    =(Option)options.addOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
58	[BUG]  [BUGGY]  Option  option  =(Option)options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOption(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOption(opt);	  Option    option    =(Option)options.addOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
59	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.getOption(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOption(opt);	  Option    option    =(Option)options.addOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
60	[BUG]  [BUGGY]  options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  options.addOption(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	options.addOption(opt);	  Option    option    =(Option)options.addOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
61	[BUG]  [BUGGY]  Option  opt  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.clone();	  Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
62	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getOption();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.getOption();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.getOption();	  Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
63	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
64	[BUG]  [BUGGY]  Option  option  =(Option)options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
65	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
66	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  Option  opt  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)options.clone();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.clone();	  Option    opt    =(Option)options.next();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
68	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions();	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.clone();	  Option    option    =(Option)options.next();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option.getKey());  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
72	[BUG]  [BUGGY]  option  =(Option)opt.next();  it.remove();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  option  =(Option)opt.next();  it.remove();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	option  =(Option)opt.next();  it.remove();	  Option    option    =(Option)opt.next();    it.remove();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
73	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue();  it.remove();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.getValue();  it.remove();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getValue();  it.remove();	  Option    option    =(Option)opt.next();    it.remove();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  Option  option  =(Option)opt.tokenList().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.tokenList().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.tokenList().iterator();	  Option    option    =(Option)options.tokenList().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  Option  option  =(Option)option.tokenList().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)option.tokenList().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)option.tokenList().iterator();	  Option    option    =(Option)options.tokenList().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
76	[BUG]  [BUGGY]  Option  option  =(Option)options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.keyList().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.keyList().iterator();	  Option    option    =(Option)options.tokenList().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
77	[BUG]  [BUGGY]  Option  opt  =(Option)options.opts().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)options.opts().iterator();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.opts().iterator();	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
78	[BUG]  [BUGGY]  Option[]  arguments  =  options.opts().toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  options.opts().toArray(new  Option[options.size()  ]);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.opts().toArray(new  Option[options.size()  ]);	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
79	[BUG]  [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
80	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
81	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
82	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
83	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
85	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  it.remove();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.next();  it.remove();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.next();  it.remove();	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
86	[BUG]  [BUGGY]  for(Iterator  it  =  options.optionsSet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.optionsSet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.optionsSet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.keySet().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
87	[BUG]  [BUGGY]  Option  option  =(Option)options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.keySet().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.keySet().iterator();	  for(Iterator    it    =    options.keySet().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
88	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.clone();	  Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
89	[BUG]  [BUGGY]  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  option  =(Option)opt.next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	option  =(Option)opt.next();	  Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
90	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  it.removeValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)it.next();  it.removeValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  it.removeValues();	  Option    opt    =(Option)opt.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
91	[BUG]  [BUGGY]  Option  opt  =(Option)opt.next();  it.removeValues();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.next();  it.removeValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.next();  it.removeValues();	  Option    opt    =(Option)opt.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
92	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.requiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requiredOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requiredOptions().iterator();	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
94	[BUG]  [BUGGY]  Option[]  options  =  options.requiredOptions().toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  options  =  options.requiredOptions().toArray(new  Option[options.size()  ]);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  options  =  options.requiredOptions().toArray(new  Option[options.size()  ]);	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
95	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  opt.removeValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  opt.removeValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  opt.removeValues();	  Option    option    =(Option)opt.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
96	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  opt.addValue(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  opt.addValue(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  opt.addValue(option);	  Option    option    =(Option)opt.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
97	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.addValue(option);  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
99	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
100	[BUG]  [BUGGY]  Option  option  =(Option)options.requireOptions().next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.requireOptions().next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.requireOptions().next();	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
101	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  opt.getOption(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  opt.getOption(option);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.getOption(t);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.getOption(opt,  stopAtNonOption);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
104	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  it.removeValues();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  it.removeValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  it.removeValues();	  Option    option    =(Option)opt.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
105	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.helpOptions();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.helpOptions();	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
106	[BUG]  [BUGGY]  Option  opt  =  options.opts();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.opts();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.opts();	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
107	[BUG]  [BUGGY]  Option  opt  =  options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.addOption(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.addOption(opt);	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
108	[BUG]  [BUGGY]  Option  opt  =  options.options();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.options();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.options();	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
109	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)option.next();	  Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  Option  option  =(Option)options.helpRequires().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.helpRequires().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpRequires().iterator();	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
111	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
112	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
113	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
114	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
115	[BUG]  [BUGGY]  Option  option  =(Option)opt.options().next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.options().next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.options().next();	  Option    option    =(Option)options.options().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
116	[BUG]  [BUGGY]  Option  option  =(Option)options.options().get(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.options().get(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().get(opt);	  Option    option    =(Option)options.options().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
117	[BUG]  [BUGGY]  Option  option  =(Option)options.options().get(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.options().get(0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().get(0);	  Option    option    =(Option)options.options().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  opt.removeValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.next();  opt.removeValues();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.next();  opt.removeValues();	  Option    option    =(Option)options.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  Option  option  =(Option)opt.addOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.addOptions().iterator();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.addOptions().iterator();	  Option    option    =(Option)options.addOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
120	[BUG]  [BUGGY]  Option  option  =(Option)options.addOption(opt).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOption(opt).iterator();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOption(opt).iterator();	  Option    option    =(Option)options.addOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
121	[BUG]  [BUGGY]  Option  option  =(Option)options.addOption(opt.getValue());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOption(opt.getValue());  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOption(opt.getValue());	  Option    option    =(Option)options.addOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
122	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.getOption();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getOption();	  Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
123	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getOptionGroup();	  Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
124	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues	  Option    option    =(Option)it.next();    if(option!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
125	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu	  Option    option    =(Option)it.next();    if(option!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
126	[BUG]  [BUGGY]  Option  option  =(Option)opt.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.helpOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.helpOptions().iterator();	  Option    option    =(Option)options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
127	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(opt).iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.getOption(opt).iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOption(opt).iterator();	  Option    option    =(Option)options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
128	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  it.remove();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)it.next();  it.remove();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  it.remove();	  Option    opt    =(Option)it.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
129	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  it.addValue(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)it.next();  it.addValue(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  it.addValue(opt);	  Option    opt    =(Option)it.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
130	[BUG]  [BUGGY]  Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
131	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.getOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getOptions().iterator();	  Option    option    =(Option)options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
132	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroup().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.getOptionGroup().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOptionGroup().iterator();	  Option    option    =(Option)options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
133	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
134	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
135	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
136	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.requireOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  requiredOptions  =  options.requireOptions();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  requiredOptions  =  options.requireOptions();	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }	  ListIterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
138	[BUG]  [BUGGY]  Option  option  =(Option)options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }	  ListIterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
139	[BUG]  [BUGGY]  Option  option  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();	  ListIterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
140	[BUG]  [BUGGY]  Option  opt  =(Option)option.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)option.next();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)option.next();	  Option    opt    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
141	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  it.removeValues();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  it.removeValues();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  it.removeValues();	  Option    option    =(Option)it.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
142	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
143	[BUG]  [BUGGY]  Option[]  arguments  =  opt.helpOptions().toArray(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  opt.helpOptions().toArray(option);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  opt.helpOptions().toArray(option);	  Option[]    arguments    =    options.helpOptions().toArray(opt);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
144	[BUG]  [BUGGY]  Option[]  arguments  =  option.helpOptions().toArray(arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  option.helpOptions().toArray(arguments);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  option.helpOptions().toArray(arguments);	  Option[]    arguments    =    options.helpOptions().toArray(opt);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
145	[BUG]  [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(opt,  t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(opt,  t);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.helpOptions().toArray(opt,  t);	  Option[]    arguments    =    options.helpOptions().toArray(opt);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
146	[BUG]  [BUGGY]  Option  opt  =  options.opts().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.opts().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.opts().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
147	[BUG]  [BUGGY]  Option  opt  =  options.options().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.options().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.options().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
148	[BUG]  [BUGGY]  Option  option  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireAtNonOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
149	[BUG]  [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
150	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(stopAtNonOption)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(stopAtNonOption)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(stopAtNonOption)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu	  Option    option    =(Option)it.next();    if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues()    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
151	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  if(stopAtNonOption)  {  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	if(stopAtNonOption)  {  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.	  Option    option    =(Option)it.next();    if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues()    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
152	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(stopAtNonOption)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clear  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(stopAtNonOption)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clear  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(stopAtNonOption)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clear	  Option    option    =(Option)it.next();    if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues()    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
153	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
154	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
155	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
156	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
157	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
158	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
159	[BUG]  [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
160	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
161	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(opt).addOption();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.getOption(opt).addOption();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOption(opt).addOption();	  Option    option    =(Option)options.addOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
162	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
163	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
164	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
165	[BUG]  [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
166	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
167	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
168	[BUG]  [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
169	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
170	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
171	[BUG]  [BUGGY]  Option  opt  =(Option)opt.get();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.get();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.get();	  Option    opt    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
172	[BUG]  [BUGGY]  Option  option  =(Option)options.options().toArray(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.options().toArray(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().toArray(opt);	  Option    option    =(Option)options.options().iterator();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
173	[BUG]  [BUGGY]  Option  option  =(Option)opt.get();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.get();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.get();	  Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
174	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
175	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
176	[BUG]  [BUGGY]  ListIterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
177	[BUG]  [BUGGY]  ListIterator  it  =  options.requireAtNonOption().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireAtNonOption().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireAtNonOption().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
178	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
179	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
180	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.getValue();  opt.clearValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getValue();  opt.clearValues();	  Option    option    =(Option)opt.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
181	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(t);  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(opt);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
182	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
183	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
184	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
185	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
186	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
187	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
188	[BUG]  [BUGGY]  for(Iterator  it  =  options.optionsList().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.optionsList().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.optionsList().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
189	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
190	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
191	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
192	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu	  Option    option    =(Option)it.next();    if(opt!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
193	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.keySet().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
194	[BUG]  [BUGGY]  for(Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.keySet().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
195	[BUG]  [BUGGY]  Option  opt  =  options.blockOptions();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.blockOptions();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.blockOptions();	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
196	[BUG]  [BUGGY]  Option  opt  =(Option)opt.next();  it.remove();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.next();  it.remove();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.next();  it.remove();	  Option    opt    =(Option)opt.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
197	[BUG]  [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
198	[BUG]  [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
199	[BUG]  [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
200	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
201	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
202	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
203	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
204	[BUG]  [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
205	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
206	[BUG]  [BUGGY]  ListIterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
207	[BUG]  [BUGGY]  ListIterator  it  =  options.requireAtNonOption().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireAtNonOption().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireAtNonOption().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
208	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
209	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
210	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
211	[BUG]  [BUGGY]  Option  option  =(Option)options.helpOptions().get(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.helpOptions().get(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpOptions().get(opt);	  Option    option    =(Option)options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
212	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.get(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.get(opt);	  Option    option    =(Option)options.next();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
213	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt.next());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.get(opt.next());  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.get(opt.next());	  Option    option    =(Option)options.next();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
214	[BUG]  [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
215	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.getOption(opt,  t);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.getOption(opt,  t);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
216	[BUG]  [BUGGY]  ListIterator  it  =  options.opts.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.opts.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.opts.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
217	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.opts.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
218	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
219	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
220	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
221	[BUG]  [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
222	[BUG]  [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
223	[BUG]  [BUGGY]  ListIterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
224	[BUG]  [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
225	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)option.next();  opt.clearValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)option.next();  opt.clearValues();	  Option    option    =(Option)it.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
226	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
227	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.clearOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.clearOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.clearOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
228	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
229	[BUG]  [BUGGY]  ListIterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
230	[BUG]  [BUGGY]  for(Iterator  it  =  options.optionsOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.optionsOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.optionsOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
231	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
232	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
233	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)opt.next();  it.remove();  }	  ListIterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
234	[BUG]  [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
235	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
236	[BUG]  [BUGGY]  Option  option  =(Option)options.options().clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.options().clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().clone();	  Option    option    =(Option)options.options().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
237	[BUG]  [BUGGY]  Option  opt  =  options.stopAtNonOption().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.stopAtNonOption().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.stopAtNonOption().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
238	[BUG]  [BUGGY]  Option  opt  =  options.stopAtNonOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.stopAtNonOptions().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.stopAtNonOptions().iterator();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
239	[BUG]  [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
240	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
241	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
242	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
243	[BUG]  [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
244	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
245	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
246	[BUG]  [BUGGY]  Option  option  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
247	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
248	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
249	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
250	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
251	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
252	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
253	[BUG]  [BUGGY]  Option  option  =(Option)options.opts.tokenList().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.opts.tokenList().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.opts.tokenList().iterator();	  Option    option    =(Option)options.tokenList().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
254	[BUG]  [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
255	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  ListIterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
256	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  opt.clearValues();  }	  ListIterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
257	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  ListIterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
258	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt);  opt.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.get(opt);  opt.clearValues();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.get(opt);  opt.clearValues();	  Option    option    =(Option)options.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
259	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)opt.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
260	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
261	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  it.remove();  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
262	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(opt.toString());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)options.get(opt.toString());  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.get(opt.toString());	  Option    opt    =(Option)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
263	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
264	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
265	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues	  Option    option    =(Option)it.next();    if(option!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
266	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValue  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValue	  Option    option    =(Option)it.next();    if(option!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
267	[BUG]  [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.requireOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
268	[BUG]  [BUGGY]  ListIterator  it  =  options.requiresOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiresOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiresOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiresOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
269	[BUG]  [BUGGY]  Iterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
270	[BUG]  [BUGGY]  Option  group  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  group  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  group  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
271	[BUG]  [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(arguments);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.helpOptions().toArray(arguments);	  Option[]    arguments    =    options.helpOptions().toArray(opt);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
272	[BUG]  [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(opt,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(opt,  requiredOptions);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.helpOptions().toArray(opt,  requiredOptions);	  Option[]    arguments    =    options.helpOptions().toArray(opt);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
273	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
274	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
275	[BUG]  [BUGGY]  Option  opt  =(Option)opt.next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.next();  opt.clearValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.next();  opt.clearValues();	  Option    opt    =(Option)it.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
276	[BUG]  [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
277	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  options.clearValues();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.next();  options.clearValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  options.clearValues();	  Option    option    =(Option)opt.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
278	[BUG]  [BUGGY]  Option  option  =(Option)options.addOption(opt.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.addOption(opt.getKey());  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOption(opt.getKey());	  Option    option    =(Option)options.addOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
279	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireAtNonOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.requireAtNonOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireAtNonOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.requireAtNonOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
280	[BUG]  [BUGGY]  Option  opt  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.getOptionGroup(t);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.getOptionGroup(t);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
281	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.clone();  opt.clearValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.clone();  opt.clearValues();	  Option    option    =(Option)opt.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
282	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
283	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }	  for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    CommandLine    cmd    =(CommandLine)it.next();    if(cmd!=    null)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
284	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
285	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
286	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
287	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
288	[BUG]  [BUGGY]  Option  opt  =(Option)this.options.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)this.options.next();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)this.options.next();	  Option    opt    =(Option)options.next();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
289	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
290	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
291	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.keySet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.options.keySet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options.keySet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.keySet().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
292	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
293	[BUG]  [BUGGY]  OptionGroup  group  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  OptionGroup  group  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	OptionGroup  group  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
294	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
295	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
296	[BUG]  [BUGGY]  Option  opt  =  options.stopAtNonOption();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.stopAtNonOption();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.stopAtNonOption();	  Option    opt    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
297	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
298	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone();  it.clearValues();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.clone();  it.clearValues();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.clone();  it.clearValues();	  Option    option    =(Option)opt.next();    it.clearValues();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
299	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
300	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
301	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  for(Iterator    it    =    options.helpRequires().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
302	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(option.getKey(),  option);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(option.getKey(),  option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.addValue(option.getKey(),  option);	  Option    option    =(Option)it.next();    opt.addValue(option.getKey());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
303	[BUG]  [BUGGY]  if(opt!=  null)  {  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  if(opt!=  null)  {  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	if(opt!=  null)  {  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.	  Option    option    =(Option)it.next();    if(option!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
304	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValu	  Option    option    =(Option)it.next();    if(option!=    null)    {    for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
305	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.requiredOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
306	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  }	  for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(opt);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
307	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  ListIterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
308	[BUG]  [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }	  ListIterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
309	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
310	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)opt.getKey();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.getKey();	  Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
311	[BUG]  [BUGGY]  Option  opt  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =(Option)option.clone();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)option.clone();	  Option    opt    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
312	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.getOptionGroup();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOptionGroup();	  Option    option    =(Option)options.addOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
313	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroup().getOption(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.getOptionGroup().getOption(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOptionGroup().getOption(opt);	  Option    option    =(Option)options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
314	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  for(Iterator    it    =    options.opts().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
315	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
316	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.clearOptions();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.clearOptions();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.clearOptions();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
317	[BUG]  [BUGGY]  Option  opt  =  options.helpOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  opt  =  options.helpOption(opt);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.helpOption(opt);	  Option    opt    =    options.clearValues();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
318	[BUG]  [BUGGY]  Option  option  =(Option)options.helpOptions().next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.helpOptions().next();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpOptions().next();	  ListIterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
319	[BUG]  [BUGGY]  Option  option  =(Option)options.helpOptions().next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.helpOptions().next();  opt.clearValues();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpOptions().next();  opt.clearValues();	  ListIterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
320	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
321	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.helpOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.opts.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
322	[BUG]  [BUGGY]  Option  option  =(Option)options.helpOptions().tokenList().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.helpOptions().tokenList().iterator();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpOptions().tokenList().iterator();	  Option    option    =(Option)options.tokenList().iterator();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
323	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.clearValues();  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
324	[BUG]  [BUGGY]  Option  option  =(Option)options.helpOptions();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)options.helpOptions();  opt.clearValues();  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpOptions();  opt.clearValues();	  Option    option    =(Option)options.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
325	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	  Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
326	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  Iterator    <    Option>    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
327	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(option);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.addValue(option);	  Option    option    =(Option)it.next();    opt.clearValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
328	[BUG]  [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(option);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(option);  [BUGGY]        [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.helpOptions().toArray(option);	  Option[]    arguments    =    options.helpOptions().toArray(opt);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
329	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();      [BUGGY]  Option  option  =(Option)opt.getKey();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getKey();	  Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
