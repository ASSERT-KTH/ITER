bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.addValue(option.getKey());	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  opt.clearValues();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.clearValues();	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)opt.next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  Option  option  =(Option)options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.helpOptions().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.helpOptions().iterator();	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(t);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  Option  opt  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)opt.next();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.next();	  if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  Option  opt  =(Option)options.next();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)options.next();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.next();	  if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  Option  opt  =(Option)options.get(0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)options.get(0);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)options.get(0);	  if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.next();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.next();	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(opt);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option[]  arguments  =  options.helpOptions().toArray(opt);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  arguments  =  options.helpOptions().toArray(opt);	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  Option[]  options  =  options.opts();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option[]  options  =  options.opts();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option[]  options  =  options.opts();	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  Option  option  =(Option)options.tokenList().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.tokenList().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.tokenList().iterator();	      for(Iterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.next();  opt.clearValues();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.next();  opt.clearValues();	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)opt.getValue();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.getValue();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  it.remove();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)opt.next();  it.remove();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  it.remove();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  opt.clearValues().add(option);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  opt.clearValues().add(option);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  opt.clearValues().add(option);	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  Option  option  =(Option)options.options().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.options().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().iterator();	      for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  Option  option  =(Option)options.options().next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.options().next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.options().next();	      for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)opt.next();  opt.clearValues();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  opt.clearValues();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.addOptions().iterator();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOptions().iterator();	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  Option  option  =(Option)options.addOption();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.addOption();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.addOption();	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)options.getOptions().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)options.getOptions().iterator();	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  for(Iterator  it  =  options.keySet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.keySet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.keySet().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  for(Iterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.addOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.addOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiresOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiresOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiresOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(opt);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
52	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	      for(Iterator    it    =    options.options().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireAtNonOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiredOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  ListIterator  it  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  ListIterator  it  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  ListIterator  it  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  ListIterator  it  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.tokenList().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  opt.clearValues();  }	      for(Iterator    it    =    options.tokenList().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  Option  opt  =(Option)opt.getValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)opt.getValue();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.getValue();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.getOption(opt);	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
63	[BUG]  [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	ListIterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
64	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  it.clearValues();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
65	[BUG]  [BUGGY]  Option  opt  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =  options.helpOptions().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.helpOptions().iterator();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =  options.helpOptions().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =  options.helpOptions().iterator();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requireOptions.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.requireOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  Option  opt  =  options.clearValues();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =  options.clearValues();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.clearValues();	  if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =  options.getOption(t);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =  options.getOption(t);	  if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.opts.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts.iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option);  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
75	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  it.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)it.next();  it.clearValues();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  it.clearValues();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  Option  opt  =(Option)opt.next();  it.clearValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)opt.next();  it.clearValues();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)opt.next();  it.clearValues();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  it.clearValues();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)opt.next();  it.clearValues();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)opt.next();  it.clearValues();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
79	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  CommandLine  cmd  =(CommandLine)it.next();  if(cmd!=  null)  {  cmd.addArg(t);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)it.next();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();	  if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.addValue(option.getKey());  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.addValue(option.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(option!=  null)  {  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  <  Option>  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues().add(option);  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues().add(option);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues()  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues()  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  if(opt!=  null)  {  for(Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  opt.clearValues()	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
89	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  it.clearValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  option  =(Option)it.next();  it.clearValues();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  option  =(Option)it.next();  it.clearValues();	  for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
90	[BUG]  [BUGGY]  Option  opt  =(Option)it.next();  opt.clearValues();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Option  opt  =(Option)it.next();  opt.clearValues();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Option  opt  =(Option)it.next();  opt.clearValues();	      if(opt!=    null)    {    for(Iterator    it    =    options.helpOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    opt.clearValues();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.helpRequires().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
92	[BUG]  [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
93	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();    [BUGGY]  for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	151	151	1	replace	for(Iterator  it  =  options.requiresOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  it.remove();  }	      for(Iterator    it    =    requiredOptions.iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    it.remove();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
