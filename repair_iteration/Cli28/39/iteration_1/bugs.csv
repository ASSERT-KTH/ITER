bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    ListIterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    ListIterator  iterator  =  options.iterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    ListIterator  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	82	None	add
2	[BUG]  [BUGGY]    ListIterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    ListIterator  iterator  =  opts.iterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    ListIterator  iterator  =  opts.iterator();		non-compiled	[CE]  illegal  start  of  type	82	None	add
3	[BUG]  [BUGGY]    ListIterator  iterator  =  options.listIterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    ListIterator  iterator  =  options.listIterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    ListIterator  iterator  =  options.listIterator();		non-compiled	[CE]  illegal  start  of  type	82	None	add
4	[BUG]  [BUGGY]    ListIterator  iterator  =  options.getIterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    ListIterator  iterator  =  options.getIterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    ListIterator  iterator  =  options.getIterator();		non-compiled	[CE]  illegal  start  of  type	82	None	add
5	[BUG]  [BUGGY]    parseOption(opt,  iterator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    parseOption(opt,  iterator);  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    parseOption(opt,  iterator);		non-compiled	[CE]  illegal  start  of  type	82	None	add
6	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
7	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
8	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(! "-- ".equals(t))  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(! "-- ".equals(t))  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(! "-- ".equals(t))  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
9	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
10	[BUG]  [BUGGY]    Iterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Iterator  iterator  =  options.iterator();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    Iterator  iterator  =  options.iterator();		non-compiled	[CE]  illegal  start  of  type	82	None	add
11	[BUG]  [BUGGY]    Option  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    Option  group  =  options.getOptionGroup();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    Option  group  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	82	None	add
12	[BUG]  [BUGGY]    ListIterator  iterator  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    ListIterator  iterator  =  options.getOptions();  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    ListIterator  iterator  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	82	None	add
13	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
14	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(str);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
15	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
16	[BUG]  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }		non-compiled	[CE]  illegal  start  of  type	82	None	add
17	[BUG]  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "- ".equals(str))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "- ".equals(str))  {  cmd.addArg(str);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "- ".equals(str))  {  cmd.addArg(str);  }		non-compiled	[CE]  illegal  start  of  type	82	None	add
18	[BUG]  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-- ".equals(str))  {  cmd.addArg(str);  }		non-compiled	[CE]  illegal  start  of  type	82	None	add
19	[BUG]  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "- ".equals(str))  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "- ".equals(str))  {  cmd.addArg(str);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "- ".equals(str))  {  cmd.addArg(str);  }		non-compiled	[CE]  illegal  start  of  type	82	None	add
20	[BUG]  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]  }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	    for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }		non-compiled	[CE]  illegal  start  of  type	82	None	add
21	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
22	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
23	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
24	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  String  str  =  (String)  iterator.next();  if  (! "-- ".equals(str))  {  cmd.addArg(str);  }  }  }  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg(t);  }  [BUGGY]    processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg(t);  }	}  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
