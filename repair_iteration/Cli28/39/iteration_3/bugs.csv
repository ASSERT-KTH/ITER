bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =  iterator.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  iterator.getOptionGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  iterator.getOptionGroup();	  Option    group    =    opt.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2	[BUG]  [BUGGY]  Option  group  =  opt.getGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  opt.getGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  opt.getGroup();	  Option    group    =    opt.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--.equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--.equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--.equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!       "-   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
4	[BUG]  [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.keySet().iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
5	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.keySet().iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
6	[BUG]  [BUGGY]  List  <  String>  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.keySet().iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
7	[BUG]  [BUGGY]  parseOption(options,  iterator,  opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(options,  iterator,  opt);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(options,  iterator,  opt);	  parseOption(opt,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
8	[BUG]  [BUGGY]  parseOption(opt,  options,  iterator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  options,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  options,  iterator);	  parseOption(opt,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
9	[BUG]  [BUGGY]  parseOption(t,  iterator,  options);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(t,  iterator,  options);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator,  options);	  parseOption(opt,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
10	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(false);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(false);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
11	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(true,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(true,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
12	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(true,  t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(true,  t);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
13	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  opts.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    <    Option>    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  opts.iterator();	  Iterator    <    Option>    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
15	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  options.iterator();	  Iterator    <    Option>    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
16	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions(t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptions(t,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptions(t,  arguments);	  ListIterator    iterator    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
17	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions(t,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptions(t,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptions(t,  group);	  ListIterator    iterator    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
18	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  str  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  str  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  str  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()    ==    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
19	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()    ==    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
20	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.add  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.add  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.add	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
21	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.entrySet().iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.entrySet().iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.entrySet().iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
22	[BUG]  [BUGGY]  parseOption(opt,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  arguments,  stopAtNonOption);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  parseOption(options,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(options,  iterator,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(options,  iterator,  arguments);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
24	[BUG]  [BUGGY]  parse(opt,  iterator,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parse(opt,  iterator,  arguments,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parse(opt,  iterator,  arguments,  stopAtNonOption);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
25	[BUG]  [BUGGY]  parseOption(opt,  arguments,  iterator);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  arguments,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  arguments,  iterator);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
26	[BUG]  [BUGGY]  parseOption(opt,  iterator,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  requiredOptions,  stopAtNonOption);	  parseOption(opt,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
27	[BUG]  [BUGGY]  parse(opt,  iterator,  requiredOptions,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parse(opt,  iterator,  requiredOptions,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parse(opt,  iterator,  requiredOptions,  stopAtNonOption);	  parseOption(opt,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
28	[BUG]  [BUGGY]  ListIterator  iterator  =  this.opts.listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  this.opts.listIterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  this.opts.listIterator();	  ListIterator    iterator    =    opts.listIterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
29	[BUG]  [BUGGY]  ListIterator  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  t.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  t.iterator();	  ListIterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
30	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
31	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
32	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
34	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
35	[BUG]  [BUGGY]  Option  group  =  options.getArgumentGroup(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getArgumentGroup(t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getArgumentGroup(t);	  Option    group    =    options.getArgumentGroup();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
36	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(cmd  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(cmd  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(cmd	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(s    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
37	[BUG]  [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
38	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
39	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  eatTheRest);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(t,  eatTheRest);	  ListIterator    iterator    =    options.getIterator(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
40	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(t,  arguments);	  ListIterator    iterator    =    options.getIterator(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  group);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(t,  group);	  ListIterator    iterator    =    options.getIterator(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  ListIterator  iterator  =(this.opts!=  null)?  this.opts.iterator()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =(this.opts!=  null)?  this.opts.iterator()  :  null;  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =(this.opts!=  null)?  this.opts.iterator()  :  null;	  ListIterator    iterator    =    this.opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
43	[BUG]  [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
44	[BUG]  [BUGGY]  parseOption(t,  iterator,  opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(t,  iterator,  opt);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator,  opt);	  parseOption(opt,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  parseOption(options,  iterator,  t);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(options,  iterator,  t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(options,  iterator,  t);	  parseOption(opt,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
46	[BUG]  [BUGGY]  parseOption(iterator,  opt,  t);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(iterator,  opt,  t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(iterator,  opt,  t);	  parseOption(opt,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
47	[BUG]  [BUGGY]  Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
48	[BUG]  [BUGGY]  List  <  CommandLine>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  CommandLine>  iterator  =  this.options.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  CommandLine>  iterator  =  this.options.iterator();	  List    <    CommandLine>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  List  <  CommandLine>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  CommandLine>  iterator  =  options.values().iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  CommandLine>  iterator  =  options.values().iterator();	  List    <    CommandLine>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  List  <  CommandLine>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  CommandLine>  iterator  =  opts.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  CommandLine>  iterator  =  opts.iterator();	  List    <    CommandLine>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  ListIterator  iterator  =  this.optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  this.optionOptions.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  this.optionOptions.iterator();	  ListIterator    iterator    =    optionOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
52	[BUG]  [BUGGY]  Option  group  =  options.getGroup(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getGroup(t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getGroup(t);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
53	[BUG]  [BUGGY]  Option  group  =  iterator.getGroup();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  iterator.getGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  iterator.getGroup();	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
54	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keyList().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.keyList().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.keyList().iterator();	  ListIterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
55	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
56	[BUG]  [BUGGY]  Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  arguments.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
57	[BUG]  [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
58	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
59	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
60	[BUG]  [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  this.opts.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  this.opts.iterator();	  Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
61	[BUG]  [BUGGY]  Iterator  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  properties.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  properties.iterator();	  Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptionList().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptionList().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptionList().iterator();	  ListIterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
63	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptionGroups().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptionGroups().iterator();	  ListIterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
64	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptionGroup().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptionGroup().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptionGroup().iterator();	  ListIterator    iterator    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
65	[BUG]  [BUGGY]  for(Iterator  iterator  =  this.options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  this.options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  this.options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.add	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
66	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
67	[BUG]  [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  opts.keySet().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  opts.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
68	[BUG]  [BUGGY]  Iterator  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  this.arguments.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  this.arguments.iterator();	  Iterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
70	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  opts.keySet().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  opts.keySet().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
71	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  >=  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  >=  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  >=  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
72	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  str  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  str  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  str  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
73	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
74	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(options,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNull(options,  stopAtNonOption);	  ListIterator    iterator    =    options.getIteratorIfNull(options);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
75	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(options).iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(options).iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNull(options).iterator();	  ListIterator    iterator    =    options.getIteratorIfNull(options);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
76	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(opts);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(opts);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNull(opts);	  ListIterator    iterator    =    options.getIteratorIfNull(options);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
77	[BUG]  [BUGGY]  Iterator  it  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  this.options.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  this.options.iterator();	  Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
78	[BUG]  [BUGGY]  Iterator  it  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  arguments.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  arguments.iterator();	  Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
79	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  eatTheRest);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t,  eatTheRest);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t,  arguments);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t,  str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
83	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(str);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.listIterator(str);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(str);	  ListIterator    iterator    =    options.listIterator(t);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(t,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.listIterator(t,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(t,  arguments);	  ListIterator    iterator    =    options.listIterator(t);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(t,  argumentList);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.listIterator(t,  argumentList);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(t,  argumentList);	  ListIterator    iterator    =    options.listIterator(t);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
86	[BUG]  [BUGGY]  parseOption(t,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(t,  iterator,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator,  arguments);	  parseOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
87	[BUG]  [BUGGY]  parseOption(t,  iterator,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(t,  iterator,  eatTheRest);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator,  eatTheRest);	  parseOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  parseOption(t,  iterator,  option);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(t,  iterator,  option);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator,  option);	  parseOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  for(Iterator  iterator  =  this.options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  this.options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  this.options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
90	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t,  stopAtNonOption);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
91	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(str);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
92	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  blockAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t,  blockAtNonOption);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
93	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  eatTheRest);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t,  eatTheRest);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  List  <  String>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  this.options.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  this.options.iterator();	  List    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
95	[BUG]  [BUGGY]  List  <  String>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  options.values().iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  options.values().iterator();	  List    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
96	[BUG]  [BUGGY]  List  <  String>  iterator  =  t.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  t.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  t.iterator();	  List    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--.equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--.equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--.equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!       "-   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
98	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  Iterator  it  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  this.opts.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  this.opts.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
101	[BUG]  [BUGGY]  Iterator  it  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  properties.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  properties.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
102	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.get(t);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.get(t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.get(t);	  Option    option    =    options.get(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  Option  option  =  opts.get(str);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  opts.get(str);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  opts.get(str);	  Option    option    =    options.get(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.get(str  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.get(str  +  1);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.get(str  +  1);	  Option    option    =    options.get(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  if(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  if(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  if(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
107	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(t,  eatTheRest);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(t,  eatTheRest);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
108	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(t,  cmd);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(t,  cmd);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  iterator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(t,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(t,  iterator);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
110	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  options.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  options.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
111	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  this.arguments.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  this.arguments.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
112	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  properties.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  properties.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
113	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.options.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.options.iterator();	  ListIterator    iterator    =    options.opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
114	[BUG]  [BUGGY]  parseOption(option,  iterator);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(option,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(option,  iterator);	  parseOption(iterator,    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
115	[BUG]  [BUGGY]  parse(opt,  iterator);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parse(opt,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parse(opt,  iterator);	  parseOption(iterator,    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
116	[BUG]  [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  opts.values().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  opts.values().iterator();	  Iterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
117	[BUG]  [BUGGY]  List  <  String>  iterator  =  this.arguments.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  this.arguments.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  this.arguments.iterator();	  List    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
119	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
120	[BUG]  [BUGGY]  Iterator  <  String>  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  it  =  options.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  it  =  options.iterator();	  Iterator    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
121	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  opts.values().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  opts.values().iterator();	  ListIterator    iterator    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
122	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(opt);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
123	[BUG]  [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!       "--   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
124	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  opt.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  opt.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
125	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  opts.iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
126	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
127	[BUG]  [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()    ==    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
128	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()    ==    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
129	[BUG]  [BUGGY]  Iterator  iterator  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  options.options.keySet().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.options.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
130	[BUG]  [BUGGY]  if(opt!=  null)  {  parseOption(iterator,  opt);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  if(opt!=  null)  {  parseOption(iterator,  opt);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	if(opt!=  null)  {  parseOption(iterator,  opt);  }	  parseOption(iterator,    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
131	[BUG]  [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
132	[BUG]  [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
133	[BUG]  [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
134	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
135	[BUG]  [BUGGY]  List  <  String>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  options.keySet().iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  options.keySet().iterator();	  List    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
136	[BUG]  [BUGGY]  List  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  opts.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  opts.iterator();	  List    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
137	[BUG]  [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
138	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
139	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
140	[BUG]  [BUGGY]  Option  group  =  opt.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  opt.getArgumentGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  opt.getArgumentGroup();	  Option    group    =    options.getArgumentGroup();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
141	[BUG]  [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  optionOptions.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  optionOptions.iterator();	  Iterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
142	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
143	[BUG]  [BUGGY]  ListIterator  iterator  =  options.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.options.keySet().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.options.keySet().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
144	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions(opt);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptions(opt);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptions(opt);	  ListIterator    iterator    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
145	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptions(options);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptions(options);	  ListIterator    iterator    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
146	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
147	[BUG]  [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!       "-   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
148	[BUG]  [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
149	[BUG]  [BUGGY]  For(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  For(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	For(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
150	[BUG]  [BUGGY]  ListIterator  iterator  =  options.opts.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.opts.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.opts.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.keySet().iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
151	[BUG]  [BUGGY]  parseOption(opt,  options,  arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  options,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  options,  arguments);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
152	[BUG]  [BUGGY]  List  <  String>  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  opt.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  opt.iterator();	  List    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
153	[BUG]  [BUGGY]  List  <  String>  iterator  =  options.listIterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  options.listIterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  options.listIterator();	  List    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
154	[BUG]  [BUGGY]  List  <  CommandLine>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  CommandLine>  iterator  =  options.keySet().iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  CommandLine>  iterator  =  options.keySet().iterator();	  List    <    CommandLine>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
155	[BUG]  [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  opts.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
156	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
157	[BUG]  [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!       "--   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
158	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(opt);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNull(opt);	  ListIterator    iterator    =    options.getIteratorIfNull(options);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
159	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIterator(options);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(options);	  ListIterator    iterator    =    options.getIteratorIfNull(options);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
160	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(t,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.listIterator(t,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(t,  group);	  ListIterator    iterator    =    options.listIterator(t);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
161	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(options);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.listIterator(options);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(options);	  ListIterator    iterator    =    options.listIterator(t);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
162	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.listIterator(opt);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(opt);	  ListIterator    iterator    =    options.listIterator(t);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
163	[BUG]  [BUGGY]  ListIterator  iterator  =  optionOptions.listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  optionOptions.listIterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  optionOptions.listIterator();	  ListIterator    iterator    =    opts.listIterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
164	[BUG]  [BUGGY]  Iterator  iterator  =  opt.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  opt.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  opt.iterator();	  Iterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
165	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(t,  stopAtNonOption);	  ListIterator    iterator    =    options.getIterator(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
166	[BUG]  [BUGGY]  parseOption(opt,  iterator,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  options,  stopAtNonOption);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  options,  stopAtNonOption);	  parseOption(opt,    iterator,    options);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
167	[BUG]  [BUGGY]  Option  group  =  option.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  option.getOptionGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  option.getOptionGroup();	  Option    group    =    opt.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
168	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
169	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
170	[BUG]  [BUGGY]  Iterator  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.keySet().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.keySet().iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
171	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  requiredOptions.iterator();	  Iterator    it    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
172	[BUG]  [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!       "-   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
173	[BUG]  [BUGGY]  Iterator  it  =  opts.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  opts.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  opts.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
174	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
175	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.keySet();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.keySet();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
176	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.keySet();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.keySet();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
177	[BUG]  [BUGGY]  Iterator  it  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.values().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.values().iterator();	  Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
178	[BUG]  [BUGGY]  parseOption(opt,  iterator,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  str);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  str);	  parseOption(opt,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  this);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t,  this);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
180	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  group);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t,  group);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
181	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(s  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(s  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(s	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(s    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
182	[BUG]  [BUGGY]  ListIterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  requiredOptions.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  requiredOptions.iterator();	  ListIterator    iterator    =    optionOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
183	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  requiredOptions.iterator();	  Iterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
184	[BUG]  [BUGGY]  parseOption(opt,  iterator,  arguments,  t);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  arguments,  t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  arguments,  t);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
185	[BUG]  [BUGGY]  parseOption(opt,  iterator,  arguments,  group);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  arguments,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  arguments,  group);	  parseOption(opt,    iterator,    arguments);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
186	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.values().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.values().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.values().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.keySet().iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
187	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
188	[BUG]  [BUGGY]  parseOption(opt,  iterator,  block);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  block);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  block);	  parseOption(opt,    iterator,    t);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
189	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()    ==    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
190	[BUG]  [BUGGY]  Iterator  <  String>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
191	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext())  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext())  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext())  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
192	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  options.keySet().iterator();	  Iterator    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
193	[BUG]  [BUGGY]  ListIterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  arguments.iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  arguments.iterator();	  ListIterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
194	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
195	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
196	[BUG]  [BUGGY]  ListIterator  iterator  =  optionGroups.listIterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  optionGroups.listIterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  optionGroups.listIterator();	  ListIterator    iterator    =    opts.listIterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
197	[BUG]  [BUGGY]  ListIterator  iterator  =  optionGroup.listIterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  optionGroup.listIterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  optionGroup.listIterator();	  ListIterator    iterator    =    opts.listIterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
198	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
199	[BUG]  [BUGGY]  parseOption(t,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(t,  iterator,  requiredOptions);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator,  requiredOptions);	  parseOption(t,    iterator);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
200	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptionGroups(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getOptionGroups(t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptionGroups(t);	  ListIterator    iterator    =    options.getOptions(t);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
201	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
202	[BUG]  [BUGGY]  for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
203	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
204	[BUG]  [BUGGY]  Iterator  <  String>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
205	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t,  iterator);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
206	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  this);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t,  this);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
207	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  group);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  opt  =  options.getOption(t,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t,  group);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
208	[BUG]  [BUGGY]  ListIterator  iterator  =  options.list().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.list().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.list().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
209	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
210	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg!=  processProperties(prop  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg!=  processProperties(prop  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg!=  processProperties(prop	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
211	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  >>  processProperties(prop  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  >>  processProperties(prop  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  >>  processProperties(prop	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
212	[BUG]  [BUGGY]  List  <  String>  iterator  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  List  <  String>  iterator  =  properties.iterator();  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  properties.iterator();	  List    <    String>    iterator    =    arguments.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
213	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    iterator    =    options.iterator();    while(iterator.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
214	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    iterator    =    options.iterator();    while(iterator.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
215	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
216	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(t,  true);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(t,  true);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
217	[BUG]  [BUGGY]  parseOption(opt,  iterator,  requiredOptions,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(opt,  iterator,  requiredOptions,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  requiredOptions,  group);	  parseOption(opt,    iterator,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
218	[BUG]  [BUGGY]  Iterator  <  String>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  String>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
219	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(t,  arguments);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(t,  arguments);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
220	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
221	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
222	[BUG]  [BUGGY]  Option  group  =  options.group();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  options.group();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.group();	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
223	[BUG]  [BUGGY]  Ilerator  <  Option>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Ilerator  <  Option>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Ilerator  <  Option>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    <    Option>    it    =    options.iterator();    while(it.hasNext())    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
224	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNonOption(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNonOption(options);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNonOption(options);	  ListIterator    iterator    =    options.getIteratorIfNull(options);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
225	[BUG]  [BUGGY]  for(Iterator  it  =  this.options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  this.options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  this.options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!       "-   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
226	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  iterator  =  this.options.keySet().iterator();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  this.options.keySet().iterator();	  Iterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
227	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	OptionGroup  group  =  options.getOptionGroup();	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
228	[BUG]  [BUGGY]  OptionGroup  opt  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  OptionGroup  opt  =  options.getOptionGroup();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	OptionGroup  opt  =  options.getOptionGroup();	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
229	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	OptionGroup  group  =  options.getOptionGroup(t);	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
230	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(t);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNull(t);	  ListIterator    iterator    =    options.getIterator(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
231	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  block);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  ListIterator  iterator  =  options.getIterator(t,  block);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(t,  block);	  ListIterator    iterator    =    options.getIterator(t);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
232	[BUG]  [BUGGY]  for(Iterator  it  =  this.options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  this.options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  this.options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "-   ".equals(str))  {  cmd.addArg(	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!       "-   ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
233	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  option  =  options.getOption(t,  iterator);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t,  iterator);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
234	[BUG]  [BUGGY]  parseOption(iterator,  group);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  parseOption(iterator,  group);  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(iterator,  group);	  parseOption(iterator,    opt);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
235	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
236	[BUG]  [BUGGY]  Option  group  =  iterator.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Option  group  =  iterator.next();  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  iterator.next();	  Option    group    =    opt.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
237	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]        processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  ListIterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
238	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  requiredOptions.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  Iterator    it    =    opts.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
239	[BUG]  [BUGGY]  if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
240	[BUG]  [BUGGY]  if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
241	[BUG]  [BUGGY]  if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  String  str  =  (String)  iterator.next();  if  (!     "--     ".equals(str))  {  cmd.addArg(str);  }  }  }      [BUGGY]  if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [BUGGY]      }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	if(options!=  null)  {  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.add	  ListIterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--       ".equals(str))    {    cmd.addArg(    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
