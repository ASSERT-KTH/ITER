bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  it  =  options.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "-   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.getOption(t);	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "-   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  Iterator  it  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  it  =  opts.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  opts.iterator();	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "-   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.get(str);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  option  =  options.get(str);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  option  =  options.get(str);	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "-   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  List  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  List  <  String>  iterator  =  options.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  options.iterator();	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(!   "--   ".equals(t))    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  arguments.iterator();	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(!   "--   ".equals(t))    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  List  <  String>  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  List  <  String>  iterator  =  arguments.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  String>  iterator  =  arguments.iterator();	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(!   "--   ".equals(t))    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.keySet().iterator();	      ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.listIterator(t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.listIterator(t);	      ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
12	[BUG]  [BUGGY]  List  <  CommandLine>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  List  <  CommandLine>  iterator  =  options.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	List  <  CommandLine>  iterator  =  options.iterator();	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  opt  =  options.getOption(t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  opt  =  options.getOption(t);	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIterator(t);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.getIterator(t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIterator(t);	      ListIterator    iterator    =    options.getIterator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  this.options.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  Iterator  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  iterator  =  opts.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  opts.iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
18	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
19	[BUG]  [BUGGY]  parseOption(t,  iterator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  parseOption(t,  iterator);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(t,  iterator);	      parseOption(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  parseOption(opt,  iterator,  t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  parseOption(opt,  iterator,  t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  t);	      parseOption(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  parseOption(opt,  iterator,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  parseOption(opt,  iterator,  arguments);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  arguments);	      parseOption(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  parseOption(iterator,  opt);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  parseOption(iterator,  opt);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(iterator,  opt);	      parseOption(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Option  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  group  =  options.getGroup();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getGroup();	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  group  =  options.getOptionGroup(t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(t);	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  Option  group  =  opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  group  =  opt.getOptionGroup();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  opt.getOptionGroup();	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions(t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.getOptions(t);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptions(t);	      ListIterator    iterator    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.getOptions().iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getOptions().iterator();	      ListIterator    iterator    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  this.options.iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.values().iterator();	      ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  ListIterator  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  this.opts.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  this.opts.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
37	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(!   "-- ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(!   "-- ".equals(str))  {  cmd.addArg(  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(!   "-- ".equals(str))  {  cmd.addArg(	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(! "--   ".equals(str))  {  cmd.add	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  ListIterator  iterator  =  opts.listIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  opts.listIterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  opts.listIterator();	      ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
44	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()!=  0)  {  cmd.addArg	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
46	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
47	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "-- ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "-- ".equals(str))  {  cmd.addArg(  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "-- ".equals(str))  {  cmd.addArg(	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.keySet().iterator();  iterator.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(!   "- ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(!   "- ".equals(str))  {  cmd.addArg(  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentGroup)iterator.next();  if(!   "- ".equals(str))  {  cmd.addArg(	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentGroup)iterator.next();    if(!   "-   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "- ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "- ".equals(str))  {  cmd.addArg(  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  options.iterator();  it.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "- ".equals(str))  {  cmd.addArg(	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "-   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(!   "--   ".equals(t))  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(!   "--   ".equals(t))  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(!   "--   ".equals(t))  {  cmd.addArg(t);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(!   "--   ".equals(t))    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(!   "--   ".equals(t))  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(!   "--   ".equals(t))  {  cmd.addArg  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(!   "--   ".equals(t))  {  cmd.addArg	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(!   "--   ".equals(t))    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
55	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(s  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(s  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!stopAtNonOption)  {  cmd.addArg(s	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  ListIterator  iterator  =  optionOptions.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  optionOptions.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  optionOptions.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "--   ".equals(str))  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "--   ".equals(str))  {  cmd.addArg  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "--   ".equals(str))  {  cmd.addArg	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "--   ".equals(str))  {  cmd.add  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "--   ".equals(str))  {  cmd.add  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(!   "--   ".equals(str))  {  cmd.add	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.getIteratorIfNull(options);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.getIteratorIfNull(options);	      ListIterator    iterator    =    options.getIterator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  group  =  options.getOptionGroup(true);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getOptionGroup(true);	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  String[]  t  =(String[])iterator.next();  if(t.length()  ==  0)  {  cmd.addArg	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()    ==    0)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.keySet().iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  it  =  opts.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  it.hasNext();)  {  if(!stopAtNonOption)  {  cmd.addArg(t);  }	  for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  parseOption(opt,  iterator,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  parseOption(opt,  iterator,  requiredOptions);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  requiredOptions);	      parseOption(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  parseOption(opt,  iterator,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  parseOption(opt,  iterator,  options);  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	parseOption(opt,  iterator,  options);	      parseOption(opt,    iterator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  <  String>  iterator  =  arguments.iterator();  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  String>  iterator  =  arguments.iterator();	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    String[]    t    =(String[])iterator.next();    if(t.length()!=    0)    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  CommandLine  cmd  =(ArgumentLine)iterator.next();  if(! "--   ".equals(str))  {  cmd.addArg(	  for(Iterator    iterator    =    options.iterator();    iterator.hasNext();)    {    CommandLine    cmd    =(ArgumentLine)iterator.next();    if(!   "--   ".equals(str))    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  <  Option>  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
71	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  it  =  options.iterator();  while(it.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	      for(Iterator    it    =    options.iterator();    it.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
72	[BUG]  [BUGGY]  ListIterator  iterator  =  options.opts.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  ListIterator  iterator  =  options.opts.iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	ListIterator  iterator  =  options.opts.iterator();	      ListIterator    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.iterator();  while(iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(str);  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(str);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext())  {  if(!stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
75	[BUG]  [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }  [BUGGY]      processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	for(Iterator  iterator  =  arguments.iterator();  iterator.hasNext();)  {  if(stopAtNonOption)  {  cmd.addArg(iterator.next());  }	  for(Iterator    iterator    =    arguments.iterator();    iterator.hasNext();)    {    if(!stopAtNonOption)    {    cmd.addArg(iterator.next());    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  Iterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Iterator  iterator  =  options.values().iterator();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Iterator  iterator  =  options.values().iterator();	      Iterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
77	[BUG]  [BUGGY]  Option  group  =  options.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  str  =  (String)  iterator.next();  if  (!   "--   ".equals(str))  {  cmd.addArg(str);  }  }  }    [BUGGY]  Option  group  =  options.getArgumentGroup();  [BUGGY]    }  processProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	239	239	1	replace	Option  group  =  options.getArgumentGroup();	      Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
