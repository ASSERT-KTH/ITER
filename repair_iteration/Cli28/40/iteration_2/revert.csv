projects/Cli28/src/java/org/apache/commons/cli/Parser.java241
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opts);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next():null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241||!stopAtNonOption){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(t,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(opt,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options);}else{cmd.addArg(t);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.getValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.clone();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(opts);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processRequiredOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options==null){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>0){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(t)){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.remove();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.options.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(options,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,arguments,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,blockAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,stopAtNonOption,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processProperties(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processProperties(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processOptions(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,blockAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opts.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=cmd.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,str,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(iterator,properties,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=t.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opt.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=properties.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(opts,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processRequiredOptions(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processRequiredOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(false);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=iterator.getOption(t,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processRequiredOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(false);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(option,iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(option,iterator,property);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(option,iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=properties.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241tehnicăProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,cmd);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=properties.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=opt.getGroup();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup():null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()&&cmd.charAt(str.length()-1)!='-');
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()&&cmd.charAt(str.length()-1)!='-';
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(options,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(options,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.addArg(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(opt,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(options,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241||eatTheRest){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241||stopAtNonOption){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241||stopAtNonOption){processRequiredOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.arguments.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,iterator);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opts,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,requiredOptions,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOptions(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOption(properties,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(opts,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,null);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.getIterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opts.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=properties.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(iterator,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(iterator,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.options.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,arguments,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,arguments,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this.arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=opts.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.hasOption(t)?options.getOption(t):null;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.hasOption(t)?options.getOption(t):processProperties(properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,iterator,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=iterator.getOption(t,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,iterator,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(t,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,argument);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(t,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(properties,stopAtNonOption,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(opt,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=opts.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=opt.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,null);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(properties,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opt);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processOptions(opt);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processOptions(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,iterator,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.getKey();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,stopAtNonOption,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(t,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(t,iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,t,null);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opts);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,iterator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,iterator,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null||options.size()>0){processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>0){processRequiredOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOption(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(block,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,block,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,block,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,block,null);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(properties,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opts,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opts);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processOptions(opts);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opts,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next():this;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next():arguments;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(options,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionsopt=options.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=optionGroup.getOption(t,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241||!stopAtNonOption){processRequiredOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(opt,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(cmd,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=optionOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(false,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,eatTheRest);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this.options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=option.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=this.opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=option.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opt.values().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>0){processOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this.stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(opt,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(opts,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(opts);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(t,cmd,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,options);}else{thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(cmd);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processRequiredOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(options,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=optionGroup.getOption(t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("opt");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption("opt");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(opt,properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this.stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(options,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.hasOption(t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(t)){processOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(t)){processRequiredOptions(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(opt,properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(options,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(opts,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(false,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(opt,properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(opt,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(opt,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241ListIteratoriterator=options.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,iterator,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(opts!=null){processOptions(opts);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,arguments,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,iterator,requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOptions(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroup(true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=optionGroup.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,stopAtNonOption);}else{cmd.addArg(arguments[0]);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()+1;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()+"-"+t;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processOptions(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processOptions(opt,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processRequiredOptions(options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(opt,iterator,option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption)processProperties(properties,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,stopAtNonOption,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,stopAtNonOption,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(t)){processProperties(properties,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(t)||processProperties(properties);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processRequiredOptions(properties,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOption(properties,stopAtNonOption,argument);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opts.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processProperties(properties,iterator,expectedOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,blockAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(properties,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroups();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,option,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken(),block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties,iterator);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,neededOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=iterator.getOption(str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(options,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processOptions(options,options);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,options,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,options,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,this.requiredOptions);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,requiredOptions,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator,option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(opt,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opt.keySet().iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processProperties(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241options.processProperties(properties,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(iterator,properties,group);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,iterator,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opt,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,iterator,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,t,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOptions(options,block);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(properties,stopAtNonOption);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(properties,iterator);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Iteratoriterator=requiredOptions.iterator();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,separator,t);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,cmd);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,str);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(properties,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(properties,stopAtNonOption,iterator);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(properties,stopAtNonOption,options);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241processOption(properties,blockAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(option,properties,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this,arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(options,str,stopAtNonOption);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,argument);
