bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(!str.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!str.equals( "-- "))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!str.equals( "-- "))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isEmpty(t))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isNotEmpty(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isNotEmpty(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isNotEmpty(t))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  else  if(!t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!t.equals( "-- "))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!t.equals( "-- "))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  it  =  opts.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  it  =  opts.iterator();	      Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  it  =  this.options.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  it  =  this.options.iterator();	      Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  it  =  options.keySet().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  it  =  options.keySet().iterator();	      Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&  str.equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&  str.equals(t))  {	  else    if(!stopAtNonOption    &&   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
9	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[t].equals(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[t].equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[t].equals(t))  {	  else    if(!stopAtNonOption    &&   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
10	[BUG]  [BUGGY]  Option  group  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Option  group  =(OptionGroup)iterator.next();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Option  group  =(OptionGroup)iterator.next();	      OptionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  optionGroup  group  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  optionGroup  group  =(OptionGroup)iterator.next();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	optionGroup  group  =(OptionGroup)iterator.next();	      OptionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
12	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }	      if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	      if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	try  {  [Delete]  catch(Throwable  t)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }	      if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  String  str  =(String)iterator.next()  :  null;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  String  str  =(String)iterator.next()  :  null;  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	String  str  =(String)iterator.next()  :  null;	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  else  if(t.equals( "- ")||  t.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t.equals( "- ")||  t.equals( "- "))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t.equals( "- ")||  t.equals( "- "))  {	  else    if(   "-   ".equals(t)||       "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  else  if(str.equals( "- ")||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(str.equals( "- ")||  str.equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(str.equals( "- ")||  str.equals(t))  {	  else    if(   "-   ".equals(t)||       "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  iterator  =  options.iterator();  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  iterator  =  options.iterator();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Option  group  =  iterator.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Option  group  =  iterator.next();  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Option  group  =  iterator.next();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  option  cmd  =(Option)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  option  cmd  =(Option)iterator.next();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	option  cmd  =(Option)iterator.next();	      Option    cmd    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	||  stopAtNonOption)  {  eatTheRest  =  true;  }	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  While(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  While(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	While(stopAtNonOption)  {  if(stopAtNonOption)  {  eatTheRest  =  true;  }	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
23	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  true;  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	While(stopAtNonOption)  {  eatTheRest  =  true;	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	||  stopAtNonOption)  {  eatTheRest  =  true;	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  iterator  =  this.opts.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  iterator  =  this.opts.iterator();	      Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  iterator  =  this.options.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  iterator  =  this.options.iterator();	      Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  iterator  =  options.keySet().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  iterator  =  options.keySet().iterator();	      Iterator    <    Option>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  String>  iterator  =  this.options.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  String>  iterator  =  this.options.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  String>  iterator  =  opts.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  String>  iterator  =  opts.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  String>  iterator  =  options.keySet().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  String>  iterator  =  options.keySet().iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t  ==  null  ||!stopAtNonOption)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t  ==  null  ||!stopAtNonOption)  {	  else    if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  else  if(cmd  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(cmd  ==  null)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(cmd  ==  null)  {	  else    if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  else  if(t!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t!=  null)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t!=  null)  {	  else    if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  else  if(!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption)  {	  else    if(stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
35	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  cmd.contains(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(stopAtNonOption  &&  cmd.contains(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(stopAtNonOption  &&  cmd.contains(t))  {	  else    if(stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
36	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  iterator.hasNext())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(stopAtNonOption  &&  iterator.hasNext())  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(stopAtNonOption  &&  iterator.hasNext())  {	  else    if(stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
37	[BUG]  [BUGGY]  optionGroup  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  optionGroup  =(OptionGroup)iterator.next();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	optionGroup  =(OptionGroup)iterator.next();	      Option    group    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  else  if(t.equals( "- ")||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t.equals( "- ")||!stopAtNonOption)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t.equals( "- ")||!stopAtNonOption)  {	  else    if(   "-   ".equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  else  if( "-- ".equals(t)||!stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if( "-- ".equals(t)||!stopAtNonOption)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if( "-- ".equals(t)||!stopAtNonOption)  {	  else    if(   "-   ".equals(t)||!stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  else  if(t.equals( "-- "))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t.equals( "-- "))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t.equals( "-- "))  {	  else    if(   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  else  if( "-- ".equals(t)||  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if( "-- ".equals(t)||  stopAtNonOption)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if( "-- ".equals(t)||  stopAtNonOption)  {	  else    if(   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  Iterator  it  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  this.options.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  this.options.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  Iterator  it  =  opts.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  opts.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  opts.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  Iterator  it  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  arguments.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  arguments.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	OptionGroup  group  =  options.getOptionGroup(opt);	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	OptionGroup  group  =  options.getOptionGroup(t);	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getIterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.getIterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	OptionGroup  group  =(OptionGroup)iterator.getIterator();	      OptionGroup    group    =(OptionGroup)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  iterator  =  requiredOptions.iterator();	      Iterator    <    Option>    iterator    =    opts.iterator();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  cmd.containsArg(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(stopAtNonOption  &&  cmd.containsArg(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(stopAtNonOption  &&  cmd.containsArg(t))  {	  else    if(stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  cmd!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(stopAtNonOption  &&  cmd!=  null)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(stopAtNonOption  &&  cmd!=  null)  {	  else    if(stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  String>  iterator  =  options.values().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  String>  iterator  =  options.values().iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
52	[BUG]  [BUGGY]  else  if(!stopAtNonOption  && "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  && "-- ".equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  && "-- ".equals(t))  {	  else    if(!stopAtNonOption    &&   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
53	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0)  {	  else    if(!stopAtNonOption    &&   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&!StringUtils.isEmpty(str))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&!StringUtil.isEmpty(t))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&! "--   ".equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&! "--   ".equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&! "--   ".equals(t))  {	  else    if(!   "--   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  iterator  =  options.values().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  iterator  =  options.values().iterator();	      Iterator    <    Option>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  else  if(t.equals( "- ")||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t.equals( "- ")||  str.equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t.equals( "- ")||  str.equals(t))  {	  else    if(   "-   ".equals(t)||       "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  else  if(str.equals(t)||  str.equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(str.equals(t)||  str.equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(str.equals(t)||  str.equals(t))  {	  else    if(   "-   ".equals(t)||       "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  else  if( "--   ".equals(t)||   "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if( "--   ".equals(t)||   "-- ".equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if( "--   ".equals(t)||   "-- ".equals(t))  {	  else    if(   "-   ".equals(t)||       "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  else  if(opt  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(opt  ==  null)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(opt  ==  null)  {	  else    if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =(Option)iterator.getObject();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Option  cmd  =(Option)iterator.getObject();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Option  cmd  =(Option)iterator.getObject();	      Option    cmd    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
63	[BUG]  [BUGGY]  Option  group  =(Option)iterator.next();  cmd.addArg(group);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Option  group  =(Option)iterator.next();  cmd.addArg(group);  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Option  group  =(Option)iterator.next();  cmd.addArg(group);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  Iterator  it  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  options.keySet().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  options.keySet().iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  Iterator  it  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  options.values().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  options.values().iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  String  str  =(String)iterator.getValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  String  str  =(String)iterator.getValue();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	String  str  =(String)iterator.getValue();	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  Option  group  =(Option)iterator.getIterator();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Option  group  =(Option)iterator.getIterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Option  group  =(Option)iterator.getIterator();	      Option    group    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  it  =  options.values().iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  it  =  options.values().iterator();	      Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  [Delete]  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	[Delete]	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	OptionGroup  group  =  options.getOptionGroup();	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains(t))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.contains(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&  arguments.contains(t))  {	  else    if(!stopAtNonOption    &&   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
72	[BUG]  [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[0].equals(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[0].equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(!stopAtNonOption  &&  arguments.length  >  0  &&  arguments[0].equals(t))  {	  else    if(!stopAtNonOption    &&   "-   ".equals(t))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
73	[BUG]  [BUGGY]  try  ==  stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  try  ==  stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	try  ==  stopAtNonOption)  {  eatTheRest  =  true;  }	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(t);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  aughtExceptionHandler.handleMissingException(t);  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	aughtExceptionHandler.handleMissingException(t);	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingArg(t);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  aughtExceptionHandler.handleMissingArg(t);  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	aughtExceptionHandler.handleMissingArg(t);	      if(stopAtNonOption)    {    if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
76	[BUG]  [BUGGY]  String  str  =(String)iterator.getIterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  String  str  =(String)iterator.getIterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	String  str  =(String)iterator.getIterator();	      String    str    =(String)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
77	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  group.equals(t))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(stopAtNonOption  ||  group.equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(stopAtNonOption  ||  group.equals(t))  {	  else    if(stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.next();  cmd.addArg(group);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.next();  cmd.addArg(group);  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	OptionGroup  group  =(OptionGroup)iterator.next();  cmd.addArg(group);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  OptionGroup  group  =  iterator.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  OptionGroup  group  =  iterator.next();  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	OptionGroup  group  =  iterator.next();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  else  if(t  ==  null  ||   "-- ".equals(t))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t  ==  null  ||   "-- ".equals(t))  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t  ==  null  ||   "-- ".equals(t))  {	  else    if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  else  if(t  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  else  if(t  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	else  if(t  ==  null  ||  str.length()  ==  0)  {	  else    if(t    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  String>  iterator  =  requiredOptions.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  String>  iterator  =  requiredOptions.iterator();	      Iterator    <    String>    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  requiredOptions.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  Iterator  it  =  neededOptions.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  it  =  neededOptions.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  it  =  neededOptions.iterator();	      Iterator    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
85	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Iterator  <  Option>  it  =  requiredOptions.iterator();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Iterator  <  Option>  it  =  requiredOptions.iterator();	      Iterator    <    Option>    it    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
86	[BUG]  [BUGGY]  Option  cmd  =(Option)iterator.clone();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  Option  cmd  =(Option)iterator.clone();  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	Option  cmd  =(Option)iterator.clone();	      Option    cmd    =(Option)iterator.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  ==  [Delete]  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	==  [Delete]	      if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
88	[BUG]  [BUGGY]  >=  [Delete]  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  >=  [Delete]  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	>=  [Delete]	      if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
89	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  }      [BUGGY]  >>  [BUGGY]    else  if  (   "-   ".equals(t))    {  {  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  cmd.addArg(t);  }  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli28/src/java/org/apache/commons/cli/Parser.java	0.25	188	189	1	replace	>>	      if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
