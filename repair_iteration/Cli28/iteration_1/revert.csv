projects/Cli28/src/java/org/apache/commons/cli/Parser.java268
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268properties.add(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Propertiesproperties=options.getProperty(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268if(opt.hasArg()){requiredOptions.add(opt);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268options.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268if(opt.hasArg()){requiredOptions.remove(0);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169eatTheRest=true;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("--");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("--");stopAtNonOption=true;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("--");stopAtNonOption;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("--");stopAtNonOption=false;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293options.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293opt.addValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293opt.addOption(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293option=options.getOption(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293options.addOption(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()&&value!=null){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(!opt.hasArg()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()||opt.hasArg()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if(opt.getValues()==null||opt.getValues().length==0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if(value!=null||opt.getValues()==null||opt.getValues().length==0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if(option.getValues()==null||opt.getValues().length==0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if(value==null||opt.getValues().length==0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=properties.getProperty(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=properties.get(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=options.getProperty(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=properties.getKey(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt.addArg(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272value=properties.getArg(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt.addValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272Opt.addArg(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt=opt.getArg();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276opt.addValueForProcessing(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276opt.addValueForProcessing(value,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276opt.addValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276opt.addValueForProcesing(value,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270opt.addValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270opt.addValueForProcessing(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){if(opt.hasArg()){return;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270booleanexp=options.hasOption(option)&&opt.hasArg();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270booleanexp=options.hasOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addOption(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addOption(opt,value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){if(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value))){break;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){if(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"false".equalsIgnoreCase(value))){break;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){if(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value))){break;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){if(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"false".equalsIgnoreCase(value)))}break;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions=newArrayList<Option>();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions.clear();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions=newArrayList<CommandLine>();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newString[0];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newString[1];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newString[2];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newString[4];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=options.getOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=options().getOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option,options.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValues();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getKey();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValues().toString();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=(String)opt.getValues();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265cmd.addOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265requiredOptions.add(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265requiredOptions.remove(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265cmd.addValue(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265options.add(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,false);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103returnparseOptions(options,arguments,properties,true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,null);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)))
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value))){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"2".equalsIgnoreCase(value))){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValue(opt.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValue();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addChildToFront(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293cmd.addOption(opt,true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103requiredOptions.remove(options.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties,false);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103requiredOptions.remove(arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties,true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){if(opt.getValues()==null||opt.getValues().length==0){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){if(opt.getValues()==null||opt.getValues().length==0){addValueForProcessing(value);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){if(opt.getValues()==null||opt.getValues().length==0){return;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){if(opt.getValues()==null){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newString[7];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newString[8];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=opt.getProperty(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=opt.getProperty(property);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276opt.addValueToProcessing(value,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276opt.addValueForProcessing(value,property);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293if(opt.hasArg()){opt.addValue(value);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293if(opt.hasArg()){Optionopt=options.getOption(opt);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293if(opt.hasArg()){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()&&opt.hasArg()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265option=cmd.getOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265e.removeFirstElement();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265processOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268opt.addValue(opt.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268opt.addValueToProcessing(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268opt.addValue(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268opt.addValueFor(opt.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268if(opt.hasArg()){continue;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt.addValueForArgualProperty(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt.addValueForArg(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt=getOptions().getArg(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().createOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().removeOption(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){Stringvalue=opt.getValue();if(value!=null){break;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284opt.addValueForProcessing(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){opt.addValueForAssignmentToName(value);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){if(opt.hasArg()){break;}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if(opt.hasArg()){opt.addValueForProcessing(value);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if(opt.getValues()!=null||opt.getValues().length==0){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if((opt.getValues()==null)||(opt.getValues().length==0)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if(options.hasOption(opt)&&(opt.getValues()==null||opt.getValues().length==0)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("");
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg(arguments);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("");eatTheRest=true;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("");stopAtNonOption;
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"1".equalsIgnoreCas
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValues().substring(0,opt.getValues().length);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValues().substring(0,opt.getValues().length).trim();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValues().substring(0,opt.getKey());
projects/Cli28/src/java/org/apache/commons/cli/Parser.java276Stringvalue=opt.getValues().substring(0,opt.getValues().length-1);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt.addValueForArgs(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272opt.addValueForArgument(value);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"2".equalsIgnoreCase(value)
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if((opt.getValues()==null)||("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value))
projects/Cli28/src/java/org/apache/commons/cli/Parser.java284if("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value));
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293if(opt.hasArg()){requiredOptions.remove(opt.getKey());}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293if(opt.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java293if(opt.hasArg()){thrownewRuntimeException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,false,options.mapping);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268if(opt.hasArg()){thrownewRuntimeException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268opt.addValueForProcessing(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268if(opt.hasArg()){try{opt.addValueForProcessing(value);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268if(opt.hasArg()){try{opt.addValueForProcessing(option);}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268cmd.addOption(opt);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){thrownewRuntimeException("");}
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270booleanexp=options.isRequired(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(option.hasArg()&&value!=null){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()&&value==null){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if((opt.getValues()==null||opt.getValues().length==0)&&!opt.hasArg()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if((opt.getValues()==null||opt.getValues().length==0)&&!opt.hasOptionalArg()){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java272if((opt.getValues()==null||opt.getValues().length==0)&&!Options.isRequired(value)){
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265e.removeProperty(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265processOption(e,cmd);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169arguments=newArrayList[0];
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("");requiredOptions=options.getRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("");requiredOptions=options.getOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java169cmd.addArg("");requiredOptions=options.getAllRequiredOptions();
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103cmd.parseOptions(options,arguments,properties);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java103requiredOptions.clear();cmd.parse(options,arguments,properties,true);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=properties!=null?properties.getProperty(option):properties.getProperty(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java268Stringvalue=properties!=null?properties.getProperty(option):properties.get(option);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option,e);
projects/Cli28/src/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option,option);
